{
  "version": 3,
  "sources": ["../../node_modules/@remix-run/dev/compiler/shims/react.ts", "../../node_modules/remix/index.js", "<stdin>", "server-entry-module:@remix-run/dev/server-build", "../../app/entry.server.tsx", "/Users/newll/Desktop/MyDuo/app/root.tsx", "/Users/newll/Desktop/MyDuo/app/routes/skill/$title/$chapter.tsx", "../../app/db.server.ts", "../../app/modules/Lesson/index.tsx", "../../app/components/Progress.tsx", "../../app/components/lib.tsx", "../../app/modules/Lesson/reducer.ts", "../../app/modules/Lesson/components/Results.tsx", "../../app/utils.ts", "../../app/modules/Lesson/components/lib.ts", "../../app/modules/Lesson/components/Footer.tsx", "../../app/modules/Lesson/components/InsertWords/index.tsx", "../../app/modules/Lesson/components/Lesson.tsx", "../../app/modules/Lesson/components/InsertWords/InsertWordsScreen.tsx", "../../app/modules/Constructor/Levels/components/lib.tsx", "../../app/modules/Lesson/components/InsertWords/Puzzle.tsx", "../../app/modules/Lesson/components/InsertWords/lib.ts", "../../app/modules/Lesson/components/InsertWords/Variants.tsx", "../../app/modules/Lesson/components/InsertWords/Text.tsx", "../../app/modules/Lesson/components/Pairs.tsx", "../../app/modules/Lesson/components/PairsScreen.tsx", "../../app/modules/Lesson/components/QuestionAnswer/index.tsx", "../../app/modules/Lesson/components/QuestionAnswer/QuestionAnswerScreen.tsx", "../../app/modules/Lesson/components/Variants.tsx", "../../app/modules/Constructor/Levels/components/VariantsScreen.tsx", "../../app/models/language.server.ts", "../../app/session.server.ts", "../../app/models/user.server.ts", "../../app/models/topic.server.ts", "/Users/newll/Desktop/MyDuo/app/routes/skill/$title/practice.tsx", "/Users/newll/Desktop/MyDuo/app/routes/$language.tsx", "../../app/components/Menu.tsx", "../../app/components/Projects.tsx", "../../app/models/lesson.server.ts", "/Users/newll/Desktop/MyDuo/app/routes/$language/constructor/$topicId.tsx", "../../app/modules/Constructor/index.tsx", "../../app/modules/Constructor/components/TopicInfo.tsx", "../../app/modules/Constructor/components/lib.ts", "../../app/modules/Constructor/Levels/reducer.ts", "../../app/modules/Constructor/Levels/actions.ts", "../../app/modules/Constructor/Levels/index.tsx", "../../app/modules/Constructor/Levels/components/QuestionAnswer.tsx", "../../app/modules/Constructor/components/Keywords.tsx", "../../app/modules/Constructor/components/Keyword.tsx", "../../app/modules/Constructor/Levels/components/Variants.tsx", "../../app/modules/Constructor/Levels/components/MatchingPairs/reducer.ts", "../../app/modules/Constructor/Levels/components/MatchingPairs/actions.ts", "../../app/modules/Constructor/Levels/components/MatchingPairs/index.tsx", "../../app/modules/Constructor/Levels/components/MatchingPairs/MatchingPairs.tsx", "../../app/modules/Constructor/Levels/components/InsertWords/index.tsx", "../../app/modules/Constructor/Levels/components/InsertWords/InsertWords.tsx", "../../app/modules/Constructor/Levels/components/InsertWords/Backend.tsx", "../../app/modules/Constructor/Levels/components/InsertWords/ChooseMissingWords.tsx", "../../app/modules/Constructor/Levels/components/ChooseStyleScreen.tsx", "../../app/modules/Constructor/Levels/components/Sidebar.tsx", "/Users/newll/Desktop/MyDuo/app/routes/$language/constructor/new.tsx", "/Users/newll/Desktop/MyDuo/app/routes/$language/skills.tsx", "../../app/components/WeeklyProgress.tsx", "../../app/components/SkillsList.tsx", "../../app/components/Footer.tsx", "../../app/components/LessonItem.tsx", "../../app/hooks/useOnClickOutside.ts", "../../app/components/PracticeLastAdded.tsx", "/Users/newll/Desktop/MyDuo/app/routes/practice.tsx", "/Users/newll/Desktop/MyDuo/app/routes/logout.tsx", "/Users/newll/Desktop/MyDuo/app/routes/repeat.tsx", "/Users/newll/Desktop/MyDuo/app/routes/index.tsx", "/Users/newll/Desktop/MyDuo/app/routes/login.tsx", "../../app/components/Login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "/**\n * @remix-run/node v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar node = require('@remix-run/node');\n\n\n\nObject.defineProperty(exports, 'createCookie', {\n  enumerable: true,\n  get: function () { return node.createCookie; }\n});\nObject.defineProperty(exports, 'createCookieSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createCookieSessionStorage; }\n});\nObject.defineProperty(exports, 'createFileSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createFileSessionStorage; }\n});\nObject.defineProperty(exports, 'createMemorySessionStorage', {\n  enumerable: true,\n  get: function () { return node.createMemorySessionStorage; }\n});\nObject.defineProperty(exports, 'createSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createSessionStorage; }\n});\nObject.defineProperty(exports, 'unstable_createFileUploadHandler', {\n  enumerable: true,\n  get: function () { return node.unstable_createFileUploadHandler; }\n});\nObject.defineProperty(exports, 'unstable_createMemoryUploadHandler', {\n  enumerable: true,\n  get: function () { return node.unstable_createMemoryUploadHandler; }\n});\nObject.defineProperty(exports, 'unstable_parseMultipartFormData', {\n  enumerable: true,\n  get: function () { return node.unstable_parseMultipartFormData; }\n});\n\n/**\n * @remix-run/server-runtime v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar serverRuntime = require('@remix-run/server-runtime');\n\n\n\nObject.defineProperty(exports, 'createSession', {\n  enumerable: true,\n  get: function () { return serverRuntime.createSession; }\n});\nObject.defineProperty(exports, 'isCookie', {\n  enumerable: true,\n  get: function () { return serverRuntime.isCookie; }\n});\nObject.defineProperty(exports, 'isSession', {\n  enumerable: true,\n  get: function () { return serverRuntime.isSession; }\n});\nObject.defineProperty(exports, 'json', {\n  enumerable: true,\n  get: function () { return serverRuntime.json; }\n});\nObject.defineProperty(exports, 'redirect', {\n  enumerable: true,\n  get: function () { return serverRuntime.redirect; }\n});\n\n/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar react = require('@remix-run/react');\n\n\n\nObject.defineProperty(exports, 'Form', {\n  enumerable: true,\n  get: function () { return react.Form; }\n});\nObject.defineProperty(exports, 'Link', {\n  enumerable: true,\n  get: function () { return react.Link; }\n});\nObject.defineProperty(exports, 'Links', {\n  enumerable: true,\n  get: function () { return react.Links; }\n});\nObject.defineProperty(exports, 'LiveReload', {\n  enumerable: true,\n  get: function () { return react.LiveReload; }\n});\nObject.defineProperty(exports, 'Meta', {\n  enumerable: true,\n  get: function () { return react.Meta; }\n});\nObject.defineProperty(exports, 'NavLink', {\n  enumerable: true,\n  get: function () { return react.NavLink; }\n});\nObject.defineProperty(exports, 'Outlet', {\n  enumerable: true,\n  get: function () { return react.Outlet; }\n});\nObject.defineProperty(exports, 'PrefetchPageLinks', {\n  enumerable: true,\n  get: function () { return react.PrefetchPageLinks; }\n});\nObject.defineProperty(exports, 'RemixBrowser', {\n  enumerable: true,\n  get: function () { return react.RemixBrowser; }\n});\nObject.defineProperty(exports, 'RemixServer', {\n  enumerable: true,\n  get: function () { return react.RemixServer; }\n});\nObject.defineProperty(exports, 'Scripts', {\n  enumerable: true,\n  get: function () { return react.Scripts; }\n});\nObject.defineProperty(exports, 'ScrollRestoration', {\n  enumerable: true,\n  get: function () { return react.ScrollRestoration; }\n});\nObject.defineProperty(exports, 'useActionData', {\n  enumerable: true,\n  get: function () { return react.useActionData; }\n});\nObject.defineProperty(exports, 'useBeforeUnload', {\n  enumerable: true,\n  get: function () { return react.useBeforeUnload; }\n});\nObject.defineProperty(exports, 'useCatch', {\n  enumerable: true,\n  get: function () { return react.useCatch; }\n});\nObject.defineProperty(exports, 'useFetcher', {\n  enumerable: true,\n  get: function () { return react.useFetcher; }\n});\nObject.defineProperty(exports, 'useFetchers', {\n  enumerable: true,\n  get: function () { return react.useFetchers; }\n});\nObject.defineProperty(exports, 'useFormAction', {\n  enumerable: true,\n  get: function () { return react.useFormAction; }\n});\nObject.defineProperty(exports, 'useHref', {\n  enumerable: true,\n  get: function () { return react.useHref; }\n});\nObject.defineProperty(exports, 'useLoaderData', {\n  enumerable: true,\n  get: function () { return react.useLoaderData; }\n});\nObject.defineProperty(exports, 'useLocation', {\n  enumerable: true,\n  get: function () { return react.useLocation; }\n});\nObject.defineProperty(exports, 'useMatches', {\n  enumerable: true,\n  get: function () { return react.useMatches; }\n});\nObject.defineProperty(exports, 'useNavigate', {\n  enumerable: true,\n  get: function () { return react.useNavigate; }\n});\nObject.defineProperty(exports, 'useNavigationType', {\n  enumerable: true,\n  get: function () { return react.useNavigationType; }\n});\nObject.defineProperty(exports, 'useOutlet', {\n  enumerable: true,\n  get: function () { return react.useOutlet; }\n});\nObject.defineProperty(exports, 'useOutletContext', {\n  enumerable: true,\n  get: function () { return react.useOutletContext; }\n});\nObject.defineProperty(exports, 'useParams', {\n  enumerable: true,\n  get: function () { return react.useParams; }\n});\nObject.defineProperty(exports, 'useResolvedPath', {\n  enumerable: true,\n  get: function () { return react.useResolvedPath; }\n});\nObject.defineProperty(exports, 'useSearchParams', {\n  enumerable: true,\n  get: function () { return react.useSearchParams; }\n});\nObject.defineProperty(exports, 'useSubmit', {\n  enumerable: true,\n  get: function () { return react.useSubmit; }\n});\nObject.defineProperty(exports, 'useTransition', {\n  enumerable: true,\n  get: function () { return react.useTransition; }\n});\n\n", "export * from \"@remix-run/dev/server-build\";", "\nimport * as entryServer from \"/Users/newll/Desktop/MyDuo/app/entry.server.tsx\";\nimport * as route0 from \"/Users/newll/Desktop/MyDuo/app/root.tsx\";\nimport * as route1 from \"/Users/newll/Desktop/MyDuo/app/routes/skill/$title/$chapter.tsx\";\nimport * as route2 from \"/Users/newll/Desktop/MyDuo/app/routes/skill/$title/practice.tsx\";\nimport * as route3 from \"/Users/newll/Desktop/MyDuo/app/routes/$language.tsx\";\nimport * as route4 from \"/Users/newll/Desktop/MyDuo/app/routes/$language/constructor/$topicId.tsx\";\nimport * as route5 from \"/Users/newll/Desktop/MyDuo/app/routes/$language/constructor/new.tsx\";\nimport * as route6 from \"/Users/newll/Desktop/MyDuo/app/routes/$language/skills.tsx\";\nimport * as route7 from \"/Users/newll/Desktop/MyDuo/app/routes/practice.tsx\";\nimport * as route8 from \"/Users/newll/Desktop/MyDuo/app/routes/logout.tsx\";\nimport * as route9 from \"/Users/newll/Desktop/MyDuo/app/routes/repeat.tsx\";\nimport * as route10 from \"/Users/newll/Desktop/MyDuo/app/routes/index.tsx\";\nimport * as route11 from \"/Users/newll/Desktop/MyDuo/app/routes/login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/skill/$title/$chapter\": {\n      id: \"routes/skill/$title/$chapter\",\n      parentId: \"root\",\n      path: \"skill/:title/:chapter\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/skill/$title/practice\": {\n      id: \"routes/skill/$title/practice\",\n      parentId: \"root\",\n      path: \"skill/:title/practice\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/$language\": {\n      id: \"routes/$language\",\n      parentId: \"root\",\n      path: \":language\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/$language/constructor/$topicId\": {\n      id: \"routes/$language/constructor/$topicId\",\n      parentId: \"routes/$language\",\n      path: \"constructor/:topicId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/$language/constructor/new\": {\n      id: \"routes/$language/constructor/new\",\n      parentId: \"routes/$language\",\n      path: \"constructor/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/$language/skills\": {\n      id: \"routes/$language/skills\",\n      parentId: \"routes/$language\",\n      path: \"skills\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/practice\": {\n      id: \"routes/practice\",\n      parentId: \"root\",\n      path: \"practice\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/repeat\": {\n      id: \"routes/repeat\",\n      parentId: \"root\",\n      path: \"repeat\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    }\n  };", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import { Links, LiveReload, Outlet, Scripts } from \"remix\";\n\nfunction Document({\n  children,\n  title = `MyDuo`,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width,initial-scale=1,user-scalable=no\"\n        />\n        <title>{title}</title>\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@500;700&family=Roboto:wght@400;500;700&display=swap\"\n          rel=\"stylesheet\"\n        />\n        <Links />\n      </head>\n      <body style={{ margin: 0 }}>\n        {children}\n        <LiveReload />\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n\nexport default function App() {\n  return (\n    <Document>\n      <Outlet />\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  return (\n    <Document title=\"Uh-oh!\">\n      <div className=\"error-container\">\n        <h1>App Error</h1>\n        <pre>{error.message}</pre>\n      </div>\n    </Document>\n  );\n}\n", "import { redirect, useLoaderData, useParams } from \"remix\";\nimport type { LoaderFunction, ActionFunction } from \"remix\";\nimport { prisma } from \"~/db.server\";\nimport Lesson from \"~/modules/Lesson\";\nimport { getActiveLanguage } from \"~/models/language.server\";\nimport { updateCurrentChapter } from \"~/models/topic.server\";\nimport { increaseTodayExp } from \"~/models/user.server\";\n\nexport function ErrorBoundary() {\n  const { title, chapter } = useParams();\n  return (\n    <div className=\"error-container\">{`There was an error loading skill with the title ${title} and chapter ${chapter}. Sorry.`}</div>\n  );\n}\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const language = await getActiveLanguage(request);\n  const form = await request.formData();\n  const expData = Number(form.get(\"exp\"));\n  const title = params.title;\n\n  const topic = await prisma.topic.findUnique({\n    where: { title },\n  });\n\n  if (!topic) {\n    throw new Error(`Skill with this title: ${title} is underfined`);\n  }\n\n  await updateCurrentChapter(topic);\n\n  await increaseTodayExp(request, expData);\n\n  return redirect(`/${language?.title}/skills`);\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const topic = await prisma.topic.findFirst({\n    where: { title: params.title },\n  });\n\n  if (!topic) {\n    throw new Error(\"Skill is not found\");\n  }\n\n  const lessons = await prisma.lesson.findMany({\n    where: { id: { in: topic.lessonIDs }, chapter: Number(params.chapter) },\n  });\n\n  return lessons;\n};\n\nexport default function LessonScreen() {\n  const steps = useLoaderData();\n\n  return <Lesson steps={steps} />;\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// in production we'll have a single connection to the DB.\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  prisma = global.__db__;\n  prisma.$connect();\n}\n\nexport { prisma };\n", "import {\n  useEffect,\n  Fragment,\n  useContext,\n  createContext,\n  createRef,\n} from \"react\";\n\nimport Progress from \"~/components/Progress\";\nimport { useSkillReducer, defaultSkillContextState } from \"./reducer\";\nimport { useSubmit } from \"@remix-run/react\";\nimport { Results } from \"./components/Results\";\nimport Footer from \"./components/Footer\";\nimport { LessonContainer } from \"./components/lib\";\nimport { Lesson as LessonType } from \"@prisma/client\";\nimport InsertWords from \"./components/InsertWords\";\nimport Pairs from \"./components/Pairs\";\nimport QuestionAnswerPractice from \"./components/QuestionAnswer\";\nimport VariantsPractice from \"./components/Variants\";\nimport { SkillContextType } from \"./types\";\n\nconst SkillContext = createContext<SkillContextType>(defaultSkillContextState);\nSkillContext.displayName = \"SkillContext\";\n\nexport function useSkill() {\n  const context = useContext(SkillContext);\n  if (context === undefined) {\n    throw new Error(\"useSkill must be used within a <Lesson />\");\n  }\n  return context;\n}\n\nexport default function Skill({ steps }: { steps: LessonType[] }) {\n  const resultsFormRef = createRef<HTMLFormElement>();\n\n  const value = useSkillReducer();\n  const submit = useSubmit();\n\n  const { setup, topicState, continueTopic } = value;\n  const { status } = topicState;\n\n  useEffect(() => {\n    setup(steps); // Ones the data is loaded, we set the it in reducer\n  }, []);\n\n  const onContinue = () => {\n    if (status === \"results\") {\n      return submit(resultsFormRef.current, { replace: true });\n    }\n    return continueTopic();\n  };\n\n  return (\n    <SkillContext.Provider value={{ ...value, continueTopic: onContinue }}>\n      <LessonContainer>\n        {status === \"results\" ? (\n          <Fragment>\n            <Results onSubmit={onContinue} ref={resultsFormRef} />\n            <Footer />\n          </Fragment>\n        ) : (\n          <Fragment>\n            <Progress />\n            <QuestionAnswerPractice />\n            <InsertWords />\n            <VariantsPractice />\n            <Pairs />\n          </Fragment>\n        )}\n      </LessonContainer>\n    </SkillContext.Provider>\n  );\n}\n", "import CloseIcon from \"~/styles/close.svg\";\nimport {\n  ProgressBar,\n  ProgressBarContainer,\n  ProgressLeaveLesson,\n} from \"~/components/lib\";\nimport { useSkillReducer } from \"~/modules/Lesson/reducer\";\nimport { useLesson } from \"~/modules/Lesson/components/Les/Les\";\nimport { useSkill } from \"~/modules/Lesson\";\n\n// const Progress = ({ progress }: { progress: number }) => {\nconst Progress = () => {\n  const { progress } = useSkill();\n  return (\n    <ProgressBarContainer>\n      <ProgressLeaveLesson to=\"/\">\n        <img\n          src={CloseIcon}\n          alt=\"Close the topic\"\n          width={16}\n          height={16}\n          style={{ verticalAlign: \"initial\" }}\n        />\n      </ProgressLeaveLesson>\n      <ProgressBar progress={progress} />\n    </ProgressBarContainer>\n  );\n};\n\nexport default Progress;\n", "import styled from \"@emotion/styled\";\nimport { NavLink, Link } from \"@remix-run/react\";\n\ntype FormButtonProps = {\n  active?: boolean;\n};\n\ntype ProgressProps = {\n  progress: number;\n};\n\ntype KeywordProps = {\n  active: boolean;\n};\n\ntype OverlayProps = {\n  active: boolean;\n};\n\ntype LessonProgressProps = {\n  exp: string;\n};\n\ntype LessonBlockMenuProps = {\n  isOpened: boolean;\n};\n\nconst HorizontalList = styled.ul((props) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  margin: 0,\n  height: \"100%\",\n  padding: \"0 9px\",\n}));\n\nconst ListItem = styled.li((props) => ({\n  height: \"100%\",\n  margin: \"0 15px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  position: \"relative\",\n}));\n\nconst LessonsContainer = styled.section((props) => ({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  justifyContent: \"center\",\n  // marginBottom: \"52px\",\n  position: \"relative\",\n}));\n\nconst LessonsBlock = styled(\"div\")`\n  grid-column-gap: 12px;\n  display: grid;\n  grid-auto-columns: calc(33.33333% - 8px);\n  grid-auto-flow: column;\n  justify-content: center;\n  padding: 16px 12px;\n`;\n\nconst LessonBlock = styled(\"div\")`\n  width: 33%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LessonBlockMenu = styled(\"div\")<LessonBlockMenuProps>`\n  display: ${(props) => (props.isOpened ? \"block\" : \"none\")};\n  position: absolute;\n  left: 50%;\n  top: calc(100% + 20px);\n  transform: translate(-50%);\n  z-index: 1;\n`;\n\nconst LessonBlockMenuTriangle = styled(\"div\")`\n  left: calc(50% - 15px);\n  transform: translateX(-50%);\n  margin: 0 15px;\n  top: -8px;\n  height: 10px;\n  overflow: hidden;\n  width: 20px;\n  box-sizing: border-box;\n  position: absolute;\n`;\n\nconst LessonBlockMenuTriangleContent = styled(\"span\")`\n  background-color: #ce82ff;\n  border: 0;\n  position: absolute;\n  content: \"\";\n  border-radius: 2px;\n  height: 14.14427px;\n  left: 50%;\n  transform: rotate(45deg);\n  transform-origin: top left;\n  width: 14.14427px;\n`;\n\nconst LessonBlockInner = styled(\"div\")`\n  background-color: #ce82ff;\n  color: #fff;\n  padding: 16px;\n  text-align: center;\n  width: 300px;\n  box-sizing: border-box;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LessonBlockLink = styled(Link)`\n  color: #ce82ff;\n  background-color: #fff;\n  flex-grow: 1;\n  text-transform: uppercase;\n  margin-top: 12px;\n  border-width: 0 0 4px;\n  padding: 13px 16px;\n  font-size: 15px;\n  line-height: 20px;\n  border-color: inherit;\n  border-radius: 18px;\n  text-decoration: none;\n  font-family: \"Roboto\";\n  font-weight: 500;\n  letter-spacing: 0.8px;\n`;\n\nconst LessonBlockButton = styled(\"button\")`\n  color: #ce82ff;\n  background-color: #fff;\n  flex-grow: 1;\n  text-transform: uppercase;\n  margin-top: 12px;\n  margin-left: 10px;\n  border-width: 0 0 4px;\n  padding: 13px 16px;\n  font-size: 15px;\n  line-height: 20px;\n  border-color: inherit;\n  border-radius: 18px;\n  text-decoration: none;\n  font-family: \"Roboto\";\n  font-weight: 500;\n  letter-spacing: 0.8px;\n`;\n\nconst LessonBlockTitle = styled(\"div\")`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  margin: 0 26px;\n  padding-bottom: 20px;\n  text-align: center;\n  width: 100%;\n  & span {\n    height: 2px;\n    background-color: #e5e5e5;\n    flex-grow: 1;\n  }\n  & h2 {\n    font-size: 24px;\n    font-weight: 700;\n    font-family: \"Roboto\";\n    color: #4b4b4b;\n    flex-grow: 0.3;\n  }\n`;\n\nconst LessonBlockItem = styled.a(() => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  width: \"33.33%\",\n  textDecoration: \"none\",\n}));\n\nconst UserImage = styled.img(\n  {\n    borderRadius: \"100%\",\n  },\n  (props) => ({ width: props.width, height: props.height })\n);\n\nconst ProgressBarContainer = styled(\"div\")`\n  width: 100%;\n  margin-top: 1px;\n  border-top: 1px solid #dbdddd;\n  padding-top: 46px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ProgressBar = styled(\"div\")<ProgressProps>`\n  width: 61%;\n  height: 16px;\n  position: relative;\n  background-color: #e5e5e5;\n  position: relative;\n  border-radius: 7px;\n  &:before,\n  &:after {\n    content: \"\";\n    display: block;\n    width: ${(props) => props.progress * 100}%;\n    height: 16px;\n    background-color: #58cc02;\n    position: absolute;\n    top: 0;\n    left: 0;\n    border-radius: 7px;\n  }\n  &:after {\n    height: 30%;\n    top: 25%;\n    left: 8px;\n    right: 8px;\n    width: calc(${(props) => props.progress * 100}% - 16px);\n    background: white;\n    opacity: 0.2;\n  }\n`;\n\nconst ProgressLeaveLesson = styled(Link)`\n  margin-right: 21px;\n  height: 16px;\n  margin-top: -3px;\n`;\n\nconst Input = styled(\"input\")`\n  background-color: #f7f7f7;\n  border: 1px solid #e5e5e5;\n  border-radius: 10px;\n  padding: 10px 12px;\n  width: 100%;\n`;\n\nconst Textarea = styled(\"textarea\")`\n  background-color: rgb(247, 247, 247);\n  border: 2px solid rgb(229, 229, 229);\n  border-color: rgb(229, 229, 229);\n  border-radius: 10px;\n  padding: 10px 12px;\n  min-height: 200px;\n  width: 100%;\n  -webkit-appearance: none;\n  resize: none;\n  flex-grow: 1;\n  box-sizing: border-box;\n  position: relative;\n  z-index: 1;\n\n  line-height: 24px;\n  color: rgba(60, 60, 60, 0.8);\n  font-size: 19px;\n  font-family: \"Roboto\";\n  font-weight: 400;\n  letter-spacing: 1px;\n`;\n\nconst LoginTitle = styled(\"h1\")`\n  font-size: 26px;\n  margin: 10px 0 15px;\n  font-family: Montserrat;\n  font-weight: 700;\n  text-align: center;\n`;\n\nconst Fieldset = styled(\"fieldset\")`\n  margin-top: 20px;\n`;\n\nconst InputTextLabel = styled(\"label\")`\n  width: 49%;\n  margin-right: 1%;\n`;\n\nconst TextareaLabel = styled(\"label\")`\n  width: 100%;\n`;\n\nconst LabelText = styled(\"span\")`\n  margin-bottom: 10px;\n  display: block;\n  cursor: pointer;\n  color: #4b4b4b;\n  font-size: 15px;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 700;\n  letter-spacing: 0.6px;\n`;\n\nconst Legend = styled(\"legend\")`\n  color: #4b4b4b;\n  font-size: 34px;\n  font-weight: 700;\n  line-height: 1.6;\n  margin-bottom: 14px;\n  margin-top: 0;\n  text-align: center;\n  font-family: \"Montserrat\", sans-serif;\n`;\n\nconst FormButton = styled(\"button\")<FormButtonProps>`\n  background-color: ${(props) =>\n    props.active ? \"#78C83D\" : props.disabled ? \"#E5E5E5\" : \"#fff\"};\n  color: ${(props) =>\n    props.active ? \"#fff\" : props.disabled ? \"#AFAFAF\" : \"#1cb0f6\"};\n  border: ${(props) => (props.active ? \"none\" : \"2px solid #e5e5e5\")};\n  height: 50px;\n  box-shadow: ${(props) =>\n    props.active ? \"0px -4px 0px 0px rgba(108, 164, 48, 1) inset\" : \"none\"};\n  cursor: ${(props) => (props.disabled ? \"default\" : \"pointer\")};\n  width: 150px;\n  text-transform: uppercase;\n  font-family: \"Montserrat\";\n  font-size: 15px;\n  font-weight: 700;\n  letter-spacing: 0.3px;\n  border-radius: 15px;\n`;\n\nconst KeywordTemplate = styled(\"span\")<KeywordProps>`\n  margin-right: 10px;\n  cursor: pointer;\n  border: ${(props) => props.active && \"1px solid blue\"};\n`;\n\nconst LessonProgress = styled(\"div\")<LessonProgressProps>`\n  animation: growProgressBar 3s 1 forwards;\n  width: 106px;\n  height: 106px;\n  border-radius: 50%;\n  display: grid;\n  place-items: center;\n  background: radial-gradient(\n      closest-side,\n      white 85%,\n      transparent 0 99.9%,\n      white 0\n    ),\n    conic-gradient(#ffd900 calc(${(props) => props.exp} * 1%), #e5e5e5 0);\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 18px;\n  font-weight: 700;\n  font-family: \"Roboto\";\n  color: #1cb0f6;\n  position: relative;\n`;\n\nconst LessonProgressInner = styled(\"div\")`\n  border-radius: 50%;\n  height: 68%;\n  left: 50%;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 68%;\n  background: #ce82ff;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Main = styled(\"main\")`\n  padding: 24px 10% 0;\n  display: flex;\n  justify-content: space-between;\n  overflow-x: hidden;\n`;\n\nconst LessonTitle = styled(\"b\")`\n  font-size: 17px;\n  font-weight: 700;\n  color: #3c3c3c;\n  text-align: center;\n  margin-top: 8px;\n  display: block;\n`;\n\nconst NavIcon = styled(\"img\")`\n  margin-right: 10px;\n  width: 36px;\n  height: 36px;\n`;\n\nconst LoginContainer = styled(\"section\")`\n  padding: 30px;\n  height: 100vh;\n  left: 0;\n  overflow-y: auto;\n  top: 0;\n  width: 100vw;\n  box-sizing: border-box;\n`;\n\nconst LoginContinerInner = styled(`div`)`\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  position: relative;\n  width: 100%;\n`;\n\nconst LoginInput = styled(\"input\")`\n  background: transparent;\n  flex-grow: 1;\n  line-height: 27px;\n  width: 100%;\n  box-sizing: border-box;\n  font-family: \"Roboto\", sans-serif;\n  outline: none;\n  font-size: 100%;\n  background: #f7f7f7;\n  border: 2px solid #e5e5e5;\n  border-radius: 16px;\n  padding: 8px 16px;\n  display: inline-flex;\n  margin-top: 8px;\n`;\n\nconst LoginButton = styled(\"button\")`\n  margin-top: 20px;\n  width: 100%;\n  letter-spacing: 0.8px;\n  font: 700 15px \"Roboto\";\n  padding: 0 16px;\n  height: 50px;\n  color: white;\n  border: none;\n  border-bottom: 4px solid rgba(133, 133, 133, 0.5);\n  border-radius: 16px;\n  cursor: pointer;\n  text-transform: uppercase;\n  background-color: #1cb0f6;\n`;\n\nconst LoginToggle = styled(\"label\")`\n  position: absolute;\n  top: 0;\n  right: 0;\n  letter-spacing: 0.8px;\n  font: 700 15px \"Roboto\";\n  line-height: 1.2;\n  padding: 0 16px;\n  height: 50px;\n  color: #1cb0f6;\n  border: 1px solid #e5e5e5;\n  border-bottom: 4px solid #e5e5e5;\n  border-radius: 16px;\n  cursor: pointer;\n  text-transform: uppercase;\n  background-color: white;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst MenuContainer = styled(\"div\")`\n  height: 71px;\n  width: 100vw;\n  border-top: 1px solid #dadcde;\n  border-bottom: 2px solid #dadcde;\n  padding: 0 10%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst MenuNavLink = styled(NavLink)`\n  text-decoration: none;\n  text-transform: uppercase;\n  font-family: \"Montserrat\";\n  font-weight: 700;\n  color: #afafaf;\n  letter-spacing: 0.8px;\n  display: flex;\n  align-items: center;\n`;\n\nconst ActiveLanguageButton = styled(\"button\")`\n  color: #3c3c3c;\n  border: none;\n  background-color: inherit;\n  font-family: \"Montserrat\";\n  font-weight: 700;\n  letter-spacing: 0.8px;\n  cursor: pointer;\n`;\n\nconst ActiveLanguageContainer = styled(\"div\")`\n  position: absolute;\n  top: 40px;\n  right: -30px;\n  width: 200px;\n  padding: 20px 0;\n  z-index: 9;\n`;\n\nconst LanguagesContainer = styled(\"div\")`\n  border: 2px solid #dadcde;\n  border-radius: 15px;\n  background-color: white;\n`;\n\nconst LanguagesList = styled(\"ul\")`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LanguagesItem = styled(\"button\")`\n  border: none;\n  border-bottom: 2px solid #dadcde;\n  width: 100%;\n  cursor: pointer;\n  padding: 20px 20px;\n  background-color: inherit;\n  color: #3c3c3c;\n  font-family: \"Montserrat\";\n  font-weight: 700;\n  letter-spacing: 0.8px;\n  text-align: left;\n`;\n\nconst LanguagesInput = styled(\"input\")`\n  border: none;\n  border-bottom: 2px solid #dadcde;\n  border-radius: 0 0 10px 10px;\n  width: 100%;\n  cursor: pointer;\n  padding: 20px 30px 20px 20px;\n  background-color: inherit;\n  color: #3c3c3c;\n  font-family: \"Montserrat\";\n  font-weight: 700;\n  letter-spacing: 0.8px;\n  text-align: left;\n`;\n\nconst LanguagesAddBtn = styled(\"button\")`\n  position: absolute;\n  font-size: 30px;\n  top: 7px;\n  right: 15px;\n  color: #afafaf;\n`;\n\nconst Overlay = styled(\"div\")<OverlayProps>`\n  background: rgba(28, 97, 130, 0.1);\n  bottom: 0;\n  left: 0;\n  opacity: ${(props) => (props.active ? 1 : 0)};\n  pointer-events: none;\n  position: fixed;\n  right: 0;\n  top: 71px;\n  transition: opacity 0.3s;\n`;\n\nconst Logout = styled(\"button\")`\n  border: none;\n  cursor: pointer;\n  background-color: inherit;\n  color: #afafaf;\n  font-family: \"Montserrat\";\n  font-weight: 700;\n  letter-spacing: 0.8px;\n  padding: 0;\n`;\n\nconst PracticeLastAddedContainer = styled(\"div\")`\n  border-width: 2px 2px 4px;\n  height: 72px;\n  width: 72px;\n  border-radius: 50%;\n  border: solid #e5e5e5;\n  position: sticky;\n  margin-bottom: 54px;\n  bottom: 24px;\n`;\n\nconst PracticeLastAddedLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst ErrorMessage = styled(\"p\")`\n  line-height: 20px;\n  font-family: \"Roboto\", sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n  letter-spacing: 0.3px;\n  color: #ea2b2b;\n`;\n\nconst ExpProgressBlock = styled(\"section\")`\n  background: #fff;\n  border: 2px solid #e5e5e5;\n  border-radius: 16px;\n  margin: 0 24px 24px;\n  padding: 24px;\n`;\n\nconst ExpProgressTitle = styled(\"h2\")`\n  color: #3c3c3c;\n  font-size: 24px;\n  line-height: 26px;\n  margin: 0 0 25px;\n  font-family: Montserrat;\n  font-weight: 700;\n`;\n\nconst FooterLine = styled(\"hr\")`\n  border: 0;\n  border-top: 2px solid #e5e5e5;\n  margin: 0 0 48px;\n`;\n\nconst FooterText = styled(\"p\")`\n  text-align: center;\n  color: #afafaf;\n  font-family: Roboto;\n  margin: 0;\n`;\n\nconst SkillsListContainer = styled(\"section\")`\n  width: 65%;\n  padding: 0 30px;\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 95px);\n`;\n\nconst TopicsLineBlock = styled(\"div\")`\n  width: 100%;\n  max-width: 440px;\n  margin: 0 auto 38px auto;\n`;\n\nexport {\n  ProgressBarContainer,\n  ProgressBar,\n  ProgressLeaveLesson,\n  HorizontalList,\n  ListItem,\n  NavLink,\n  LessonsBlock,\n  LessonBlock,\n  LessonsContainer,\n  LessonBlockLink,\n  LessonBlockButton,\n  LessonBlockInner,\n  LessonBlockTitle,\n  LessonBlockItem,\n  UserImage,\n  Input,\n  Textarea,\n  Fieldset,\n  InputTextLabel,\n  TextareaLabel,\n  LabelText,\n  Legend,\n  FormButton,\n  KeywordTemplate,\n  LessonProgress,\n  LessonProgressInner,\n  Main,\n  LessonTitle,\n  NavIcon,\n  LoginContainer,\n  LoginContinerInner,\n  LoginButton,\n  LoginInput,\n  LoginToggle,\n  MenuContainer,\n  MenuNavLink,\n  Logout,\n  Overlay,\n  ActiveLanguageButton,\n  ActiveLanguageContainer,\n  LanguagesContainer,\n  LanguagesList,\n  LanguagesItem,\n  LanguagesInput,\n  LanguagesAddBtn,\n  LessonBlockMenu,\n  LessonBlockMenuTriangle,\n  LessonBlockMenuTriangleContent,\n  LoginTitle,\n  PracticeLastAddedContainer,\n  PracticeLastAddedLink,\n  ErrorMessage,\n  ExpProgressBlock,\n  ExpProgressTitle,\n  FooterLine,\n  FooterText,\n  SkillsListContainer,\n  TopicsLineBlock,\n};\n", "import { Lesson } from \"@prisma/client\";\nimport { useReducer } from \"react\";\nimport { SkillState } from \"./types\";\n\n// The function returns next stepNumber if there is any\nconst continueContent = (content: Lesson, lessonSteps: Lesson[] | any) =>\n  lessonSteps.length > 0 ? lessonSteps.shift(0, 1) : content;\n\nenum actionTypes {\n  continue = \"CONTINUE\",\n  setup = \"SETUP\",\n  results = \"RESULTS\",\n  setStateRight = \"SET_STATE_RIGHT\",\n  setStateWrong = \"SET_STATE_WRONG\",\n  setCheckDisabled = \"SET_CHECK_DISABLED\",\n  updateState = \"UPDATE_STATE\",\n}\n\ntype Action =\n  | { type: actionTypes.setup; steps: Lesson[] }\n  | { type: actionTypes.continue }\n  | { type: actionTypes.results }\n  | { type: actionTypes.setCheckDisabled; disabled: boolean }\n  | { type: actionTypes.setStateRight }\n  | { type: actionTypes.setStateWrong }\n  | { type: actionTypes.updateState; update: {} };\n\nexport const basicState: SkillState = {\n  progress: 0,\n  stepNumber: 0,\n  content: {\n    id: \"\",\n    number: 0,\n    answer: [\"\"],\n    stepType: \"\",\n    question: \"\",\n    text: \"\",\n    keywords: [\"\"],\n    definition: \"\",\n    variants: [],\n    isToChoose: false,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    chapter: 1,\n    languageId: \"\",\n  },\n  lessonSteps: [], // Array of all steps\n  maxSteps: 0, // Max steps\n  topicState: { status: \"idle\", formDisabled: false, buttonDisabled: true },\n};\n\nfunction skillReducer(state: SkillState, action: Action): SkillState {\n  const { content, stepNumber, maxSteps, lessonSteps, topicState } = state;\n  const positiveState = {\n    ...state,\n    progress: stepNumber / maxSteps,\n    topicState: {\n      status: \"right\",\n      formDisabled: true,\n      buttonDisabled: false,\n    },\n  };\n  const negativeState = {\n    ...state,\n    lessonSteps: [...lessonSteps, content],\n    stepNumber: stepNumber - 1,\n    topicState: {\n      status: \"wrong\",\n      formDisabled: true,\n      buttonDisabled: false,\n    },\n  };\n  switch (action.type) {\n    case actionTypes.continue:\n      const isResults = stepNumber === maxSteps;\n      return {\n        ...state,\n        stepNumber: stepNumber + 1,\n        content: continueContent(content, lessonSteps),\n        topicState: {\n          ...topicState,\n          status: isResults ? \"results\" : \"idle\",\n          formDisabled: false,\n          buttonDisabled: isResults ? false : true,\n        },\n      };\n    case actionTypes.setup: // Initial action to set data right after loading component\n      const { steps } = action;\n      return {\n        ...basicState,\n        stepNumber: 1,\n        lessonSteps: steps,\n        maxSteps: steps.length,\n        content: steps.shift() as Lesson,\n      };\n    case actionTypes.results:\n      return {\n        ...state,\n        stepNumber: stepNumber + 1,\n        topicState: { ...topicState, status: \"results\" },\n      };\n    case actionTypes.setStateRight:\n      return positiveState;\n    case actionTypes.setStateWrong:\n      return negativeState;\n    case actionTypes.setCheckDisabled:\n      const { disabled } = action;\n      return {\n        ...state,\n        topicState: { ...topicState, buttonDisabled: disabled },\n      };\n    case actionTypes.updateState:\n      const { update } = action;\n      return { ...state, ...update };\n    default: {\n      throw new Error(`Unsupported action: ${action}`);\n    }\n  }\n}\n\nfunction useSkillReducer({\n  initialState = basicState,\n  reducer = skillReducer,\n} = {}) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { content, progress, topicState, stepNumber, maxSteps } = state;\n\n  const continueTopic = () => dispatch({ type: actionTypes.continue });\n  const setup = (steps: Lesson[]) =>\n    dispatch({ type: actionTypes.setup, steps });\n  const showResults = () => dispatch({ type: actionTypes.results });\n  const setStateRight = () => dispatch({ type: actionTypes.setStateRight });\n  const setStateWrong = () => dispatch({ type: actionTypes.setStateWrong });\n  const setCheckDisabled = (disabled: boolean) =>\n    dispatch({ type: actionTypes.setCheckDisabled, disabled });\n  const updateState = (update: {}) =>\n    dispatch({ type: actionTypes.updateState, update });\n\n  return {\n    content,\n    progress,\n    topicState,\n    stepNumber,\n    maxSteps,\n    continueTopic,\n    setup,\n    showResults,\n    setStateRight,\n    setStateWrong,\n    setCheckDisabled,\n    updateState,\n  };\n}\n\nconst defaultSkillContextState = {\n  ...basicState,\n  setup: () => {},\n  continueTopic: () => {},\n  showResults: () => {},\n  setStateRight: () => {},\n  setStateWrong: () => {},\n  setCheckDisabled: () => {},\n  updateState: () => {},\n};\n\nexport { useSkillReducer, skillReducer, defaultSkillContextState };\n", "import React from \"react\";\nimport { useFocus } from \"~/utils\";\nimport {\n  ResultsContainer,\n  ResultsHiddenForm,\n  ResultsLeftBlock,\n  ResultsSeparateLine,\n  ResultsTitle,\n} from \"./lib\";\n\nexport const Results = React.forwardRef<HTMLFormElement>((props, ref) => {\n  const containerRef = useFocus<HTMLDivElement>();\n\n  return (\n    <ResultsContainer\n      ref={containerRef}\n      onKeyDown={(e) => {\n        if (e.key === \"Enter\") {\n          props.onSubmit();\n        }\n      }}\n      tabIndex={0}\n    >\n      <ResultsHiddenForm method=\"post\" ref={ref}>\n        <input type=\"text\" name=\"exp\" value=\"16\" readOnly />\n      </ResultsHiddenForm>\n\n      <ResultsLeftBlock>\n        <ResultsTitle>Right answers and mistakes</ResultsTitle>\n      </ResultsLeftBlock>\n\n      <ResultsSeparateLine />\n\n      <ResultsLeftBlock />\n    </ResultsContainer>\n  );\n});\n", "import { useMatches } from \"@remix-run/react\";\nimport React, { useEffect, useMemo, useRef } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.username === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateUsername(username: unknown): username is string {\n  return typeof username === \"string\" && username.length > 3;\n}\n\nexport const useFocus = <T extends HTMLElement>(dependency: string) => {\n  const ref = useRef<T>(null);\n\n  useEffect(() => {\n    return ref.current?.focus();\n  }, [dependency]);\n\n  return ref;\n};\n\nexport const isItemInArray = (arr: string[], item: string) => {\n  return arr.find((arrItem) => arrItem === item);\n};\n\nexport const findInArrayById = (arr = [{ id: \"\" }], id: string) => {\n  return arr.find((arrItem) => (arrItem.id = id));\n};\n\nexport const doesItemContainSign = (item: string) => {\n  const newItem = item.split(\"\").slice(0, -1).join(\"\");\n  switch (item.slice(-1)) {\n    case \",\": {\n      return {\n        newItem,\n        sign: \",\",\n      };\n    }\n    case \".\": {\n      return {\n        newItem,\n        sign: \".\",\n      };\n    }\n    case \"?\": {\n      return {\n        newItem,\n        sign: \"?\",\n      };\n    }\n    case \"!\": {\n      return {\n        newItem,\n        sign: \"!\",\n      };\n    }\n    default: {\n      return { newItem: item, sign: \"\" };\n    }\n  }\n};\n\nexport const doesArrayContainItems = (items: string[], arr: string[]) => {\n  const filtered = arr.filter((arrItem: string) =>\n    items.find(\n      (item: string) =>\n        item.trim().toLocaleLowerCase() === arrItem.trim().toLowerCase()\n    )\n  );\n  return {\n    state: !!filtered.length,\n    length: filtered.length,\n    items: filtered,\n    // formatted: filtered.map((item) => item.trim().toLowerCase()),\n    formatted: filtered.map((item) => item.trim()),\n  };\n};\n\nexport const getWeekDay = () => {\n  return getShortWeekday(new Date());\n};\n\nexport const getYesterdayDay = () => {\n  const today = new Date();\n  today.setDate(today.getDate() - 1);\n\n  return getShortWeekday(today);\n};\n\nfunction getShortWeekday(day: Date) {\n  return day.toLocaleDateString(\"en-US\", {\n    weekday: \"short\",\n  }) as string;\n}\n\nexport const getCurrentWeek = () => {\n  const week = [];\n\n  for (let i = 6; i >= 0; i--) {\n    const today = new Date();\n    today.setDate(today.getDate() - i);\n    week.push(getShortWeekday(today));\n  }\n\n  return week;\n};\n\nexport const areArraysEqual = (arr1: string[], arr2: string[]) => {\n  if (arr1.length !== arr2.length) {\n    false;\n  }\n  const filtered = arr1.filter((arr1Item, idx) => arr1Item === arr2[idx]);\n  return filtered.length === arr1.length;\n};\n\nexport const getTodayDate = () => {\n  const today = new Date();\n\n  return today.getFullYear() + today.getUTCMonth() + today.getDate();\n};\n", "/** @jsxRuntime classic */\n/** @jsx jsx */\nimport styled from \"@emotion/styled\";\nimport { Form } from \"remix\";\nimport RightIcon from \"~/styles/right.svg\";\nimport WrongIcon from \"~/styles/wrong.svg\";\n\ntype LessonFooterProps = {\n  stateRight?: boolean;\n  stateWrong?: boolean;\n  status: string;\n};\ntype LessonButtonProps = {\n  active?: boolean;\n  stateWrong?: boolean;\n  stateRight?: boolean;\n  skip?: boolean;\n  hidden?: boolean;\n};\ntype VariantItemProps = {\n  isFocused: boolean;\n};\n\nconst LessonContainer = styled(\"section\")`\n  position: relative;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  outline: none;\n`;\n\nconst LessonFooter = styled(\"section\")<LessonFooterProps>`\n  padding: 0 40px;\n  width: 100%;\n  height: 140px;\n  border-top: 2px solid #e5e5e5;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-sizing: border-box;\n  background-color: ${({ status }) =>\n    // props.stateRight ? \"#d7ffb8\" : props.stateWrong ? \"#ffdfe0\" : \"#fff\"};\n    status === \"right\" ? \"#d7ffb8\" : status === \"wrong\" ? \"#ffdfe0\" : \"#fff\"};\n  color: ${({ status }) =>\n    // props.stateRight ? \"#58a700\" : props.stateWrong ? \"#ea2b2b\" : \"#fff\"};\n    status === \"right\" ? \"#58a700\" : status === \"wrong\" ? \"#ea2b2b\" : \"#fff\"};\n`;\n\nconst LessonFooterInner = styled(\"div\")`\n  max-width: 1000px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 auto;\n`;\n\nconst LessonFooterMessage = styled(\"div\")<LessonFooterProps>`\n  width: 100%;\n  display: ${({ status }) =>\n    // props.stateRight || props.stateWrong ? \"flex\" : \"none\"};\n    status === \"right\" || status === \"wrong\" ? \"flex\" : \"none\"};\n  align-items: center;\n`;\n\nconst LessonFooterTitle = styled(\"h2\")`\n  margin: 0;\n  font-family: \"Montserrat\", sans-serif;\n  line-height: 30px;\n  font-size: 24px;\n  letter-spacing: 0.2px;\n`;\n\nconst LessonFooterText = styled(\"p\")`\n  margin: 5px 0 0 0;\n  font-size: 17px;\n  font-family: \"Roboto\";\n  overflow-y: scroll;\n  max-height: 60px;\n`;\n\nconst LessonButton = styled(\"button\")<LessonButtonProps>`\n  border: 0 solid transparent;\n  background-color: ${(props) =>\n    props.stateWrong\n      ? \"#ff4b4b\"\n      : props.stateRight\n      ? \"#58cc02\"\n      : props.active\n      ? \"#78C83D\"\n      : props.skip\n      ? \"inherit\"\n      : \"#E5E5E5\"};\n  color: ${(props) => (props.active ? \"#fff\" : \"#AFAFAF\")};\n  border-color: ${(props) =>\n    props.stateWrong\n      ? \"#ea2b2b\"\n      : props.stateRight\n      ? \"#58a700\"\n      : props.skip\n      ? \"#e5e5e5\"\n      : \"white\"};\n  border-width: ${(props) => (props.skip ? \"2px\" : 0)};\n  height: 50px;\n  width: 150px;\n  cursor: ${(props) => (props.active || props.skip ? \"pointer\" : \"default\")};\n  text-transform: uppercase;\n  font-family: \"Montserrat\";\n  font-size: 17px;\n  font-weight: 700;\n  letter-spacing: 0.8px;\n  border-radius: 15px;\n  padding: 0 20px;\n  display: ${(props) => (props.hidden ? \"none\" : \"block\")};\n`;\n\nconst LessonBody = styled(\"div\")`\n  // margin: 72px 29% 4% 32%; // 4% instead of 240px\n  margin: 72px 30% 4%;\n  flex-grow: 1;\n  position: relative;\n  max-height: calc(100% - 240px);\n`;\n\nconst LessonBodyTitle = styled(\"h3\")`\n  font-family: \"Montserrat\";\n  font-size: 23px;\n  font-weight: 700;\n  color: #4b4b4b;\n  text-align: center;\n  margin-bottom: 13px;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  z-index: 2;\n  background-color: #fff;\n`;\n\nconst LessonBodyMessage = styled(\"div\")`\n  padding: 12px 15px 12px 21px;\n  border: 2px solid #dedede;\n  font-family: \"Roboto\";\n  font-weight: 400;\n  font-size: 18px;\n  color: #4c4c4c;\n  margin: 0 21px;\n  position: relative;\n  z-index: 1;\n`;\n\nconst LessonBodyVariants = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n`;\n\nconst LessonBodyVariant = styled(\"div\")<LessonButtonProps>`\n  position: relative;\n  border-radius: 15px;\n  border: 2px solid #e5e5e5;\n  border-bottom: 4px solid #e5e5e5;\n  cursor: pointer;\n  padding: 18px 0;\n  text-align: center;\n  margin-top: 14px;\n  border-color: ${(props) =>\n    props.active\n      ? \"#98D6FC\"\n      : props.stateRight\n      ? \"#B6EB7E\"\n      : props.stateWrong\n      ? \"#E9A8A6\"\n      : null};\n  background-color: ${(props) => (props.active ? \"#E1F3FE\" : \"inherit\")};\n  color: ${(props) => (props.active ? \"#4897D1\" : \"inherit\")};\n`;\n\nconst LessonBodyWelcome = styled(\"div\")``;\n\nconst LessonBodyResults = styled(\"div\")``;\n\nconst VariantItem = styled(\"button\")<VariantItemProps>`\n  background-color: ${(props) =>\n    props.isFocused ? \"rgb(221, 244, 255)\" : \"inherit\"};\n  height: 60px;\n  border: 1px solid;\n  border-color: ${(props) =>\n    props.isFocused ? \"rgb(132, 216, 255)\" : \"#e5e5e5\"};\n  border-radius: 12px;\n  border-width: 2px 2px 4px;\n  outline: 0;\n  cursor: pointer;\n  position: relative;\n  touch-action: manipulation;\n  transform: translateZ(0);\n  user-select: none;\n  text-align: center;\n  color: ${(props) => (props.isFocused ? \"rgb(24, 153, 214)\" : \"#4b4b4b\")};\n  font-size: 19px;\n  line-height: 1.4;\n  padding: 12px 16px;\n  width: 100%;\n`;\n\nconst LessonTitle = styled(\"h1\")`\n  font-size: 32px;\n  font-family: \"Montserrat\", sans-serif;\n  line-height: 1.25;\n  color: #3c3c3c;\n  text-align: left;\n  font-weight: 700;\n`;\n\nconst LessonQuestion = styled(\"p\")`\n  font-size: 19px;\n  line-height: 39px;\n  font-family: \"Montserrat\", sans-serif;\n  color: #3c3c3c;\n  padding: 12px 24px;\n  margin-left: 8px;\n  background-color: #fff;\n  border: 2px solid #e5e5e5;\n  border-radius: 15px;\n  box-sizing: border-box;\n`;\n\nconst LessonQuestionTriangleContainer = styled(\"div\")`\n  height: 10px;\n  overflow: hidden;\n  width: 20px;\n  position: absolute;\n  left: -5px;\n  margin: 15px 0;\n  top: calc(50% - 15px);\n  transform: translateY(-50%) rotate(-90deg);\n`;\n\nconst LessonQuestionTriangle = styled(\"span\")`\n  box-sizing: border-box;\n  position: absolute;\n  background-color: #fff;\n  border: 2px solid #e5e5e5;\n  border-radius: 2px;\n  content: \"\";\n  height: 14.14427px;\n  left: 50%;\n  transform: rotate(45deg);\n  transform-origin: top left;\n  width: 14.14427px;\n`;\n\nconst LessonFooterIcon = styled(\"div\")<LessonFooterProps>`\n  border-radius: 98px;\n  display: block;\n  float: left;\n  height: 80px;\n  width: 80px;\n  // background: url(${(props) => (props.stateRight ? RightIcon : WrongIcon)});\n  background: url(${({ status }) =>\n    status === \"right\" ? RightIcon : WrongIcon});\n\n  background-position: ${({ status }) =>\n    status === \"right\" ? \"-145px -64px\" : \"-183px -65px\"};\n  background-color: #fff;\n  display: block;\n`;\n\nconst ResultsContainer = styled(\"section\")`\n  display: flex;\n  height: calc(100vh - 140px);\n  justify-content: center;\n  outline: none;\n`;\n\nconst ResultsHiddenForm = styled(Form)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  top: -1000px;\n  left: -1000px;\n`;\n\nconst ResultsTitle = styled(\"h2\")`\n  margin: 0;\n  font-family: \"Montserrat\";\n`;\n\nconst ResultsLeftBlock = styled(\"div\")`\n  padding: 50px 100px;\n  width: calc(50% - 1px);\n`;\n\nconst ResultsSeparateLine = styled(\"div\")`\n  width: 4px;\n  background-color: #e5e5e5;\n`;\n\nexport {\n  LessonContainer,\n  LessonFooter,\n  LessonFooterInner,\n  LessonFooterMessage,\n  LessonFooterTitle,\n  LessonFooterText,\n  LessonButton,\n  LessonBody,\n  LessonBodyTitle,\n  LessonBodyMessage,\n  LessonBodyVariants,\n  LessonBodyVariant,\n  LessonBodyWelcome,\n  LessonBodyResults,\n  VariantItem,\n  LessonTitle,\n  LessonQuestion,\n  LessonQuestionTriangleContainer,\n  LessonQuestionTriangle,\n  LessonFooterIcon,\n  ResultsContainer,\n  ResultsHiddenForm,\n  ResultsTitle,\n  ResultsLeftBlock,\n  ResultsSeparateLine,\n};\n", "import { useTransition } from \"@remix-run/react\";\nimport { useSkill } from \"..\";\nimport {\n  LessonFooter,\n  LessonFooterInner,\n  LessonFooterMessage,\n  LessonFooterIcon,\n  LessonFooterTitle,\n  LessonFooterText,\n  LessonButton,\n} from \"./lib\";\n\nexport default function Footer({\n  checkAnswer = () => {},\n}: {\n  checkAnswer?: Function;\n}) {\n  const transition = useTransition();\n  const { topicState, content, continueTopic, setStateWrong } = useSkill();\n\n  const { answer } = content;\n  const { status, buttonDisabled } = topicState;\n\n  const buttonText =\n    transition.state === \"submitting\"\n      ? \"Saving...\"\n      : transition.state === \"loading\"\n      ? \"Saved!\"\n      : status === \"right\"\n      ? \"Next\"\n      : status !== \"idle\"\n      ? \"Continue\"\n      : \"Check\";\n\n  const handleContinue = () => {\n    if (\n      buttonText === \"Saving...\" ||\n      buttonText === \"Saved!\" ||\n      topicState.buttonDisabled\n    ) {\n      return;\n    }\n    if (status === \"idle\") {\n      return checkAnswer();\n    }\n    continueTopic();\n  };\n\n  const handleSkip = () => {\n    setStateWrong();\n  };\n\n  return (\n    <LessonFooter status={status}>\n      <LessonFooterInner>\n        <LessonButton\n          onClick={handleSkip}\n          skip={true}\n          hidden={status !== \"idle\" || content.stepType === \"Pairs\"}\n        >\n          Skip\n        </LessonButton>\n        <LessonButton\n          skip={true}\n          hidden={status !== \"idle\" || content.stepType === \"Pairs\"}\n          style={{\n            borderWidth: 0,\n            width: \"auto\",\n          }}\n        >\n          Use word bank\n        </LessonButton>\n\n        <LessonFooterMessage status={status}>\n          {(status === \"right\" || status === \"wrong\") && (\n            <LessonFooterIcon status={status} />\n          )}\n          <div style={{ marginLeft: 16, width: \"calc(100% - 209px)\" }}>\n            <LessonFooterTitle>\n              {status === \"wrong\" ? \"Right answer: \" : \"Great!\"}\n            </LessonFooterTitle>\n            <LessonFooterText> {answer.join(\" \")}</LessonFooterText>\n          </div>\n        </LessonFooterMessage>\n\n        <LessonButton\n          active={!buttonDisabled}\n          stateRight={status === \"right\"}\n          stateWrong={status === \"wrong\"}\n          onClick={handleContinue}\n          disabled={buttonText === \"Saving...\" || buttonText === \"Saved!\"}\n          style={{\n            marginLeft:\n              status === \"results\" || content.stepType === \"Pairs\" ? \"auto\" : 0,\n          }}\n        >\n          {buttonText}\n        </LessonButton>\n      </LessonFooterInner>\n    </LessonFooter>\n  );\n}\n", "import { areArraysEqual, doesArrayContainItems } from \"~/utils\";\nimport { useSkill } from \"../..\";\nimport { Lesson } from \"../Lesson\";\nimport InsertWordsScreen from \"./InsertWordsScreen\";\n\nexport type InsertWordsType = {\n  userAnswer: string[];\n  setUserAnswer: Function;\n};\n\nexport default function InsertWords() {\n  const { content, setStateRight, setStateWrong } = useSkill();\n  const initialUserAnswer = [\"\"];\n\n  const checkAnswer = (userAnswer: string[]) => {\n    const { formatted } = doesArrayContainItems(content.answer, userAnswer);\n    if (areArraysEqual(content.answer, formatted)) {\n      return setStateRight();\n    }\n    return setStateWrong();\n  };\n\n  return content.stepType === \"Insert\" ? (\n    <Lesson\n      disabledCondition={(userAnswer: string[]) => {\n        if (\n          userAnswer.find((uA) => {\n            if (uA === \" \" || uA === \"\") {\n              return uA;\n            }\n          })\n        ) {\n          return false;\n        }\n        return userAnswer.length === content.answer.length;\n      }}\n      initialValue={initialUserAnswer}\n      checkAnswer={checkAnswer}\n    >\n      <InsertWordsScreen />\n    </Lesson>\n  ) : null;\n}\n", "import React, { ReactElement, useEffect, useState } from \"react\";\nimport { useFocus } from \"~/utils\";\nimport { useSkill } from \"..\";\nimport Footer from \"./Footer\";\nimport { LessonBody } from \"./lib\";\n\ntype LessonProps = {\n  initialValue?: string | string[];\n  checkAnswer: Function;\n  disabledCondition: Function | null;\n  keyDownHandle?: (event: React.KeyboardEvent, callback?: Function) => void;\n};\n\nexport const Lesson: React.FC<LessonProps> = ({\n  initialValue = \"\",\n  disabledCondition,\n  checkAnswer,\n  keyDownHandle,\n  children,\n  ...props\n}) => {\n  const { topicState, continueTopic, setCheckDisabled } = useSkill();\n  const { status, formDisabled, buttonDisabled } = topicState;\n  const [userAnswer, setUserAnswer] = useState(initialValue);\n\n  const lessonRef = useFocus<HTMLDivElement>(status);\n\n  useEffect(() => {\n    if (disabledCondition === null) {\n      return;\n    }\n    if (disabledCondition(userAnswer)) {\n      return setCheckDisabled(false);\n    }\n    return setCheckDisabled(true);\n  }, [userAnswer]);\n\n  const onKeyDownHandle = (event: React.KeyboardEvent) => {\n    if (keyDownHandle) {\n      keyDownHandle(event, setUserAnswer);\n    }\n    if (event.key !== \"Enter\" || buttonDisabled) {\n      return;\n    }\n    event.preventDefault();\n\n    if (status === \"idle\") {\n      return checkAnswer(userAnswer);\n    }\n\n    return continueTopic();\n  };\n\n  useEffect(() => {\n    if (!formDisabled && setUserAnswer) {\n      setUserAnswer(initialValue);\n    }\n  }, [formDisabled]);\n\n  return (\n    <div\n      tabIndex={0}\n      onKeyDown={onKeyDownHandle}\n      ref={lessonRef}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        outline: \"none\",\n        flexGrow: 1,\n      }}\n    >\n      <LessonBody>\n        {React.Children.map(children, (child) => {\n          return React.cloneElement(child as ReactElement, {\n            userAnswer,\n            setUserAnswer,\n            keyDownCheck: onKeyDownHandle,\n            checkAnswer: (uAnswer: string | string[]) =>\n              checkAnswer(uAnswer, setUserAnswer),\n            ...props,\n          });\n        })}\n      </LessonBody>\n      <Footer checkAnswer={() => checkAnswer(userAnswer)} />\n    </div>\n  );\n};\n", "import { Fragment, useEffect, useState } from \"react\";\nimport { InsertWordsTextBlock } from \"~/modules/Constructor/Levels/components/lib\";\nimport { useSkill } from \"../..\";\nimport { LessonTitle } from \"../lib\";\nimport Puzzle from \"./Puzzle\";\nimport Variants from \"./Variants\";\nimport Text from \"./Text\";\nimport { areArraysEqual } from \"~/utils\";\n\nexport default function InsertWordsScreen({\n  userAnswer,\n  setUserAnswer,\n  keyDownCheck,\n}) {\n  const { content, topicState } = useSkill();\n\n  const { text, isToChoose, variants, answer } = content;\n  const [values, setValues] = useState([...new Array(answer.length).fill(\" \")]);\n\n  useEffect(() => {\n    if (areArraysEqual(userAnswer, values) && !isToChoose) {\n      return;\n    }\n    if (values.length !== answer.length) {\n      return;\n    }\n\n    setUserAnswer(values);\n  }, [values]);\n\n  useEffect(() => {\n    if (isToChoose) {\n      return;\n    }\n    if (userAnswer[0].length) {\n      setValues([...userAnswer]);\n    }\n  }, [userAnswer]);\n\n  return (\n    <Fragment>\n      <LessonTitle>Add missing words</LessonTitle>\n\n      <InsertWordsTextBlock>\n        <Text\n          values={values}\n          setValues={setValues}\n          contentAnswer={answer}\n          text={text}\n          isToChoose={isToChoose}\n          variants={variants}\n          topicState={topicState}\n        />\n\n        {variants && (\n          <Variants\n            values={values}\n            variants={variants}\n            setValues={setValues}\n            topicState={topicState}\n            keyDownCheck={keyDownCheck}\n          />\n        )}\n\n        {isToChoose && (\n          <Puzzle\n            values={values}\n            setValues={setValues}\n            contentAnswer={answer}\n          />\n        )}\n      </InsertWordsTextBlock>\n    </Fragment>\n  );\n}\n", "import styled from \"@emotion/styled\";\n\ntype InsertWordsTextBlockProps = {\n  showText?: boolean;\n};\n\ntype VariantItemNumberProps = {\n  isConnected?: boolean;\n  isFocused: boolean;\n};\n\ntype InsertWordsInputProps = {\n  length: number;\n  isToChoose: boolean;\n};\n\nconst StepContent = styled(\"div\")`\n  border-top: 1px solid #e5e5e5;\n  border-bottom: 1px solid #e5e5e5;\n  padding: 60px 24px;\n  min-height: 300px;\n  margin-top: 20px;\n`;\n\nconst StepHeader = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 70px;\n  position: relative;\n`;\n\nconst ChooseStyle = styled(\"div\")`\n  display: grid;\n  grid-template-columns: max-content max-content;\n  grid-template-rows: max-content max-content;\n  justify-content: center;\n  align-items: self-end;\n  margin: auto 0;\n`;\n\nconst StyleButton = styled(\"button\")`\n  padding: 15px;\n  border: none;\n  cursor: pointer;\n  font-family: \"Roboto\";\n`;\n\nconst InsertWordsTextBlock = styled(\"div\")<InsertWordsTextBlockProps>`\n  min-height: 200px;\n  width: 100%;\n  padding: 10px 0;\n  background-color: #fff;\n  position: relative;\n  z-index: ${(props) => (props.showText ? \"2\" : \"0\")};\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  box-sizing: border-box;\n  font-size: 19px;\n  font-family: \"Roboto\";\n  line-height: 40px;\n`;\n\nconst InsertWordsInput = styled(\"input\")<InsertWordsInputProps>`\n  outline: none;\n  border: none;\n  font-size: 19px;\n  // margin: 0 7px -2px;\n  margin: 9px 7px 0;\n  width: ${(props) => props.length * 13}px;\n  // width: ${(props) => props.length * 20}px;\n  border-bottom: 2px solid #afafaf;\n  cursor: ${(props) => (props.isToChoose ? \"pointer\" : \"text\")};\n  // text-align: center;\n`;\n\nconst VariantItemInput = styled(\"input\")`\n  border: 1px solid #e5e5e5;\n  border-radius: 12px;\n  border-width: 2px 2px 4px;\n  outline: 0;\n  position: relative;\n  touch-action: manipulation;\n  transform: translateZ(0);\n  user-select: none;\n  text-align: center;\n  color: #4b4b4b;\n  font-size: 19px;\n  line-height: 1.4;\n  padding: 12px 16px;\n  width: 100%;\n`;\n\nconst VariantItemNumber = styled(\"span\")<VariantItemNumberProps>`\n  border: 2px solid #e5e5e5;\n  border-color: ${(props) =>\n    props.isConnected\n      ? \"green\"\n      : props.isFocused\n      ? \"rgb(132, 216, 255)\"\n      : \"#e5e5e5\"};\n  border-radius: 8px;\n  color: ${(props) =>\n    props.isConnected\n      ? \"green\"\n      : props.isFocused\n      ? \"rgb(24, 153, 214)\"\n      : \"#afafaf\"};\n  font-size: 15px;\n  font-weight: 700;\n  height: 30px;\n  width: 30px;\n  position: absolute;\n  top: 12px;\n  left: 16px;\n  z-index: 1;\n  text-align: center;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Roboto\";\n`;\n\nexport {\n  StepHeader,\n  StepContent,\n  ChooseStyle,\n  StyleButton,\n  InsertWordsTextBlock,\n  InsertWordsInput,\n  VariantItemInput,\n  VariantItemNumber,\n};\n", "import { VariantItem } from \"../lib\";\nimport { PuzzleContainer, PuzzleItem, PuzzleList } from \"./lib\";\n\ntype PuzzleProps = {\n  contentAnswer: string[];\n  values: string[];\n  setValues: Function;\n};\n\nexport default function Puzzle({\n  contentAnswer,\n  values,\n  setValues,\n}: PuzzleProps) {\n  const selectVariant = (variant: string) => {\n    setValues((prevArray: string[]) => {\n      const empty = prevArray.find((item) => {\n        if (item === \" \" || item.length === 0 || !!item === false) {\n          return item;\n        }\n      });\n      const inx = prevArray.indexOf(empty as string);\n      if (inx.toString() && inx !== -1) {\n        const newArr = prevArray;\n        newArr[inx] = variant;\n        return [...newArr];\n      }\n      return [...prevArray, variant];\n    });\n  };\n\n  return (\n    <PuzzleContainer>\n      <PuzzleList>\n        {contentAnswer.map((answer, idx: number) => {\n          const alreadyChoosen = !!values.find((value) => value === answer);\n          return (\n            <PuzzleItem alreadyChoosen={alreadyChoosen} key={idx}>\n              <VariantItem\n                type=\"button\"\n                isFocused={false}\n                onClick={() => selectVariant(answer)}\n                disabled={alreadyChoosen}\n              >\n                {answer}\n              </VariantItem>\n            </PuzzleItem>\n          );\n        })}\n      </PuzzleList>\n    </PuzzleContainer>\n  );\n}\n", "/** @jsxRuntime classic */\n/** @jsx jsx */\nimport styled from \"@emotion/styled\";\n\ntype PuzzleItemProps = {\n  alreadyChoosen: boolean;\n};\n\nconst PuzzleContainer = styled(\"section\")`\n  width: 100%;\n`;\n\nconst PuzzleList = styled(\"ul\")`\n  list-style-type: none;\n  padding: 0;\n  margin: 30px 0 0;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row-reverse;\n  justify-content: center;\n`;\n\nconst PuzzleItem = styled(\"li\")<PuzzleItemProps>`\n  margin: 0 16px 8px 0;\n  position: ${(props) => (props.alreadyChoosen ? \"absolute\" : \"relative\")};\n  top: ${(props) => (props.alreadyChoosen ? \"-1000px\" : \"0\")};\n`;\n\nconst VariantsContainer = styled(\"section\")`\n  width: 100%;\n  margin-top: 20px;\n  outline: none;\n`;\n\nconst VariantsList = styled(\"ul\")`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst VariantsItem = styled(\"li\")`\n  position: relative;\n  margin-bottom: 8px;\n  width: 49%;\n`;\n\nexport {\n  PuzzleContainer,\n  PuzzleList,\n  PuzzleItem,\n  VariantsContainer,\n  VariantsList,\n  VariantsItem,\n};\n", "import { Variant } from \"@prisma/client\";\nimport { useEffect, useRef } from \"react\";\nimport { VariantItemNumber } from \"~/modules/Constructor/Levels/components/lib\";\nimport { VariantItem } from \"../lib\";\nimport { VariantsContainer, VariantsItem, VariantsList } from \"./lib\";\n\ntype VariantsProps = {\n  variants: Variant[];\n  values: string[];\n  setValues: Function;\n};\n\nexport default function Variants({\n  variants,\n  values,\n  setValues,\n  topicState,\n  keyDownCheck,\n}: VariantsProps) {\n  const myRef = useRef(null);\n\n  useEffect(() => {\n    if (topicState.status === \"idle\") {\n      const timeout = setTimeout(() => {\n        myRef.current?.focus();\n      }, 10);\n      return () => clearTimeout(timeout);\n    }\n  }, [topicState.status]);\n\n  const KeyDownHandler = (e) => {\n    variants.forEach((variant, idx) => {\n      if (e.key == idx + 1) {\n        setValues([variant.value]);\n      }\n    });\n  };\n\n  return (\n    <VariantsContainer\n      tabIndex={0}\n      ref={myRef}\n      onKeyDown={(e) => keyDownCheck(e, (e) => KeyDownHandler(e))}\n    >\n      <VariantsList>\n        {variants.map(({ value }, idx: number) => (\n          <VariantsItem key={idx} onClick={() => setValues([value])}>\n            <VariantItemNumber isFocused={value === values[0]}>\n              {idx + 1}\n            </VariantItemNumber>\n            <VariantItem type=\"button\" isFocused={value === values[0]}>\n              {value}\n            </VariantItem>\n          </VariantsItem>\n        ))}\n      </VariantsList>\n    </VariantsContainer>\n  );\n}\n", "import { Variant } from \"@prisma/client\";\nimport { Fragment, useEffect, useRef } from \"react\";\nimport { InsertWordsInput } from \"~/modules/Constructor/Levels/components/lib\";\nimport { doesItemContainSign } from \"~/utils\";\n\ntype TextProps = {\n  text: string;\n  contentAnswer: string[];\n  isToChoose: boolean;\n  values: string[];\n  setValues: Function;\n  formDisabled: boolean;\n  variants: Variant[];\n};\n\nexport default function Text({\n  text,\n  contentAnswer,\n  isToChoose,\n  values,\n  setValues,\n  topicState,\n  variants,\n}: TextProps) {\n  useEffect(() => {\n    // gets rid of focus if our lesson is only one and we solve it wrong\n    if (!topicState.formDisabled) {\n      setValues([...new Array(contentAnswer.length).fill(\" \")]);\n    }\n    // firstInputRef.current?.focus();\n  }, [topicState.formDisabled]);\n\n  const myRef = useRef(null);\n\n  useEffect(() => {\n    if (topicState.status === \"idle\" && !isToChoose && !variants.length) {\n      const timeout = setTimeout(() => {\n        myRef.current?.focus();\n      }, 10);\n      return () => clearTimeout(timeout);\n    }\n  }, [topicState.status]);\n\n  const handleChange = (evt, index: number) => {\n    setValues((prevArray: string[]) => {\n      const newArray = prevArray;\n      newArray[index] = evt.target.value;\n      return [...newArray];\n    });\n  };\n\n  const handleInputClick = (evt, index: number) => {\n    const target = evt.currentTarget;\n    if (target.value === \"\" || target.value === \" \") {\n      return;\n    }\n    if (isToChoose || variants) {\n      target.blur();\n      setValues((prevArray: string[]) => {\n        prevArray[index] = \" \";\n        return [...prevArray];\n      });\n    }\n  };\n\n  let firstInput = 0;\n\n  return (\n    <Fragment>\n      {text.split(\" \").map((textItem: string, idx: number) => {\n        const { newItem, sign } = doesItemContainSign(textItem);\n\n        if (contentAnswer.includes(newItem)) {\n          return contentAnswer.map((answerItem: string, index: number) => {\n            if (newItem !== answerItem) {\n              // sets position for inputs\n              return null;\n            }\n            firstInput = firstInput && index;\n            return (\n              <Fragment key={index}>\n                <InsertWordsInput\n                  type=\"text\"\n                  id={`input${0}`}\n                  isToChoose={isToChoose}\n                  length={newItem.length}\n                  value={values[index]}\n                  onChange={(evt) => handleChange(evt, index)}\n                  onClick={(evt) => handleInputClick(evt, index)}\n                  disabled={topicState.formDisabled}\n                  ref={firstInput === index ? myRef : null}\n                />\n                <span style={{ marginRight: 4 }}>{sign}</span>\n              </Fragment>\n            );\n          });\n        }\n        return (\n          <span style={{ marginRight: 4 }} key={`text${idx}`}>\n            {textItem}\n          </span>\n        );\n      })}\n    </Fragment>\n  );\n}\n", "import { useSkill } from \"..\";\nimport { Lesson } from \"./Lesson\";\nimport PairsScreen from \"./PairsScreen\";\n\nexport default function Pairs() {\n  const { content, setStateRight, updateState, topicState } = useSkill();\n  const { answer, variants } = content;\n  const initialValue = [\"\"];\n\n  const checkAnswer = (uAns: string, setUserAnswer: Function) => {\n    let spliceIdx = 0;\n    if (\n      // Checking if userAnswer or it's vice versa is equal the right one\n      answer.find((answerItem: string, idx: number) => {\n        spliceIdx = idx;\n        return (\n          answerItem === uAns ||\n          answerItem.split(\"\").reverse().join(\"\") === uAns\n        );\n      })\n    ) {\n      const newContent = content;\n      newContent.answer.splice(spliceIdx, 1);\n      setUserAnswer((prevUserAnswer: string[]) => [...prevUserAnswer, uAns]);\n      if (newContent.answer.length === 0) {\n        return setStateRight();\n      }\n      return updateState({ content: newContent });\n    } else {\n      setUserAnswer((prevUserAnswer: string[]) => [...prevUserAnswer]);\n      return updateState({\n        topicState: { ...topicState, buttonDisabled: true },\n      });\n    }\n  };\n\n  return content.stepType === \"Pairs\" ? (\n    <Lesson\n      initialValue={initialValue}\n      disabledCondition={null}\n      checkAnswer={checkAnswer}\n    >\n      <PairsScreen variants={variants} />\n    </Lesson>\n  ) : null;\n}\n", "import { Variant } from \"@prisma/client\";\nimport { Fragment, useState } from \"react\";\nimport { LessonTitle, VariantItem } from \"./lib\";\n\ntype PairsScreenProps = {\n  variants: Variant[];\n  checkAnswer: Function;\n  userAnswer: string[];\n};\n\nexport default function PairsScreen({\n  variants,\n  checkAnswer,\n  userAnswer,\n}: PairsScreenProps) {\n  const [activeIdx, setActiveIdx] = useState<number>(-1);\n\n  const isVariantDisabled = (idx: number) => {\n    if (\n      userAnswer.find((answerItem) => answerItem.includes((idx + 1).toString()))\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Fragment>\n      <LessonTitle>Connect pairs</LessonTitle>\n\n      <ul\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-evenly\",\n          listStyle: \"none\",\n          margin: 0,\n          padding: 0,\n        }}\n      >\n        {variants.map(({ value, isFocused }, idx: number) => (\n          <li\n            key={idx}\n            style={{ marginBottom: 5, position: \"relative\", width: \"48%\" }}\n            onClick={(evt) => {\n              const target = evt.target as HTMLInputElement;\n              if (isVariantDisabled(idx)) {\n                return;\n              }\n              if (activeIdx === -1) {\n                return setActiveIdx(Number(target.id));\n              }\n              checkAnswer(`${activeIdx}${target.id}`);\n              setActiveIdx(-1);\n            }}\n          >\n            <VariantItem\n              type=\"button\"\n              id={(idx + 1).toString()}\n              style={{\n                cursor: isVariantDisabled(idx) ? \"default\" : \"pointer\",\n                color:\n                  activeIdx === idx + 1\n                    ? \"#1899d6\"\n                    : isVariantDisabled(idx)\n                    ? \"#e5e5e5\"\n                    : \"#4b4b4b\",\n                borderColor:\n                  activeIdx === idx + 1\n                    ? \"#84d8ff\"\n                    : isVariantDisabled(idx)\n                    ? \"#e5e5e5\"\n                    : \"#e5e5e5\",\n                backgroundColor: activeIdx === idx + 1 ? \"#ddf4ff\" : \"#fff\",\n              }}\n              disabled={isVariantDisabled(idx)}\n              isFocused={isFocused}\n            >\n              {value}\n            </VariantItem>\n          </li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n}\n", "import { useSkill } from \"../..\";\nimport { doesArrayContainItems } from \"~/utils\";\nimport QuestionAnswerScreen from \"./QuestionAnswerScreen\";\nimport { Lesson } from \"../Lesson\";\n\nexport default function QuestionAnswerPractice() {\n  const { content, setStateWrong, setStateRight } = useSkill();\n\n  const checkAnswer = (userAnswer: string) => {\n    const { state, length } = doesArrayContainItems(\n      content.answer,\n      userAnswer.split(\" \")\n    );\n\n    if (!state) {\n      return setStateWrong();\n    }\n\n    if (\n      doesArrayContainItems(content.keywords, userAnswer.split(\" \")).length ===\n      content.keywords.length\n    ) {\n      if (length < content.answer.length) {\n        return setStateRight();\n      }\n\n      return setStateRight();\n    }\n\n    if (length < content.answer.length * 0.8) {\n      // if user's response is less than 80% right, then return negative\n      return setStateWrong();\n    }\n  };\n\n  return content.stepType === \"Question\" ? (\n    <Lesson\n      checkAnswer={checkAnswer}\n      disabledCondition={(userAnswer: string) => userAnswer.length > 0}\n    >\n      <QuestionAnswerScreen question={content.question as string} />\n    </Lesson>\n  ) : null;\n}\n", "import { Fragment, useEffect, useRef } from \"react\";\nimport { Textarea } from \"~/components/lib\";\nimport {\n  LessonTitle,\n  LessonQuestion,\n  LessonQuestionTriangleContainer,\n  LessonQuestionTriangle,\n} from \"../lib\";\nimport Duo from \"~/styles/duo.svg\";\nimport { useSkill } from \"../..\";\n\ntype QuestionAnswerScreenType = {\n  question: string;\n  userAnswer: string;\n  setUserAnswer: Function;\n};\n\nexport default function QuestionAnswerScreen({\n  question,\n  userAnswer,\n  setUserAnswer,\n}: QuestionAnswerScreenType) {\n  const { topicState } = useSkill();\n\n  const myRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    if (topicState.status === \"idle\") {\n      const timeout = setTimeout(() => {\n        myRef.current?.focus();\n      }, 10);\n      return () => clearTimeout(timeout);\n    }\n  }, [topicState.status]);\n\n  return (\n    <Fragment>\n      <LessonTitle>Answer the question</LessonTitle>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <img src={Duo} alt=\"Duo\" height={150} style={{ marginBottom: -60 }} />\n        <div style={{ position: \"relative\" }}>\n          <LessonQuestion>{question}</LessonQuestion>\n          <LessonQuestionTriangleContainer>\n            <LessonQuestionTriangle />\n          </LessonQuestionTriangleContainer>\n        </div>\n      </div>\n      <Textarea\n        id=\"answer\"\n        name=\"answer\"\n        placeholder=\"Enter your answer\"\n        value={userAnswer}\n        onChange={(e) => setUserAnswer(e.target.value)}\n        disabled={topicState.formDisabled}\n        ref={myRef}\n      />\n    </Fragment>\n  );\n}\n", "import VariantsScreen from \"~/modules/Constructor/Levels/components/VariantsScreen\";\nimport { useSkill } from \"..\";\nimport { Lesson } from \"./Lesson\";\n\nexport default function VariantsPractice() {\n  const { content, setStateRight, setStateWrong } = useSkill();\n  const { question, variants, stepType } = content;\n\n  const checkAnswer = (userAnswer: string) => {\n    if (userAnswer === content.answer[0]) {\n      return setStateRight();\n    }\n    return setStateWrong();\n  };\n\n  const handleOnKeyDown = (e: React.KeyboardEvent, setUserAnswer: Function) => {\n    if (e.key === \"1\") {\n      return setUserAnswer(variants[0].value);\n    }\n    if (e.key === \"2\") {\n      return setUserAnswer(variants[1].value);\n    }\n    if (e.key === \"3\") {\n      return setUserAnswer(variants[2].value);\n    }\n  };\n\n  return stepType === \"Variants\" ? (\n    <Lesson\n      disabledCondition={(userAnswer: string) => userAnswer.length}\n      checkAnswer={checkAnswer}\n      keyDownHandle={handleOnKeyDown}\n    >\n      <VariantsScreen question={question} variants={variants} />\n    </Lesson>\n  ) : null;\n}\n", "import { Fragment } from \"react\";\nimport { LessonTitle } from \"~/components/lib\";\nimport { VariantItem } from \"~/modules/Lesson/components/lib\";\nimport { VariantItemNumber } from \"./lib\";\n\nexport default function VariantsScreen({\n  question,\n  variants,\n  userAnswer,\n  setUserAnswer,\n}) {\n  return (\n    <Fragment>\n      <LessonTitle>Choose right variant</LessonTitle>\n      {/* <div>\n      <p>{definition}</p>\n    </div> */}\n      <b>{question}</b>\n\n      <ul style={{ listStyleType: \"none\", padding: 0, margin: 0 }}>\n        {variants.map(({ value }, idx: number) => (\n          <li\n            key={idx}\n            style={{ position: \"relative\", marginBottom: 8 }}\n            onClick={() => setUserAnswer(value)}\n          >\n            <VariantItemNumber isFocused={value === userAnswer}>\n              {idx + 1}\n            </VariantItemNumber>\n            <VariantItem type=\"button\" isFocused={value === userAnswer}>\n              {value}\n            </VariantItem>\n          </li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n}\n", "import type { Language } from \"@prisma/client\";\nimport { prisma } from \"~/db.server\";\nimport { getUserId, logout } from \"~/session.server\";\nimport { getTodayDate, getWeekDay } from \"~/utils\";\n\nexport type { Language } from \"@prisma/client\";\n\nexport async function createInitialLanguage(userId: string) {\n  return await prisma.language.create({\n    data: { userId, active: true, title: \"MyFirstLanguage\" },\n  });\n}\n\nexport async function createNewLanguage(\n  request: Request,\n  title: Language[\"title\"]\n) {\n  const userId = await getUserId(request);\n  if (typeof userId !== \"string\") {\n    return null;\n  }\n\n  await deactiveAllUserLanguages(userId);\n\n  const language = await prisma.language.create({\n    data: { userId, title, active: true },\n  });\n\n  return language;\n}\n\nasync function deactiveAllUserLanguages(userId: Language[\"userId\"]) {\n  const languages = await prisma.language.updateMany({\n    where: {\n      userId,\n    },\n    data: {\n      active: false,\n    },\n  });\n\n  return languages;\n}\n\nexport async function setActiveLanguage(id: string) {\n  const language = await prisma.language.findUnique({\n    where: { id },\n  });\n\n  if (language) {\n    await deactiveAllUserLanguages(language.userId);\n  }\n\n  await prisma.language.update({\n    where: {\n      id,\n    },\n    data: {\n      active: true,\n    },\n  });\n\n  return language;\n}\n\nexport async function getActiveLanguage(request: Request) {\n  const userId = await getUserId(request);\n  if (typeof userId !== \"string\") {\n    return null;\n  }\n\n  try {\n    const language = await prisma.language.findFirst({\n      where: { userId, active: true },\n    });\n    return language;\n  } catch {\n    throw logout(request);\n  }\n}\n\nexport async function getLanguages(request: Request) {\n  const userId = await getUserId(request);\n  if (typeof userId !== \"string\") {\n    return null;\n  }\n\n  try {\n    const languages = await prisma.language.findMany({\n      where: { userId },\n    });\n    return languages;\n  } catch {\n    throw logout(request);\n  }\n}\n\nexport async function whenLastPractice(request: Request) {\n  const languages = (await getLanguages(request)) as Language[];\n  const lastUpdatedTopic = await prisma.topic.findFirst({\n    where: {\n      projectId: { in: languages.map(({ id }) => id) },\n    },\n    select: { updatedAt: true },\n    orderBy: { updatedAt: \"desc\" },\n  });\n  if (!lastUpdatedTopic) {\n    return 0;\n  }\n  return lastUpdatedTopic.updatedAt as number;\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    maxAge: 0,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(request: Request): Promise<string | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request): Promise<null | User> {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n): Promise<string> {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: 60 * 60 * 24 * 7, // 7 days\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import type { User, WeeklyActivity } from \"@prisma/client\";\nimport bcrypt from \"bcryptjs\";\n\nimport { prisma } from \"~/db.server\";\nimport { getUser } from \"~/session.server\";\nimport { getTodayDate, getWeekDay } from \"~/utils\";\nimport { createInitialLanguage } from \"./language.server\";\n\nexport type { User } from \"@prisma/client\";\n\nconst emptyWeek = {\n  Sun: 0,\n  Mon: 0,\n  Tue: 0,\n  Wed: 0,\n  Thu: 0,\n  Fri: 0,\n  Sat: 0,\n};\n\nexport async function createUser(username: User[\"username\"], password: string) {\n  const passwordHash = await bcrypt.hash(password, 10);\n\n  const user = await prisma.user.create({\n    data: {\n      username,\n      passwordHash,\n      streak: 0,\n      wasToday: false,\n      weeklyActivity: {\n        ...emptyWeek,\n      },\n    },\n  });\n\n  await createInitialLanguage(user.id);\n\n  return user;\n}\n\nexport async function updateUserStreak(\n  id: User[\"id\"],\n  wasToday: boolean,\n  streak: number\n) {\n  return prisma.user.update({\n    where: { id },\n    data: { wasToday, streak },\n  });\n}\n\nexport async function getUserById(id: User[\"id\"]) {\n  return prisma.user.findUnique({ where: { id } });\n}\n\nexport async function getUserByUsername(username: User[\"username\"]) {\n  return prisma.user.findUnique({ where: { username } });\n}\n\nexport async function deleteUserByUsername(username: User[\"username\"]) {\n  return prisma.user.delete({ where: { username } });\n}\n\nexport async function verifyLogin(\n  username: User[\"username\"],\n  password: string\n) {\n  const userWithPassword = await prisma.user.findUnique({\n    where: { username },\n  });\n\n  if (!userWithPassword || !userWithPassword.passwordHash) {\n    return null;\n  }\n\n  const isValid = await bcrypt.compare(password, userWithPassword.passwordHash);\n\n  if (!isValid) {\n    return null;\n  }\n\n  const { passwordHash: _password, ...userWithoutPassword } = userWithPassword;\n\n  return userWithoutPassword;\n}\n\nexport async function increaseTodayExp(request: Request, value: number) {\n  const today = getWeekDay() as keyof WeeklyActivity;\n  const user = await getUser(request);\n  if (!user) throw new Error(\"User is undefined\");\n  return await prisma.user.update({\n    where: { id: user.id },\n    data: {\n      weeklyActivity: {\n        ...user.weeklyActivity,\n        [today]: user.weeklyActivity[today] + value,\n      },\n    },\n  });\n}\n\nexport async function resetTodayActivity(request: Request) {\n  const user = await getUser(request);\n  if (!user) throw new Error(\"User is undefined\");\n\n  return await prisma.user.update({\n    where: { id: user.id },\n    data: {\n      weeklyActivity: {\n        ...user.weeklyActivity,\n        [`${getWeekDay()}`]: 0,\n      },\n    },\n  });\n}\n\nexport async function resetMultipleActivity(\n  request: Request,\n  lastPracticed: number\n) {\n  const today = getTodayDate();\n  const user = await getUser(request);\n  if (!user) throw new Error(\"User is undefined\");\n\n  const newWeek = user.weeklyActivity;\n  let i = today - lastPracticed;\n\n  if (i > 6) {\n    return await prisma.user.update({\n      where: { id: user.id },\n      data: {\n        weeklyActivity: {\n          ...emptyWeek,\n        },\n      },\n    });\n  }\n\n  return await prisma.user.update({\n    where: { id: user.id },\n    data: {\n      weeklyActivity: {\n        ...newWeek,\n      },\n    },\n  });\n}\n", "import { Topic } from \"@prisma/client\";\nimport { prisma } from \"~/db.server\";\nimport { getWeekDay, getTodayDate } from \"~/utils\";\n\nexport async function updateCurrentChapter(topic: Topic) {\n  const today = getTodayDate();\n\n  return await prisma.topic.update({\n    where: {\n      title: topic.title,\n    },\n    data: {\n      currentChapter:\n        topic.chapters !== topic.currentChapter\n          ? topic.currentChapter + 1\n          : topic.currentChapter,\n      updatedAt: today,\n    },\n  });\n}\n\nexport async function checkTitleUnique(projectId: string, title: string) {\n  const topics = await prisma.topic.findMany({ where: { projectId } });\n  return !!topics.find((topic) => topic.title === title);\n}\n\nexport async function getLastAddedTopic(projectId: string, neighbors = false) {\n  const lastAddedTopic = await prisma.topic.findFirst({\n    where: { projectId },\n    orderBy: { createdAt: \"desc\" },\n  });\n\n  if (neighbors) {\n    return await prisma.topic.findMany({\n      where: { projectId, lineNumber: lastAddedTopic?.lineNumber },\n    });\n  }\n\n  return lastAddedTopic;\n}\n", "import { redirect, useLoaderData, useParams } from \"remix\";\nimport type { LoaderFunction, ActionFunction } from \"remix\";\nimport { prisma } from \"~/db.server\";\nimport Lesson from \"~/modules/Lesson\";\nimport { getActiveLanguage } from \"~/models/language.server\";\nimport { increaseTodayExp } from \"~/models/user.server\";\nimport { updateCurrentChapter } from \"~/models/topic.server\";\n\nexport function ErrorBoundary() {\n  const { title } = useParams();\n  return (\n    <div className=\"error-container\">{`There was an error loading skill by the title ${title}. Sorry.`}</div>\n  );\n}\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const language = await getActiveLanguage(request);\n  const form = await request.formData();\n  const expData = Number(form.get(\"exp\"));\n  const title = params.title;\n\n  const topic = await prisma.topic.findUnique({\n    where: { title },\n  });\n\n  if (!topic) {\n    throw new Error(`Skill with this title: ${title} is underfined`);\n  }\n\n  await updateCurrentChapter(topic);\n\n  await increaseTodayExp(request, expData);\n\n  return redirect(`/${language?.title}/skills`);\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const topic = await prisma.topic.findUnique({\n    where: { title: params.title },\n  });\n\n  if (!topic) {\n    throw new Error(\"Skill is not found\");\n  }\n\n  const lessons = await prisma.lesson.findMany({\n    where: { id: { in: topic.lessonIDs } },\n  });\n\n  return lessons;\n};\n\nexport default function LessonScreen() {\n  const steps = useLoaderData();\n\n  return <Lesson steps={steps} />;\n}\n", "import { LoaderFunction, redirect } from \"@remix-run/node\";\nimport React, { useState } from \"react\";\nimport { Outlet, useLoaderData } from \"remix\";\nimport { Main, Overlay } from \"~/components/lib\";\nimport Menu from \"~/components/Menu\";\nimport {\n  createNewLanguage,\n  getLanguages,\n  setActiveLanguage,\n} from \"~/models/language.server\";\nimport { getLastActivity } from \"~/models/lesson.server\";\nimport { updateUserStreak } from \"~/models/user.server\";\nimport { getUser } from \"~/session.server\";\nimport styles from \"~/styles/index.css\";\nimport { getTodayDate, getWeekDay, getYesterdayDay } from \"~/utils\";\n\nexport const links = () => {\n  return [{ rel: \"stylesheet\", href: styles }];\n};\n\nexport async function action({ request }: { request: Request }) {\n  const form = await request.formData();\n  const id = form.get(\"id\") as string;\n  const newLanguage = form.get(\"newLanguage\") as string;\n  let project;\n  if (newLanguage?.length > 0) {\n    project = await createNewLanguage(request, newLanguage);\n  } else {\n    project = await setActiveLanguage(id);\n  }\n\n  return redirect(`/${project?.title}/skills`);\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  let user = await getUser(request);\n  const languages = await getLanguages(request);\n  const activeLanguage = languages?.find((item) => item.active);\n  const today = getTodayDate();\n\n  if (!user) {\n    return redirect(\"/login\");\n  }\n\n  if (!activeLanguage) {\n    throw new Error(\"Active language wasnt found\");\n  }\n\n  const lastActive = await getLastActivity(request);\n  if (today - lastActive > 1 || lastActive === 0) {\n    user = await updateUserStreak(user.id, false, 0);\n    return { user, languages };\n  }\n\n  if (today - lastActive === 1) {\n    user = await updateUserStreak(user.id, false, user.streak);\n    return { user, languages };\n  }\n\n  if (!user.wasToday && lastActive === today) {\n    user = await updateUserStreak(user.id, true, user.streak + 1);\n    return { user, languages };\n  }\n\n  if (user.wasToday) {\n    return { user, languages };\n  }\n\n  if (!languages) {\n    throw new Error(\"languages are not found\");\n  }\n\n  return { user, languages };\n};\n\nexport default function ProjectPage() {\n  const { user, languages } = useLoaderData();\n  const [isOverlay, setIsOverlay] = useState(false);\n  return (\n    <React.Fragment>\n      <Menu user={user} languages={languages} onOverlay={setIsOverlay} />\n      <Main>\n        <Outlet />\n      </Main>\n      <Overlay active={isOverlay} />\n    </React.Fragment>\n  );\n}\n", "import {\n  HorizontalList,\n  ListItem,\n  Logout,\n  MenuContainer,\n  MenuNavLink,\n  NavIcon,\n} from \"./lib\";\nimport study from \"~/styles/study.svg\";\nimport shop from \"~/styles/shop.svg\";\nimport studyActive from \"~/styles/study-active.svg\";\nimport streak from \"~/styles/streak.svg\";\nimport streakActive from \"~/styles/streak-active.svg\";\nimport shopActive from \"~/styles/shop-active.svg\";\nimport { Fragment } from \"react\";\nimport Projects from \"./Projects\";\nimport { Language, User } from \"@prisma/client\";\n\nconst MENU = [\n  {\n    title: \"Study\",\n    link: \"skills\",\n    icon: study,\n    activeIcon: studyActive,\n  },\n  {\n    title: \"constructor\",\n    link: \"constructor/new\",\n    icon: shop,\n    activeIcon: shopActive,\n  },\n];\n\nconst Menu = ({\n  user,\n  languages,\n  onOverlay,\n}: {\n  user: User;\n  languages: Language[];\n  onOverlay: Function;\n}) => {\n  return (\n    <MenuContainer>\n      <nav>\n        <HorizontalList>\n          {MENU.map(({ title, icon, activeIcon, link }) => (\n            <ListItem key={title}>\n              <MenuNavLink to={`${link}`} className=\"nav-link\">\n                {({ isActive }) => (\n                  <Fragment>\n                    <NavIcon src={isActive ? activeIcon : icon} alt={title} />\n                    {title}\n                  </Fragment>\n                )}\n              </MenuNavLink>\n            </ListItem>\n          ))}\n        </HorizontalList>\n      </nav>\n      <HorizontalList>\n        <ListItem>\n          <Projects languages={languages} onOverlay={onOverlay} />\n        </ListItem>\n        <ListItem>\n          <img\n            src={user?.wasToday ? streakActive : streak}\n            alt=\"streak\"\n            width={25}\n            height={30}\n            style={{ marginRight: 6 }}\n          />\n          <b\n            style={{\n              fontFamily: \"Roboto\",\n              color: user?.wasToday ? \"#ff9600\" : \"#e5e5e5\",\n            }}\n          >\n            {user?.streak}\n          </b>\n        </ListItem>\n        <ListItem>\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <span style={{ marginRight: 10 }}>{user?.username}</span>\n            <form action=\"/logout\" method=\"post\">\n              <Logout type=\"submit\">Logout</Logout>\n            </form>\n          </div>\n        </ListItem>\n      </HorizontalList>\n    </MenuContainer>\n  );\n};\n\nexport default Menu;\n", "import { Fragment, useState } from \"react\";\nimport { Form } from \"@remix-run/react\";\nimport {\n  ActiveLanguageButton,\n  ActiveLanguageContainer,\n  LanguagesItem,\n  LanguagesInput,\n  LanguagesContainer,\n  LanguagesList,\n  LanguagesAddBtn,\n} from \"./lib\";\nimport { Language } from \"@prisma/client\";\n\nexport default function Projects({\n  onOverlay,\n  languages,\n}: {\n  onOverlay: Function;\n  languages: Language[];\n}) {\n  const [showWindow, setShowWindow] = useState(false);\n  const [isNewLanguage, setIsNewLanguage] = useState(false);\n\n  const activeLanguage = languages?.find((item) => item.active);\n\n  function showModal() {\n    onOverlay(true);\n    setShowWindow(true);\n  }\n\n  function hideModal() {\n    onOverlay(false);\n    setShowWindow(false);\n  }\n\n  return (\n    <Fragment>\n      <ActiveLanguageButton\n        type=\"button\"\n        onMouseEnter={showModal}\n        onMouseLeave={hideModal}\n      >\n        {activeLanguage?.title}\n      </ActiveLanguageButton>\n\n      <ActiveLanguageContainer\n        onMouseEnter={showModal}\n        onMouseLeave={hideModal}\n      >\n        {showWindow && (\n          <LanguagesContainer>\n            <LanguagesList>\n              {languages?.map((item, idx: number) => (\n                <li\n                  key={idx}\n                  style={{\n                    backgroundColor: item.active\n                      ? \"rgb(221, 244, 255)\"\n                      : \"inherit\",\n                    order: item.active ? 0 : 1,\n                    borderRadius: item.active ? \"10px 10px 0 0\" : 0,\n                  }}\n                >\n                  <Form method=\"post\">\n                    <input type=\"hidden\" name=\"id\" value={item.id} readOnly />\n                    <LanguagesItem type=\"submit\">{item.title}</LanguagesItem>\n                  </Form>\n                </li>\n              ))}\n            </LanguagesList>\n            <fieldset style={{ position: \"relative\" }}>\n              {isNewLanguage ? (\n                <Form method=\"post\">\n                  <LanguagesInput\n                    type=\"text\"\n                    placeholder=\"Enter title\"\n                    name=\"newLanguage\"\n                    onChange={showModal}\n                    required\n                  />\n                  <LanguagesAddBtn>+</LanguagesAddBtn>\n                </Form>\n              ) : (\n                <LanguagesItem\n                  type=\"button\"\n                  onClick={() => setIsNewLanguage(true)}\n                >\n                  Add new language\n                </LanguagesItem>\n              )}\n            </fieldset>\n          </LanguagesContainer>\n        )}\n      </ActiveLanguageContainer>\n    </Fragment>\n  );\n}\n", "import { Lesson, Topic, User } from \"@prisma/client\";\nimport { prisma } from \"~/db.server\";\nimport { getTodayDate } from \"~/utils\";\nimport { whenLastPractice } from \"./language.server\";\nimport { resetMultipleActivity } from \"./user.server\";\n\nexport async function createLessons(data: Lesson[]) {\n  const batch = await prisma.lesson.createMany({ data });\n  const IDs = await prisma.lesson.findMany({\n    select: { id: true },\n    orderBy: { createdAt: \"desc\" },\n    take: batch.count,\n  });\n\n  return IDs.map((idItem) => idItem.id);\n}\n\nexport async function createTopic(data: Topic) {\n  return await prisma.topic.create({ data });\n}\n\nexport async function getTopics(languageId: string) {\n  return await prisma.topic.findMany({\n    take: 20,\n    where: { projectId: languageId },\n    select: {\n      id: true,\n      title: true,\n      createdAt: true,\n      chapters: true,\n      currentChapter: true,\n      lineNumber: true,\n    },\n    orderBy: { createdAt: \"desc\" },\n  });\n}\n\nexport async function getLastActivity(request: Request) {\n  const today = getTodayDate();\n  const lastPracticed = await whenLastPractice(request);\n\n  if (today - lastPracticed > 0) {\n    await resetMultipleActivity(request, lastPracticed);\n    return lastPracticed;\n  }\n\n  return today;\n}\n\nexport async function deleteTopicById(id: string) {\n  return await prisma.topic.delete({ where: { id } });\n}\n\nexport async function deleteLessonsFromTopic(topicId: string) {\n  const topic = await prisma.topic.findUnique({ where: { id: topicId } });\n  return await prisma.lesson.deleteMany({\n    where: { id: { in: topic?.lessonIDs } },\n  });\n}\n\nexport async function getLessonsByTopicId(id: string) {\n  const topic = (await prisma.topic.findUnique({ where: { id } })) as Topic;\n  return await prisma.lesson.findMany({\n    where: { id: { in: topic.lessonIDs } },\n  });\n}\n", "import { useActionData, useLoaderData, useParams } from \"@remix-run/react\";\nimport { redirect } from \"@remix-run/node\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { prisma } from \"~/db.server\";\nimport Constructor from \"~/modules/Constructor\";\nimport { Language, Lesson, Topic } from \"@prisma/client\";\nimport {\n  createLessons,\n  deleteLessonsFromTopic,\n  getLessonsByTopicId,\n} from \"~/models/lesson.server\";\nimport { ActionData } from \"./new\";\nimport { json } from \"remix\";\nimport { checkTitleUnique, getLastAddedTopic } from \"~/models/topic.server\";\nimport { getActiveLanguage } from \"~/models/language.server\";\nimport { getTodayDate } from \"~/utils\";\n\nexport function ErrorBoundary() {\n  const { lessonId } = useParams();\n  return (\n    <div className=\"error-container\">{`There was an error loading lesson by the id ${lessonId}. Sorry.`}</div>\n  );\n}\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const today = new Date();\n  const form = await request.formData();\n  const title = form.get(\"title\") as string;\n  const activeLanguage = (await getActiveLanguage(request)) as Language;\n  const stepChapters = form.getAll(\"chapter\") as string[];\n  const topic = (await prisma.topic.findUnique({\n    where: { id: params.topicId },\n  })) as Topic;\n\n  if (title !== topic.title) {\n    const isTitleUnique = await checkTitleUnique(activeLanguage.id, title);\n\n    if (isTitleUnique) {\n      return json<ActionData>(\n        {\n          errors: { title: \"Title isn't unique\" },\n        },\n        { status: 400 }\n      );\n    }\n  }\n\n  const lessons = form.getAll(\"step\").map((item, index) => {\n    const stepType = form.get(`type${index}`);\n    let answer: string | string[] = form.get(`answer${index}`) as string;\n    answer = answer.trim().split(\" \");\n    const returnData = {\n      stepType,\n      number: index,\n      chapter: Number(stepChapters[index]),\n      languageId: activeLanguage.id,\n    };\n    switch (stepType) {\n      case \"Question\": {\n        const question = form.get(`question${index}`);\n        const keywords = form.get(`keywords${index}`) as string;\n        return {\n          ...returnData,\n          question,\n          answer,\n          keywords: keywords ? keywords.split(\",\") : [],\n        };\n      }\n      case \"Insert\": {\n        const text = form.get(`text${index}`) as string;\n        const isToChoose = !!form.get(`isToChoose${index}`);\n        const variantValues = form.getAll(`variant${index}`);\n        const variants = variantValues.map((value, idx) => ({\n          idx,\n          value,\n          isFocused: false,\n        }));\n        return {\n          ...returnData,\n          answer,\n          text: text.trim(),\n          isToChoose: variants.length === 0 ? isToChoose : false,\n          variants,\n        };\n      }\n      case \"Variants\": {\n        const question = form.get(`question${index}`);\n        const variants = form.getAll(`variant${index}`);\n        return {\n          ...returnData,\n          answer,\n          question,\n          variants: variants.map((variant, idx) => ({\n            value: variant,\n            idx: idx + 1,\n            isFocused: false,\n          })),\n        };\n      }\n      case \"Pairs\": {\n        const variants = form.getAll(`variant${index}`) as string[];\n        return {\n          ...returnData,\n          answer: answer[0].split(\",\"),\n          variants: variants.map((variant, idx) => ({\n            value: variant,\n            isFocused: false,\n            isConnected: true,\n            idx: idx + 1,\n          })),\n        };\n      }\n      default: {\n        return { ...returnData, answer };\n      }\n    }\n  }) as Lesson[];\n\n  await deleteLessonsFromTopic(params.topicId as string);\n\n  const createdLessonsIDs = await createLessons(lessons);\n  const data = {\n    title,\n    lessonIDs: createdLessonsIDs,\n    chapters: Number(stepChapters[stepChapters.length - 1]),\n    currentChapter: 0,\n    level: 0,\n    projectId: activeLanguage?.id,\n    // updatedAt: today.getDate().toString(),\n    updatedAt: getTodayDate(),\n  };\n\n  await prisma.topic.update({\n    where: { id: params.topicId },\n    data: { ...data },\n  });\n\n  return redirect(`/`);\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const topic = await prisma.topic.findUnique({\n    where: { id: params.topicId },\n  });\n  if (!topic) {\n    throw new Error(\"lesson not found\");\n  }\n\n  const activeLanguage = (await getActiveLanguage(request)) as Language;\n  const lastAddedTopics = (await getLastAddedTopic(\n    activeLanguage.id,\n    true\n  )) as Topic[];\n\n  const lessons = await getLessonsByTopicId(topic.id);\n  const data = {\n    title: topic.title,\n    steps: lessons,\n    lineNumber: topic.lineNumber,\n  };\n  return { data, lastAddedTopics };\n};\n\nexport default function ConstructorEdit() {\n  const actionData = useActionData() as ActionData;\n  const { data, lastAddedTopics } = useLoaderData();\n\n  return (\n    <Constructor\n      data={data}\n      lastAddedTopics={lastAddedTopics}\n      actionData={actionData}\n    />\n  );\n}\n", "import { useEffect, useReducer, useState } from \"react\";\nimport { Form, useTransition } from \"remix\";\nimport { FormButton } from \"~/components/lib\";\nimport TopicInfo from \"./components/TopicInfo\";\nimport { basicState, reducer } from \"./Levels/reducer\";\nimport actionCreator from \"./Levels/actions\";\nimport { ConstructorSidebar } from \"./components/lib\";\nimport Levels from \"./Levels\";\nimport Sidebar from \"./Levels/components/Sidebar\";\nimport { ActionData } from \"~/routes/$language/constructor/new\";\nimport { Step } from \"./Levels/types\";\n\nexport type ConstructorData = {\n  title: string;\n  steps: Step[];\n};\n\nexport default function Constructor({\n  data,\n  actionData,\n  lastAddedTopics,\n}: {\n  lastAddedTopics?: any;\n  data?: ConstructorData;\n  actionData: ActionData;\n}) {\n  const [basicInfoReady, setTopicInfoReady] = useState(false);\n  const [stepsReady, setStepsReady] = useState(false);\n  const [{ steps, chapters, currentScreen }, dispatch] = useReducer(\n    reducer,\n    basicState\n  );\n\n  const { setData, changeCurrentScreen } = actionCreator(dispatch);\n\n  const transition = useTransition();\n  const submitText = transition.state === \"submitting\" ? \"Saving\" : \"Save\";\n\n  const isSubmitActive = stepsReady === true && basicInfoReady === true;\n  const isSubmitDisabled =\n    stepsReady === false || basicInfoReady === false || submitText !== \"Save\";\n\n  useEffect(() => {\n    if (data) {\n      setData(data.steps);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (actionData?.errors?.title && currentScreen !== \"Topic\") {\n      changeCurrentScreen(\"Topic\");\n    }\n  }, [actionData]);\n\n  return (\n    <Form\n      method=\"post\"\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        height: \"calc(100vh - 95px)\",\n      }}\n    >\n      <div\n        style={{\n          maxWidth: \"70%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          flexGrow: 1,\n          position: \"relative\",\n          paddingLeft: 30,\n        }}\n      >\n        <TopicInfo\n          title={data?.title}\n          setReady={(val: boolean) => setTopicInfoReady(val)}\n          screen={currentScreen}\n          actionData={actionData}\n          lastAddedTopics={lastAddedTopics}\n        />\n\n        <Levels\n          steps={steps}\n          setReady={(val: boolean) => setStepsReady(val)}\n          screen={currentScreen}\n          dispatch={dispatch}\n        />\n      </div>\n      <ConstructorSidebar>\n        <Sidebar\n          chapters={chapters}\n          steps={steps}\n          currentScreen={currentScreen}\n          dispatch={dispatch}\n        >\n          <FormButton\n            type=\"submit\"\n            active={isSubmitActive}\n            disabled={isSubmitDisabled}\n          >\n            {submitText}\n          </FormButton>\n        </Sidebar>\n      </ConstructorSidebar>\n    </Form>\n  );\n}\n", "import { Topic } from \"@prisma/client\";\nimport { useEffect, useState } from \"react\";\nimport {\n  ErrorMessage,\n  Legend,\n  LessonBlock,\n  LessonProgress,\n  LessonProgressInner,\n  LessonsBlock,\n  LessonsContainer,\n  LessonTitle,\n} from \"~/components/lib\";\nimport { ActionData } from \"~/routes/$language/constructor/new\";\n\nimport { LessonTitleInput, ScreenContainer } from \"./lib\";\n\nexport default function TopicInfo({\n  title = \"\",\n  setReady,\n  screen,\n  actionData,\n  lastAddedTopics,\n}: {\n  lastAddedTopics: Topic[];\n  title: string | undefined;\n  setReady: Function;\n  screen: string;\n  actionData: ActionData;\n}) {\n  const [topicTitle, setLessonTitle] = useState(\"\");\n  const [lineNumber, setLineNumber] = useState(0);\n  useEffect(() => {\n    if (title) {\n      setLessonTitle(title);\n    }\n  }, []);\n  useEffect(() => {\n    setReady(!!topicTitle.length);\n  }, [topicTitle, setReady]);\n\n  return (\n    <ScreenContainer screen={screen} target=\"Topic\">\n      <input type=\"hidden\" name=\"formType\" value=\"repeat\" />\n      <input type=\"hidden\" name=\"lineNumber\" value={lineNumber} />\n\n      <Legend>Topic info</Legend>\n      <LessonProgress exp={\"0\"} style={{ margin: \"40px auto 0 auto\" }} />\n      <LessonTitleInput\n        type=\"text\"\n        name=\"title\"\n        placeholder=\"Enter topic title\"\n        value={topicTitle}\n        onChange={(e) => setLessonTitle(e.target.value)}\n        required\n        autoFocus={true}\n      />\n      {actionData?.errors?.title && (\n        <ErrorMessage role=\"alert\" id=\"title-error\">\n          {actionData.errors.title}\n        </ErrorMessage>\n      )}\n\n      {lastAddedTopics.length > 0 && (\n        <div style={{ width: \"100%\", maxWidth: \"440px\", margin: \"0 auto\" }}>\n          <h2 style={{ marginTop: 60 }}>Choose position for topic</h2>\n          <LessonsBlock>\n            {lastAddedTopics.map((lastAdded: Topic) => (\n              <LessonsContainer key={lastAdded.id}>\n                <LessonBlock>\n                  <button type=\"button\" aria-labelledby={lastAdded.title}>\n                    <LessonProgress\n                      exp={(\n                        (lastAdded.currentChapter / lastAdded.chapters) *\n                        100\n                      ).toString()}\n                    >\n                      <LessonProgressInner />\n                    </LessonProgress>\n                    <LessonTitle>{lastAdded.title}</LessonTitle>\n                  </button>\n                </LessonBlock>\n              </LessonsContainer>\n            ))}\n            {lastAddedTopics.length < 3 && (\n              <LessonsContainer key={\"312dsdf\"}>\n                <LessonBlock>\n                  <button\n                    type=\"button\"\n                    aria-labelledby={\"121\"}\n                    onClick={() => setLineNumber(lastAddedTopics[0].lineNumber)}\n                  >\n                    <LessonProgress exp={\"0\"} style={{ fontSize: \"39px\" }}>\n                      {lastAddedTopics[0].lineNumber === lineNumber ? (\n                        <LessonProgressInner />\n                      ) : (\n                        \"+\"\n                      )}\n                    </LessonProgress>\n                    <LessonTitle>\n                      {topicTitle.length ? topicTitle : \"Topic title\"}\n                    </LessonTitle>\n                  </button>\n                </LessonBlock>\n              </LessonsContainer>\n            )}\n          </LessonsBlock>\n          <LessonBlock>\n            <button\n              type=\"button\"\n              aria-labelledby={\"121\"}\n              onClick={() => setLineNumber(lastAddedTopics[0].lineNumber + 1)}\n            >\n              <LessonProgress exp={\"0\"} style={{ fontSize: \"39px\" }}>\n                {lastAddedTopics[0].lineNumber + 1 === lineNumber ? (\n                  <LessonProgressInner />\n                ) : (\n                  \"+\"\n                )}\n              </LessonProgress>\n              <LessonTitle>\n                {topicTitle.length ? topicTitle : \"Topic title\"}\n              </LessonTitle>\n            </button>\n          </LessonBlock>\n        </div>\n      )}\n    </ScreenContainer>\n  );\n}\n", "import styled from \"@emotion/styled\";\n\ntype ScreenContainerProps = {\n  screen: string;\n  target: string;\n};\n\nconst LessonTitleInput = styled(\"input\")`\n  width: fit-content;\n  margin: 0 auto;\n  text-align: center;\n  border: none;\n  font-size: 17px;\n  font-weight: 700;\n  color: #3c3c3c;\n  text-align: center;\n  margin-top: 8px;\n`;\n\nconst ConstructorMenu = styled(\"div\")`\n  background: #fff;\n  border: 2px solid #e5e5e5;\n  border-radius: 16px;\n  display: block;\n  margin: 0 24px 24px;\n  padding: 24px;\n  width: 380px;\n`;\n\nconst ScreenContainer = styled(\"section\")<ScreenContainerProps>`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  text-align: center;\n  visibility: ${(props) =>\n    props.screen !== props.target ? \"hidden\" : \"visible\"};\n`;\n\nconst ConstructorSidebar = styled(\"section\")`\n  max-width: 25%;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 71px;\n  position: relative;\n  background-color: #fff;\n  border: 2px solid #e5e5e5;\n  border-radius: 16px;\n  margin: 0 24px 24px;\n  padding: 24px;\n`;\n\nexport {\n  LessonTitleInput,\n  ConstructorMenu,\n  ScreenContainer,\n  ConstructorSidebar,\n};\n", "import type { Step, State } from \"./types\";\nimport { Action } from \"./actions\";\nimport { nanoid } from \"nanoid\";\n\nconst createStep = ({ number = 0, chapter = 1 }) => {\n  return {\n    active: true,\n    question: \"\",\n    id: nanoid(),\n    answer: \"\",\n    number,\n    keywords: [],\n    stepType: \"\",\n    ready: false,\n    text: \"\",\n    variants: [],\n    chapter,\n  };\n};\n\nexport const basicState = {\n  chapters: [1],\n  currentScreen: \"Topic\",\n  steps: [createStep({})],\n} as State;\n\nexport const reducer = (state: State, action: Action): State => {\n  const { steps, chapters } = state;\n  const { type } = action;\n  switch (type) {\n    case \"SET_DATA\": {\n      const { steps } = action.payload;\n      return {\n        ...state,\n        steps,\n      };\n    }\n    case \"SET_STEP_TYPE\": {\n      const { stepType, id } = action.payload;\n      const newSteps = steps.map((step: Step) =>\n        step.id === id ? { ...step, stepType: stepType } : { ...step }\n      );\n      return { ...state, steps: [...newSteps] };\n    }\n    case \"REMOVE_STEP_TYPE\": {\n      const { id } = action.payload;\n      const newSteps = steps.map((step: Step) => {\n        if (step.id === id) {\n          return {\n            ...step,\n            stepType: \"\",\n            keywords: [],\n            answer: \"\",\n            ready: false,\n          };\n        } else {\n          return { ...step };\n        }\n      });\n      return { ...state, steps: [...newSteps] };\n    }\n    case \"SET_STEP_READY\": {\n      const { isReady, number } = action.payload;\n      const newSteps = steps;\n      newSteps[number].ready = isReady;\n      return {\n        ...state,\n        steps: [...newSteps],\n      };\n    }\n    case \"SET_STEP_ACTIVE\": {\n      const { id } = action.payload;\n      const newSteps = steps.map((step) => {\n        if (step.id === id) {\n          return { ...step, active: true };\n        }\n        return { ...step, active: false };\n      });\n      return { ...state, steps: [...newSteps] };\n    }\n    case \"SET_QUESTION\": {\n      const { question, number } = action.payload;\n      let newSteps = steps;\n      newSteps[number].question = question;\n      return { ...state, steps: [...newSteps] };\n    }\n    case \"SET_ANSWER\": {\n      const { answer, number } = action.payload;\n      let newSteps = steps;\n      newSteps[number].answer = answer;\n      return { ...state, steps: [...newSteps] };\n    }\n    case \"SET_KEYWORDS\": {\n      let { keywords, number } = action.payload;\n      let newSteps = steps;\n      newSteps[number].keywords = keywords;\n      return { ...state, steps: [...newSteps] };\n    }\n    case \"ADD_STEP\": {\n      const { chapter } = action.payload;\n      const newSteps = steps.map((step) => ({ ...step, active: false }));\n      return {\n        ...state,\n        steps: [...newSteps, createStep({ number: steps.length, chapter })],\n      };\n    }\n    case \"REMOVE_STEP\": {\n      const newSteps = steps\n        .filter((item: Step) => action.payload.id !== item.id)\n        .map((item: Step, i: number) => ({ ...item, number: i }));\n      return {\n        ...state,\n        steps: [...newSteps],\n      };\n    }\n    case \"ADD_CHAPTER\": {\n      const newChapter = chapters.length + 1;\n      const newSteps = steps.map((step) => ({ ...step, active: false }));\n      return {\n        ...state,\n        chapters: [...chapters, newChapter],\n        steps: [\n          ...newSteps,\n          createStep({ number: steps.length, chapter: newChapter }),\n        ],\n      };\n    }\n    case \"CHANGE_CURRENT_SCREEN\": {\n      const { currentScreen } = action.payload;\n      return { ...state, currentScreen };\n    }\n    default:\n      throw new Error(`We don't know this action type: ${type}`);\n  }\n};\n", "import { Step } from \"./types\";\n\nexport type Action =\n  | { type: \"SET_STEP_TYPE\"; payload: { stepType: string; id: string } }\n  | { type: \"REMOVE_STEP_TYPE\"; payload: { id: string } }\n  | { type: \"SET_ANSWER\"; payload: { answer: string; number: number } }\n  | { type: \"SET_KEYWORDS\"; payload: { keywords: string[]; number: number } }\n  | { type: \"ADD_STEP\"; payload: { chapter: number } }\n  | { type: \"REMOVE_STEP\"; payload: { id: string } }\n  | { type: \"SET_STEP_READY\"; payload: { isReady: boolean; number: number } }\n  | { type: \"SET_DATA\"; payload: { steps: Step[] } }\n  | { type: \"SET_QUESTION\"; payload: { question: string; number: number } }\n  | { type: \"ADD_CHAPTER\" }\n  | { type: \"SET_STEP_ACTIVE\"; payload: { id: string } }\n  | { type: \"CHANGE_CURRENT_SCREEN\"; payload: { currentScreen: string } };\n\nconst actionCreator = (dispatch: Function) => ({\n  setStepType: (stepType: string, id: string): Action =>\n    dispatch({ type: \"SET_STEP_TYPE\", payload: { stepType, id } }),\n  removeStepType: (id: string): Action =>\n    dispatch({ type: \"REMOVE_STEP_TYPE\", payload: { id } }),\n  setAnswer: (answer: string, number: number): Action =>\n    dispatch({ type: \"SET_ANSWER\", payload: { answer, number } }),\n  setKeywords: (keywords: string[], number: number): Action =>\n    dispatch({ type: \"SET_KEYWORDS\", payload: { keywords, number } }),\n  addStep: (chapter: number): Action =>\n    dispatch({ type: \"ADD_STEP\", payload: { chapter } }),\n  removeStep: (id: string): Action =>\n    dispatch({ type: \"REMOVE_STEP\", payload: { id } }),\n  setStepReady: (isReady: boolean, number: number): Action =>\n    dispatch({ type: \"SET_STEP_READY\", payload: { isReady, number } }),\n  setData: (steps: Step[]): Action =>\n    dispatch({ type: \"SET_DATA\", payload: { steps } }),\n  setQuestion: (question: string, number: number): Action =>\n    dispatch({ type: \"SET_QUESTION\", payload: { question, number } }),\n  addChapter: () => dispatch({ type: \"ADD_CHAPTER\" }),\n  setStepActive: (id: string) =>\n    dispatch({ type: \"SET_STEP_ACTIVE\", payload: { id } }),\n  changeCurrentScreen: (currentScreen: string) =>\n    dispatch({ type: \"CHANGE_CURRENT_SCREEN\", payload: { currentScreen } }),\n});\n\nexport default actionCreator;\n", "import { useEffect } from \"react\";\nimport { Legend } from \"~/components/lib\";\nimport type { Step } from \"./types\";\nimport QuestionAnswer from \"./components/QuestionAnswer\";\nimport { StepContent, StepHeader } from \"./components/lib\";\nimport Variants from \"./components/Variants\";\nimport MatchingPairs from \"./components/MatchingPairs\";\nimport InsertWords from \"./components/InsertWords\";\nimport Close from \"~/styles/close.svg\";\nimport ChooseStyleScreen from \"./components/ChooseStyleScreen\";\nimport { ScreenContainer } from \"../components/lib\";\nimport actionCreator, { Action } from \"./actions\";\n\nexport default function Levels({\n  steps,\n  setReady,\n  screen,\n  dispatch,\n}: {\n  steps: Step[];\n  setReady: Function;\n  screen: string;\n  dispatch: React.Dispatch<Action>;\n}) {\n  useEffect(() => {\n    setReady(!steps.find((step: Step) => step.ready === false));\n  }, [steps, setReady]);\n\n  const {\n    setAnswer,\n    setKeywords,\n    setStepType,\n    setStepReady,\n    removeStepType,\n    setQuestion,\n  } = actionCreator(dispatch);\n\n  return (\n    <ScreenContainer screen={screen} target=\"Steps\">\n      {steps.map(\n        (\n          {\n            active,\n            question,\n            number,\n            keywords,\n            answer,\n            stepType,\n            id,\n            variants,\n            ready,\n            text,\n            chapter,\n          }: Step,\n          idx: number\n        ) => (\n          <section className={`${!active && \"visuallyHidden\"}`} key={id}>\n            <input type=\"hidden\" name=\"step\" value={idx} />\n            <input type=\"hidden\" name={`chapter`} value={chapter} />\n            <Legend>{stepType ? stepType : \"Choose type\"}</Legend>\n            <StepHeader>\n              {stepType !== \"\" && (\n                <button\n                  type=\"button\"\n                  style={{\n                    position: \"absolute\",\n                    cursor: \"pointer\",\n                    width: 16,\n                    height: 16,\n                    border: \"none\",\n                    backgroundColor: \"inherit\",\n                    padding: 0,\n                    left: 30,\n                    bottom: -60,\n                  }}\n                  onClick={() => removeStepType(id)}\n                >\n                  <img\n                    src={Close}\n                    alt=\"close\"\n                    style={{\n                      width: \"16px\",\n                      height: \"16px\",\n                      verticalAlign: \"initial\",\n                    }}\n                  />\n                </button>\n              )}\n            </StepHeader>\n\n            <StepContent>\n              {stepType === \"\" && (\n                <ChooseStyleScreen setStepType={setStepType} id={id} />\n              )}\n\n              {stepType === \"Question\" ? (\n                <QuestionAnswer\n                  question={question}\n                  number={number}\n                  answer={\n                    typeof answer !== \"string\" ? answer.join(\" \") : answer\n                  }\n                  setQuestion={(question: string) =>\n                    setQuestion(question, number)\n                  }\n                  setAnswer={(answer: string) => setAnswer(answer, number)}\n                  setKeywords={(keywords: string[]) =>\n                    setKeywords(keywords, number)\n                  }\n                  keywords={keywords}\n                  setReady={(isReady: boolean) => setStepReady(isReady, number)}\n                />\n              ) : stepType === \"Insert\" ? (\n                <InsertWords\n                  text={text}\n                  number={number}\n                  answer={\n                    typeof answer !== \"string\" ? answer.join(\" \") : answer\n                  }\n                  setAnswer={(answer: string) => setAnswer(answer, number)}\n                  setReady={(isReady: boolean) => setStepReady(isReady, number)}\n                />\n              ) : stepType === \"Variants\" ? (\n                <Variants\n                  initialQuestion={question}\n                  initialVariants={variants}\n                  number={number}\n                  answer={answer}\n                  setAnswer={(answer: string) => setAnswer(answer, number)}\n                  setReady={(isReady: boolean) => setStepReady(isReady, number)}\n                  variantsCount={3}\n                />\n              ) : stepType === \"Pairs\" ? (\n                <MatchingPairs\n                  number={number}\n                  answer={answer}\n                  setAnswer={(answer: string) => setAnswer(answer, number)}\n                  variantsCount={4}\n                  setReady={(isReady: boolean) => setStepReady(isReady, number)}\n                  initialVariants={variants}\n                />\n              ) : null}\n            </StepContent>\n          </section>\n        )\n      )}\n    </ScreenContainer>\n  );\n}\n", "import { Fragment, useEffect } from \"react\";\nimport { LabelText, Textarea, TextareaLabel } from \"~/components/lib\";\nimport Keywords from \"../../components/Keywords\";\nimport { doesItemContainSign } from \"~/utils\";\nimport type { FieldsetType } from \"../types\";\n\ntype QA = FieldsetType & {\n  question?: string | null;\n  setQuestion: Function;\n  setKeywords: Function;\n  keywords: string[];\n};\n\nexport default function QuestionAnswer({\n  question,\n  setQuestion,\n  number,\n  answer,\n  setAnswer,\n  setReady,\n  setKeywords,\n  keywords,\n}: QA) {\n  useEffect(() => {\n    if (question && answer) {\n      setReady(true);\n    } else {\n      setReady(false);\n    }\n  }, [question, answer]);\n\n  useEffect(() => {\n    setKeywords(keywords);\n  }, []);\n\n  return (\n    <Fragment>\n      <input type=\"hidden\" name={`type${number}`} value={\"Question\"} />\n\n      <fieldset style={{ padding: \"0 25%\" }}>\n        <input\n          type=\"text\"\n          name={`question${number}`}\n          placeholder=\"Set question\"\n          style={{\n            border: \"none\",\n            marginBottom: 10,\n            width: \"100%\",\n          }}\n          value={question === null ? \"\" : question}\n          onChange={(evt) => setQuestion(evt.target.value)}\n          autoFocus={true}\n          required\n        />\n\n        <Textarea\n          name={`answer${number}`}\n          placeholder=\"Type answer\"\n          value={answer}\n          onChange={(evt) => setAnswer(evt.target.value)}\n          required\n        />\n      </fieldset>\n      <TextareaLabel htmlFor={`keywords${number}`}>\n        <LabelText>Choose keywords</LabelText>\n        <Keywords\n          answer={answer as string}\n          initialKeywords={keywords}\n          onSet={setKeywords}\n        />\n\n        <input\n          type=\"hidden\"\n          id={`keywords${number}`}\n          name={`keywords${number}`}\n          placeholder=\"Type keywords\"\n          value={keywords.map(\n            (keyword) => doesItemContainSign(keyword).newItem\n          )}\n          readOnly\n        />\n      </TextareaLabel>\n    </Fragment>\n  );\n}\n", "import { useEffect, useState } from \"react\";\nimport { isItemInArray } from \"~/utils\";\nimport Keyword from \"./Keyword\";\n\nexport default function Keywords({\n  answer,\n  onSet,\n  initialKeywords = [],\n}: {\n  initialKeywords: string[];\n  answer: string;\n  onSet: Function;\n}) {\n  const [keywords, setKeywords] = useState<string[]>(initialKeywords);\n\n  useEffect(() => {\n    onSet(keywords);\n  }, [keywords]);\n\n  return (\n    <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n      {answer.split(\" \").map((item: string, idx: number) => {\n        if (item.includes(\",\")) {\n          item = item.slice(0, -1);\n        }\n        return (\n          <Keyword\n            key={idx}\n            onSet={(word: string) =>\n              setKeywords((prevArr: string[]) => {\n                if (isItemInArray(prevArr, item)) {\n                  prevArr.splice(prevArr.indexOf(word), 1);\n                  return [...prevArr];\n                } else {\n                  return [...prevArr, word];\n                }\n              })\n            }\n            initiallyActive={!!keywords.find((keyword) => keyword === item)}\n          >\n            {item}\n          </Keyword>\n        );\n      })}\n    </div>\n  );\n}\n", "import { useState } from \"react\";\nimport { KeywordTemplate } from \"~/components/lib\";\n\nconst Keyword: React.FC<{ onSet: Function; initiallyActive: boolean }> = ({\n  onSet,\n  children,\n  initiallyActive,\n}) => {\n  const [isActive, setIsActive] = useState(initiallyActive);\n\n  return (\n    <KeywordTemplate\n      active={isActive}\n      onClick={() => {\n        onSet(children);\n        setIsActive(!isActive);\n      }}\n    >\n      {children}\n    </KeywordTemplate>\n  );\n};\n\nexport default Keyword;\n", "import { Fragment, useEffect, useReducer, useState } from \"react\";\nimport { Textarea } from \"~/components/lib\";\nimport { FieldsetType } from \"../types\";\nimport { VariantItemInput, VariantItemNumber } from \"./lib\";\nimport { reducer, Variant } from \"./MatchingPairs/reducer\";\nimport {\n  variantChoose,\n  variantSetValue,\n  variantsSetup,\n} from \"./MatchingPairs/actions\";\n\ntype VariantsProps = FieldsetType & {\n  initialQuestion: string | null;\n  initialVariants: Variant[] | undefined;\n  variantsCount: number;\n};\n\nexport default function Variants({\n  initialQuestion = \"\",\n  initialVariants = [],\n  number,\n  answer,\n  setAnswer,\n  setReady,\n  variantsCount,\n}: VariantsProps) {\n  const [{ variants }, dispatch] = useReducer(reducer, {\n    variants: initialVariants,\n    pairs: [],\n  });\n  const [question, setQuestion] = useState(initialQuestion);\n\n  useEffect(() => {\n    if (variants.length === 0) {\n      dispatch(variantsSetup(variantsCount));\n    }\n  }, [variantsCount]);\n\n  useEffect(() => {\n    if (\n      variants.filter((variant: Variant) => variant.value.length === 0).length\n    ) {\n      return setReady(false);\n    }\n\n    if (\n      variants.find(\n        (variant: Variant) => variant.isFocused || variant.value === answer[0]\n      )\n    ) {\n      setReady(true);\n    } else {\n      return setReady(false);\n    }\n\n    if (question?.length) {\n      setReady(true);\n    } else {\n      setReady(false);\n    }\n  }, [variants, question]);\n\n  return (\n    <Fragment>\n      <input type=\"hidden\" name={`answer${number}`} value={answer} />\n      <input type=\"hidden\" name={`type${number}`} value={\"Variants\"} />\n\n      <div>\n        <h2>Read and Respond</h2>\n      </div>\n\n      <Textarea\n        name={`question${number}`}\n        placeholder=\"Type question\"\n        style={{ minHeight: 100 }}\n        value={question === null ? \"\" : question}\n        onChange={(e) => setQuestion(e.target.value)}\n        required\n      />\n      <ul>\n        {variants.map((variant: Variant, index) => (\n          <li key={variant.idx} style={{ marginBottom: 5 }}>\n            <label style={{ position: \"relative\" }}>\n              <VariantItemNumber\n                onClick={(e) => {\n                  e.preventDefault();\n                  dispatch(variantChoose(index));\n                  setAnswer(variant.value);\n                }}\n                isFocused={variant.isFocused || variant.value === answer[0]}\n              >\n                {variant.idx}\n              </VariantItemNumber>\n              <VariantItemInput\n                type=\"text\"\n                name={`variant${number}`}\n                placeholder=\"type first variant\"\n                autoComplete=\"off\"\n                value={variant.value}\n                onChange={(e) => {\n                  dispatch(variantSetValue(index, e.target.value));\n\n                  if (variant.isFocused) {\n                    setAnswer(e.target.value);\n                  }\n                }}\n                required\n              />\n            </label>\n          </li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n}\n", "import { Action } from \"./actions\";\n\nexport type Variant = {\n  type: string | null;\n  value: string;\n  idx: number;\n  isFocused: boolean;\n  isConnected: boolean;\n};\n\nexport type State = {\n  variants: Variant[];\n  pairs: string[];\n};\n\nexport const basicState: State = {\n  variants: [],\n  pairs: [],\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  const { variants, pairs } = state;\n  switch (action.type) {\n    case \"SETUP\": {\n      const { variantsCount, variants, pairs } = action.payload;\n      const newVariants = [];\n      if (variants.length) {\n        return { ...state, variants: [...variants], pairs };\n      }\n      for (let i = 1; i <= variantsCount; i++) {\n        newVariants.push({\n          type: i - 1 < variantsCount / 2 ? \"left\" : \"right\", // Dividing on halfs.\n          value: \"\",\n          isFocused: false,\n          idx: i,\n          isConnected: false,\n        });\n      }\n      return { ...state, variants: newVariants };\n    }\n    case \"VARIANTS_SETUP\": {\n      const { variantsCount } = action.payload;\n      const variants = [];\n      for (let i = 1; i <= variantsCount; i++) {\n        variants.push({\n          value: \"\",\n          isFocused: false,\n          isConnected: false,\n          type: null,\n          idx: i,\n        });\n      }\n      return { ...state, variants };\n    }\n    case \"VARIANT_SET_VALUE\": {\n      const { idx, value } = action.payload;\n      const newVariants = variants;\n      newVariants[idx].value = value;\n      return { ...state, variants: [...newVariants] };\n    }\n    case \"TYPE\": {\n      const { value, idx } = action.payload;\n      const newVariants = variants;\n      newVariants[\n        newVariants.indexOf(\n          newVariants.find(\n            (variant: Variant) => variant.idx === Number(idx)\n          ) as Variant\n        )\n      ].value = value;\n      return { ...state, variants: [...newVariants] };\n    }\n    case \"CHOOSE\": {\n      const { idx } = action.payload;\n      const variantItem = variants.find(\n        (variant: Variant) => variant.idx === Number(idx)\n      );\n      if (variantItem?.type === \"left\") {\n        const newVariants = variants.map((variant: Variant) => ({\n          ...variant,\n          isFocused: variant.idx === Number(idx),\n        }));\n        return { ...state, variants: newVariants };\n      }\n      const newVariants = variants.map((variant: Variant) => ({\n        ...variant,\n        isFocused: variant.idx === Number(idx),\n      }));\n      return { ...state, variants: newVariants };\n    }\n    case \"VARIANT_CHOOSE\": {\n      const { idx } = action.payload;\n      const newVariants = variants.map((variant: Variant) => ({\n        ...variant,\n        isFocused: false,\n      }));\n      newVariants[idx].isFocused = true;\n      return { ...state, variants: [...newVariants] };\n    }\n    case \"CONNECT\": {\n      const { activeIdx, idx } = action.payload;\n      let newPairs = pairs;\n      let exists = newPairs.find(\n        (item) => item.includes(`${activeIdx}`) || item.includes(`${idx}`)\n      );\n      if (exists) {\n        newPairs[newPairs.indexOf(exists)] = `${activeIdx}${idx}`;\n      } else {\n        newPairs.push(`${activeIdx}${idx}`);\n      }\n      return {\n        ...state,\n        variants: variants.map((variant: Variant) => ({\n          ...variant,\n          isFocused: false,\n          isConnected: newPairs.filter((pair) =>\n            pair.includes(`${variant.idx}`)\n          ).length,\n        })),\n        pairs: newPairs,\n      };\n    }\n    case \"ADD_PAIR\": {\n      const newVariants = variants;\n      newVariants.push({\n        value: \"\",\n        isFocused: false,\n        idx: newVariants.length + 1,\n        isConnected: false,\n        type: null,\n      });\n      newVariants.push({\n        value: \"\",\n        isFocused: false,\n        idx: newVariants.length + 1,\n        isConnected: false,\n        type: null,\n      });\n      return { ...state, variants: [...newVariants] };\n    }\n    default: {\n      throw new Error(`Omg we don't know this action type`);\n    }\n  }\n};\n", "import { Variant } from \"@prisma/client\";\n\nexport type Action =\n  | {\n      type: \"SETUP\";\n      payload: { variantsCount: number; variants: Variant[]; pairs: string[] };\n    }\n  | { type: \"VARIANTS_SETUP\"; payload: { variantsCount: number } }\n  | { type: \"VARIANT_SET_VALUE\"; payload: { idx: number; value: string } }\n  | { type: \"TYPE\"; payload: { value: string; idx: number } }\n  | { type: \"CHOOSE\"; payload: { idx: number } }\n  | { type: \"VARIANT_CHOOSE\"; payload: { idx: number } }\n  | { type: \"CONNECT\"; payload: { activeIdx: number; idx: number } }\n  | { type: \"ADD_PAIR\" };\n\nexport const pairsSetup = (\n  variantsCount: number,\n  variants: Variant[],\n  pairs: string[]\n): Action => ({\n  type: \"SETUP\",\n  payload: { variantsCount, variants, pairs },\n});\n\nexport const variantsSetup = (variantsCount: number): Action => ({\n  type: \"VARIANTS_SETUP\",\n  payload: { variantsCount },\n});\n\nexport const variantSetValue = (idx: number, value: string): Action => ({\n  type: \"VARIANT_SET_VALUE\",\n  payload: { idx, value },\n});\n\nexport const pairsType = (value: string, idx: number): Action => ({\n  type: \"TYPE\",\n  payload: { value, idx },\n});\n\nexport const pairsChoose = (idx: number): Action => ({\n  type: \"CHOOSE\",\n  payload: {\n    idx,\n  },\n});\n\nexport const variantChoose = (idx: number): Action => ({\n  type: \"VARIANT_CHOOSE\",\n  payload: { idx },\n});\n\nexport const pairsConnect = (activeIdx: number, idx: number): Action => ({\n  type: \"CONNECT\",\n  payload: { activeIdx, idx },\n});\n\nexport const addPair = (): Action => ({ type: \"ADD_PAIR\" });\n", "import MatchingPairs from \"./MatchingPairs\";\n\nexport default MatchingPairs;\n", "import { Fragment, useEffect, useReducer } from \"react\";\nimport { FieldsetType } from \"../../types\";\nimport { VariantItemNumber, VariantItemInput } from \"../lib\";\nimport { pairsChoose, pairsConnect, pairsSetup, pairsType } from \"./actions\";\nimport { reducer, Variant } from \"./reducer\";\n\ntype MP = FieldsetType & {\n  variantsCount: number;\n  initialVariants: Variant[];\n};\n\nexport default function MatchingPairs({\n  number,\n  answer,\n  setAnswer,\n  variantsCount = 4,\n  setReady,\n  initialVariants = [],\n}: MP) {\n  const [{ variants, pairs }, dispatch] = useReducer(reducer, {\n    variants: initialVariants,\n    pairs: [],\n  });\n\n  useEffect(() => {\n    dispatch(pairsSetup(variantsCount, initialVariants, answer as string[]));\n  }, []);\n\n  useEffect(() => {\n    if (pairs.length === variantsCount / 2) {\n      setAnswer(pairs);\n      setReady(true);\n    }\n    if (pairs.length !== variantsCount / 2) {\n      setReady(false);\n    }\n  }, [pairs.length, pairs]);\n\n  return (\n    <Fragment>\n      <input type=\"hidden\" name={`type${number}`} value={\"Pairs\"} />\n      <input type=\"hidden\" name={`answer${number}`} value={answer} />\n      <div style={{ marginBottom: \"20px\" }}>\n        <h2>Create and Connect pairs</h2>\n      </div>\n\n      <ul\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-evenly\",\n          maxWidth: 600,\n          margin: \"0 auto\",\n        }}\n      >\n        {variants.map((variant: Variant) => (\n          <li key={variant.idx} style={{ marginBottom: 5 }}>\n            <label style={{ position: \"relative\" }}>\n              <VariantItemNumber\n                onClick={(e) => {\n                  e.preventDefault();\n                  const activeIdx = variants.filter(\n                    (variantItem: Variant) => variantItem.isFocused\n                  )[0]?.idx;\n                  if (\n                    variants.filter(\n                      (variantItem: Variant) => variantItem.isFocused\n                    ).length === 1 ||\n                    variant.isFocused\n                  ) {\n                    dispatch(pairsConnect(activeIdx, variant.idx));\n                  } else {\n                    dispatch(pairsChoose(variant.idx));\n                  }\n                }}\n                isConnected={variant.isConnected}\n                isFocused={variant.isFocused}\n              >\n                {variant.idx}\n              </VariantItemNumber>\n              <VariantItemInput\n                type=\"text\"\n                name={`variant${number}`}\n                placeholder=\"type first variant\"\n                value={variant.value}\n                autoComplete=\"off\"\n                onChange={(e) =>\n                  dispatch(pairsType(e.target.value, variant.idx))\n                }\n                required\n              />\n            </label>\n          </li>\n        ))}\n        <button\n          type=\"button\"\n          onClick={() => dispatch({ type: \"ADD_PAIR\" })}\n          style={{ display: \"block\", width: \"100%\" }}\n        >\n          Add pair\n        </button>\n      </ul>\n    </Fragment>\n  );\n}\n", "import InsertWords from \"./InsertWords\";\n\nexport default InsertWords;\n", "import { Fragment, useEffect, useState } from \"react\";\nimport { Textarea } from \"~/components/lib\";\nimport { LessonTitle } from \"~/modules/Lesson/components/lib\";\nimport { doesItemContainSign, isItemInArray, useFocus } from \"~/utils\";\nimport type { FieldsetType } from \"../../types\";\nimport { InsertWordsInput, InsertWordsTextBlock } from \"../lib\";\nimport Backend from \"./Backend\";\nimport ChooseMissingWords from \"./ChooseMissingWords\";\n\ntype InsertWords = FieldsetType & {\n  text: string;\n  answer: string;\n};\n\nexport default function InsertWords({\n  text,\n  number,\n  answer,\n  setAnswer,\n  setReady,\n}: InsertWords) {\n  const [words, setWords] = useState<string[]>([]);\n  const [showText, setShowText] = useState(false);\n  const [isChooseVariants, setChooseVariants] = useState(false);\n  // const [variants, setVariants] = useState([\"\"]);\n  const ref = useFocus();\n\n  const defaultAnswer = words\n    .map((word) => {\n      const { newItem } = doesItemContainSign(word);\n\n      return newItem + \" \";\n    })\n    .join(\"\");\n\n  useEffect(() => {\n    // if (words.length === 1) {\n    //   setVariants([...words]);\n    // }\n    setReady(!!words.length);\n  }, [words.length]);\n\n  useEffect(() => {\n    if (text) {\n      setAnswer(text);\n      const newWords = text.split(\" \").filter((txt) => {\n        const { newItem } = doesItemContainSign(txt);\n        return isItemInArray(answer.split(\" \"), newItem);\n      });\n      setWords(newWords);\n      setShowText(true);\n    }\n    // }, [text]);\n  }, []);\n\n  return (\n    <fieldset style={{ padding: \"0 25%\" }}>\n      <input\n        type=\"hidden\"\n        name={`answer${number}`}\n        defaultValue={defaultAnswer}\n      />\n      <input type=\"hidden\" name={`type${number}`} value={\"Insert\"} />\n      <input\n        type=\"hidden\"\n        name={`isToChoose${number}`}\n        defaultValue={isChooseVariants ? \"1\" : undefined}\n      />\n\n      <LessonTitle>Add missing words</LessonTitle>\n\n      <Textarea\n        name={`text${number}`}\n        placeholder=\"Type text\"\n        value={answer}\n        // value={text}\n        onChange={(evt) => {\n          setAnswer(evt.target.value);\n        }}\n        ref={ref}\n        required\n      />\n\n      <InsertWordsTextBlock showText={showText} style={{ marginTop: -206 }}>\n        {answer.split(\" \").map((item, idx) => {\n          const { newItem, sign } = doesItemContainSign(item);\n\n          if (!isItemInArray(words, item)) {\n            return (\n              <span style={{ marginRight: 3 }} key={idx}>\n                {item}\n              </span>\n            );\n          }\n\n          if (sign) {\n            return (\n              <Fragment key={idx}>\n                <InsertWordsInput type=\"text\" length={newItem.length} />\n                <span>{sign}</span>\n              </Fragment>\n            );\n          }\n\n          return (\n            <InsertWordsInput type=\"text\" key={idx} length={newItem.length} />\n          );\n        })}\n\n        {isChooseVariants && (\n          <ChooseMissingWords words={words} number={number} />\n        )}\n      </InsertWordsTextBlock>\n\n      <Backend\n        words={words}\n        answer={answer}\n        setWords={setWords}\n        showText={setShowText}\n        setChooseVariants={setChooseVariants}\n        setShowText={setShowText}\n        isChooseVariants={isChooseVariants}\n      />\n    </fieldset>\n  );\n}\n", "import { isItemInArray } from \"~/utils\";\n\nexport default function Backend({\n  showText,\n  setShowText,\n  setChooseVariants,\n  isChooseVariants,\n  answer,\n  words,\n  setWords,\n}) {\n  return (\n    <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n      <h3>Mark words which should be hidden</h3>\n      <button\n        type=\"button\"\n        style={{ display: showText ? \"block\" : \"none\" }}\n        onClick={() => setShowText(false)}\n      >\n        Edit text\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => setChooseVariants(!isChooseVariants)}\n      >\n        Set variants\n      </button>\n      {answer.split(\" \").map((item, idx) => {\n        return (\n          <span\n            style={{\n              marginRight: 3,\n              border: words.find((word) => word === item)\n                ? \"1px solid green\"\n                : \"none\",\n            }}\n            key={idx}\n            onClick={() => {\n              setWords(() => {\n                if (isItemInArray(words, item)) {\n                  words.splice(words.indexOf(item), 1);\n                  return [...words];\n                }\n\n                return [...words, item];\n              });\n              setShowText(true);\n            }}\n          >\n            {item}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n", "import { Fragment, useEffect, useState } from \"react\";\nimport { VariantItem } from \"~/modules/Lesson/components/lib\";\nimport { VariantItemInput } from \"../lib\";\n\nexport default function ChooseMissingWords({ words, number }) {\n  //   const [variants, setVariants] = useState([\"\"]);\n  const [variants, setVariants] = useState(() =>\n    words.length ? [...words] : [\"\"]\n  );\n\n  //   useEffect(() => {\n  //     if (words.length === 1) {\n  //       setVariants([...words]);\n  //     }\n  //   }, [words]);\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <ul style={{ listStyleType: \"none\", padding: 0, margin: 0 }}>\n        {words.length === 1 ? (\n          <Fragment>\n            <li>\n              <VariantItem\n                type=\"button\"\n                isFocused={false}\n                onClick={() => setVariants((prevVars) => [...prevVars, \"\"])}\n              >\n                Add variant\n              </VariantItem>\n            </li>\n            {variants.map((variant, idx) => (\n              <VariantItemInput\n                key={`insertwordvariant${idx}`}\n                type=\"text\"\n                name={`variant${number}`}\n                placeholder=\"type variant\"\n                autoComplete=\"off\"\n                defaultValue={variant}\n                required\n              />\n            ))}\n          </Fragment>\n        ) : (\n          words.map((word, idx: number) => (\n            <li key={idx} style={{ position: \"relative\", marginBottom: 8 }}>\n              <VariantItem type=\"button\" isFocused={false}>\n                {word}\n              </VariantItem>\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n}\n", "import { ChooseStyle, StyleButton } from \"./lib\";\n\nexport default function ChooseStyleScreen({ setStepType, id }) {\n  return (\n    <ChooseStyle>\n      <StyleButton type=\"button\" onClick={() => setStepType(\"Question\", id)}>\n        Question / Answer\n      </StyleButton>\n      <StyleButton type=\"button\" onClick={() => setStepType(\"Insert\", id)}>\n        Insert words\n      </StyleButton>\n      <StyleButton type=\"button\" onClick={() => setStepType(\"Variants\", id)}>\n        Choose right variant\n      </StyleButton>\n      <StyleButton type=\"button\" onClick={() => setStepType(\"Pairs\", id)}>\n        Matching pairs\n      </StyleButton>\n    </ChooseStyle>\n  );\n}\n", "import React, { Fragment } from \"react\";\nimport actionCreator, { Action } from \"../actions\";\nimport { Step } from \"../types\";\n\nconst Sidebar: React.FC<{\n  chapters: number[];\n  steps: Step[];\n  currentScreen: string;\n  dispatch: React.Dispatch<Action>;\n}> = ({ children, chapters, steps, currentScreen, dispatch }) => {\n  const {\n    addChapter,\n    addStep,\n    removeStep,\n    setStepActive,\n    changeCurrentScreen,\n  } = actionCreator(dispatch);\n  return (\n    <Fragment>\n      <h2>Sidebar</h2>\n      <ul style={{ marginBottom: \"auto\" }}>\n        <li>\n          <button\n            type=\"button\"\n            onClick={() => {\n              changeCurrentScreen(\"Topic\");\n            }}\n            style={{\n              color: \"#3c3c3c\",\n              display: \"block\",\n              fontSize: 16,\n              fontWeight: 700,\n              overflow: \"hidden\",\n              padding: \"15px 20px\",\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\",\n            }}\n          >\n            Topic Info\n          </button>\n        </li>\n        {chapters.map((chapter) => (\n          <li key={`chapter-${chapter}`}>\n            <button\n              type=\"button\"\n              onClick={() => {\n                changeCurrentScreen(\"Steps\");\n                setStepActive(steps[steps.length - 1].id);\n              }}\n              style={{\n                color: \"#3c3c3c\",\n                display: \"block\",\n                fontSize: 16,\n                fontWeight: 700,\n                overflow: \"hidden\",\n                padding: \"15px 20px\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              Chapter {chapter}\n            </button>\n            <ul>\n              {steps.map(\n                (stepsItem: any) =>\n                  stepsItem.chapter === chapter && (\n                    <li key={stepsItem.id}>\n                      <button\n                        type=\"button\"\n                        onClick={() => {\n                          changeCurrentScreen(\"Steps\");\n                          setStepActive(stepsItem.id);\n                        }}\n                      >\n                        Step {stepsItem.number + 1}\n                      </button>\n                      {stepsItem.number > 0 ? (\n                        <button\n                          type=\"button\"\n                          onClick={() => {\n                            removeStep(stepsItem.id);\n                          }}\n                        >\n                          Remove step\n                        </button>\n                      ) : null}\n                    </li>\n                  )\n              )}\n              <li>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    addStep(chapter);\n                    if (currentScreen !== \"Steps\") {\n                      changeCurrentScreen(\"Steps\");\n                    }\n                  }}\n                >\n                  Add step\n                </button>\n              </li>\n            </ul>\n            <button\n              type=\"button\"\n              onClick={() => {\n                if (currentScreen !== \"Steps\") {\n                  changeCurrentScreen(\"Steps\");\n                }\n                addChapter();\n              }}\n            >\n              Add chapter\n            </button>\n          </li>\n        ))}\n      </ul>\n      {children}\n    </Fragment>\n  );\n};\n\nexport default Sidebar;\n", "import { json, redirect, useActionData, useLoaderData, useParams } from \"remix\";\nimport type { ActionFunction, LoaderFunction } from \"remix\";\nimport { prisma } from \"~/db.server\";\nimport { getActiveLanguage } from \"~/models/language.server\";\nimport Constructor from \"~/modules/Constructor\";\nimport { Language, Lesson, Topic } from \"@prisma/client\";\nimport { createLessons } from \"~/models/lesson.server\";\nimport { checkTitleUnique, getLastAddedTopic } from \"~/models/topic.server\";\nimport { getTodayDate } from \"~/utils\";\n\nexport type ActionData = {\n  errors?: {\n    title?: string;\n  };\n};\n\nexport function ErrorBoundary() {\n  const { lessonId } = useParams();\n  return (\n    <div className=\"error-container\">{`There was an error loading lesson by the id ${lessonId}. Sorry.`}</div>\n  );\n}\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const activeLanguage = (await getActiveLanguage(request)) as Language;\n  const form = await request.formData();\n  const title = form.get(\"title\") as string;\n\n  let lineNumber = form.get(\"lineNumber\") as string;\n  const lastAddedTopic = (await getLastAddedTopic(activeLanguage.id)) as Topic;\n  if (lastAddedTopic) {\n    lineNumber =\n      lineNumber === \"0\"\n        ? (lastAddedTopic?.lineNumber + 1).toString()\n        : lineNumber;\n  }\n\n  const stepChapters = form.getAll(\"chapter\") as string[];\n\n  const isTitleUnique = await checkTitleUnique(activeLanguage.id, title);\n\n  if (isTitleUnique) {\n    return json<ActionData>(\n      {\n        errors: { title: \"Title isn't unique\" },\n      },\n      { status: 400 }\n    );\n  }\n\n  const lessons = form.getAll(\"step\").map((item, index) => {\n    const stepType = form.get(`type${index}`);\n    // const stepChapter = form.get(`chapter${index}`) as string;\n    let answer: string | string[] = form.get(`answer${index}`) as string;\n    // answer = answer.trim().split(\" \");\n    const returnData = {\n      stepType,\n      number: index,\n      chapter: Number(stepChapters[index]),\n      languageId: activeLanguage.id,\n    };\n    switch (stepType) {\n      case \"Question\": {\n        const question = form.get(`question${index}`);\n        const keywords = form.get(`keywords${index}`) as string;\n        answer = answer.trim().split(\" \");\n        return {\n          ...returnData,\n          question,\n          answer,\n          keywords: keywords ? keywords.split(\",\") : [],\n        };\n      }\n      case \"Insert\": {\n        const text = form.get(`text${index}`) as string;\n        const isToChoose = !!form.get(`isToChoose${index}`);\n        const variantValues = form.getAll(`variant${index}`);\n        answer = answer.trim().split(\" \");\n        const variants = variantValues.map((value, idx) => ({\n          idx,\n          value,\n          isFocused: false,\n        }));\n        return {\n          ...returnData,\n          answer,\n          text: text.trim(),\n          isToChoose: variants.length === 0 ? isToChoose : false,\n          variants,\n        };\n      }\n      case \"Variants\": {\n        const question = form.get(`question${index}`);\n        const variants = form.getAll(`variant${index}`);\n        return {\n          ...returnData,\n          answer,\n          question,\n          variants: variants.map((variant, idx) => ({\n            value: variant,\n            idx: idx + 1,\n            isFocused: false,\n          })),\n        };\n      }\n      case \"Pairs\": {\n        const variants = form.getAll(`variant${index}`) as string[];\n        return {\n          ...returnData,\n          answer: answer.split(\",\"),\n          variants: variants.map((variant, idx) => ({\n            value: variant,\n            isFocused: false,\n            isConnected: true,\n            idx: idx + 1,\n          })),\n        };\n      }\n      default: {\n        return { ...returnData, answer };\n      }\n    }\n  }) as Lesson[];\n\n  const createdLessonsIDs = await createLessons(lessons);\n  const data = {\n    title,\n    lessonIDs: createdLessonsIDs,\n    chapters: Number(stepChapters[stepChapters.length - 1]),\n    currentChapter: 0,\n    level: 0,\n    projectId: activeLanguage?.id,\n    // updatedAt: today.getDate().toString(),\n    updatedAt: getTodayDate(),\n    lineNumber: Number(lineNumber),\n  };\n  const topic = await prisma.topic.create({ data });\n  return redirect(`/skill/${topic.title}/1`);\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const activeLanguage = (await getActiveLanguage(request)) as Language;\n  const lastAddedTopics = (await getLastAddedTopic(\n    activeLanguage.id,\n    true\n  )) as Topic[];\n\n  return { lastAddedTopics };\n};\n\nexport default function ConstructorNew() {\n  const actionData = useActionData() as ActionData;\n  const { lastAddedTopics } = useLoaderData();\n\n  return (\n    <Constructor actionData={actionData} lastAddedTopics={lastAddedTopics} />\n  );\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { getActiveLanguage } from \"~/models/language.server\";\nimport {\n  deleteTopicById,\n  deleteLessonsFromTopic,\n  getTopics,\n} from \"~/models/lesson.server\";\nimport WeeklyProgress from \"~/components/WeeklyProgress\";\nimport { getUser } from \"~/session.server\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { Topic, WeeklyActivity } from \"@prisma/client\";\nimport SkillsList from \"~/components/SkillsList\";\n\nexport function ErrorBoundary() {\n  return (\n    <div className=\"error-container\">Issues during loading Topics route</div>\n  );\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const data = await request.formData();\n  const id = data.get(\"lessonId\") as string;\n\n  if (!id) {\n    throw new Error(\"Lesson ID wasnt found\");\n  }\n\n  await deleteLessonsFromTopic(id as string);\n  return await deleteTopicById(id);\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const activeLanguage = await getActiveLanguage(request);\n  const user = await getUser(request);\n\n  if (!activeLanguage) {\n    throw new Error(`We could not find the active language`);\n  }\n\n  const skills = await getTopics(activeLanguage.id);\n  return {\n    skills,\n    activity: user?.weeklyActivity,\n    languageTitle: activeLanguage.title,\n  };\n};\n\nexport default function SkillsPage() {\n  const { skills, activity, languageTitle } = useLoaderData() as {\n    skills: Topic[];\n    activity: WeeklyActivity;\n    languageTitle: string;\n  };\n\n  return (\n    <section style={{ display: \"flex\", width: \"100%\" }}>\n      <SkillsList skills={skills} languageTitle={languageTitle} />\n      <WeeklyProgress activity={activity} />\n    </section>\n  );\n}\n", "import { WeeklyActivity } from \"@prisma/client\";\nimport { getCurrentWeek } from \"~/utils\";\nimport { ExpProgressBlock, ExpProgressTitle } from \"./lib\";\n\nconst DAY_COORDS = [\n  \"0.5\",\n  \"42.166666666666664,0\",\n  \"83.83333333333333,0\",\n  \"125.5,0\",\n  \"167.16666666666666,0\",\n  \"208.83333333333334,0\",\n  \"250.5,0\",\n];\n\nconst EXP_VALUES = [\n  { val: 0, coords: \"0,150.5\" },\n  { val: 0, coords: \"0,113\" },\n  { val: 0, coords: \"0,75.5\" },\n  { val: 0, coords: \"0,38\" },\n  { val: 0, coords: \"0,0.5\" },\n];\n\nconst DOTS_X_COORDS = [\n  \"0.5\",\n  \"41.666\",\n  \"83.333\",\n  \"125\",\n  \"166.666\",\n  \"208.333\",\n  \"250\",\n];\n\nexport default function WeeklyProgress({\n  activity,\n}: {\n  activity: WeeklyActivity;\n}) {\n  const maxActivity = Math.max(...Object.values(activity));\n  EXP_VALUES[1].val = Math.round(maxActivity / 3.5);\n  EXP_VALUES[2].val = Math.round(maxActivity / 2.0);\n  EXP_VALUES[3].val = Math.round(maxActivity / 1.2);\n  EXP_VALUES[4].val = Math.round(maxActivity / 0.9);\n\n  const days = getCurrentWeek();\n  const dotsData = days.map((day, index) => ({\n    x: DOTS_X_COORDS[index],\n    y:\n      maxActivity &&\n      (activity[day as keyof WeeklyActivity] / EXP_VALUES[4].val) * 150,\n    exp: activity[day as keyof WeeklyActivity],\n  }));\n\n  return (\n    <div>\n      <ExpProgressBlock>\n        <ExpProgressTitle>XP Progress</ExpProgressTitle>\n        <svg direction=\"ltr\" height=\"220\" width=\"340\">\n          <g transform=\"translate(45, 35)\">\n            <g></g>\n            <g\n              transform=\"translate(0, 150)\"\n              fill=\"none\"\n              fontSize=\"10\"\n              fontFamily=\"sans-serif\"\n              textAnchor=\"middle\"\n            >\n              {days.map((day, index) => (\n                <g\n                  className=\"tick\"\n                  opacity=\"1\"\n                  transform={`translate(${DAY_COORDS[index]})`}\n                  key={day}\n                >\n                  <text\n                    fill=\"currentColor\"\n                    y=\"16\"\n                    dy=\"0.71em\"\n                    color=\"#cccac9\"\n                    fontFamily=\"din-round, sans-serif\"\n                    fontSize=\"17px\"\n                  >\n                    {day}\n                  </text>\n                </g>\n              ))}\n            </g>\n            <g\n              transform=\"\"\n              fill=\"none\"\n              fontSize=\"10\"\n              fontFamily=\"sans-serif\"\n              textAnchor=\"end\"\n            >\n              <path\n                className=\"GNoB0\"\n                d={`M0,0L250,0L250,150L0,150Z`}\n                fill=\"#ffc800\"\n                fillOpacity=\"0.1\"\n              ></path>\n              <path\n                className=\"GNoB0\"\n                d={`M0,0${dotsData.map(({ x, y }, idx) => {\n                  if (idx === 0) return \"M\" + x + \",\" + y;\n                  return \"L\" + x + \",\" + y;\n                })}L250,150L208.33333333333334,150L166.66666666666666,150L125,150L83.33333333333333,150L41.666666666666664,150L0,150Z`}\n                fill=\"#fff\"\n                fillOpacity=\"1\"\n                style={{ transform: \"scaleY(-1) translateY(-150px)\" }}\n              ></path>\n\n              <path\n                className=\"QZq6Z\"\n                d={`${dotsData.map(({ x, y }, idx) => {\n                  if (idx === 0) return \"M\" + x + \",\" + y;\n                  return \"L\" + x + \",\" + y;\n                })}`}\n                fillOpacity=\"0\"\n                stroke=\"#ffc800\"\n                strokeOpacity=\"0.5\"\n                strokeWidth=\"2\"\n                style={{ transform: \"scaleY(-1) translateY(-150px)\" }}\n              ></path>\n              {EXP_VALUES.map(({ val, coords }) => (\n                <g\n                  className=\"tick\"\n                  opacity=\"1\"\n                  transform={`translate(${coords})`}\n                  key={coords}\n                >\n                  <line\n                    stroke=\"#dedede\"\n                    x2=\"250\"\n                    strokeOpacity=\"0.5\"\n                    strokeWidth=\"2\"\n                  ></line>\n                  <text\n                    fill=\"currentColor\"\n                    x=\"-16\"\n                    dy=\"0.32em\"\n                    color=\"#cccac9\"\n                    fontFamily=\"din-round, sans-serif\"\n                    fontSize=\"17px\"\n                  >\n                    {val}\n                  </text>\n                </g>\n              ))}\n            </g>\n            <g>\n              {dotsData.map(({ x, y, exp }) => (\n                <circle\n                  className=\"_2Hihu\"\n                  cx={x}\n                  cy={y}\n                  fill={exp > 50 ? \"#ffc800\" : \"#fff\"}\n                  r=\"3.75\"\n                  stroke=\"#ffc800\"\n                  strokeWidth=\"2\"\n                  style={{ transform: \"scaleY(-1) translateY(-150px)\" }}\n                  key={x + y}\n                >\n                  <title>{exp} XP</title>\n                </circle>\n              ))}\n            </g>\n          </g>\n        </svg>\n      </ExpProgressBlock>\n    </div>\n  );\n}\n", "import { Topic } from \"@prisma/client\";\nimport { nanoid } from \"nanoid\";\nimport Footer from \"./Footer\";\nimport LessonItem from \"./LessonItem\";\nimport { LessonsBlock, TopicsLineBlock, SkillsListContainer } from \"./lib\";\nimport PracticeLastAdded from \"./PracticeLastAdded\";\n\nexport default function SkillsList({\n  skills,\n  languageTitle,\n}: {\n  skills: Topic[];\n  languageTitle: string;\n}) {\n  const lineNumbers = [\n    ...new Set(skills.map((dataItem) => dataItem.lineNumber)),\n  ];\n\n  return (\n    <SkillsListContainer>\n      <div style={{ display: \"flex\", flexGrow: 1 }}>\n        <div style={{ display: \"flex\", alignItems: \"flex-end\" }}>\n          {skills.length > 0 && <PracticeLastAdded />}\n        </div>\n        <TopicsLineBlock>\n          {lineNumbers.map((lineNumber) => (\n            <LessonsBlock key={nanoid()}>\n              {skills.map((dataItem) => {\n                if (dataItem.lineNumber === lineNumber) {\n                  return (\n                    <LessonItem\n                      key={dataItem.id}\n                      {...dataItem}\n                      editLink={`/${languageTitle}/constructor/${dataItem.id}`}\n                    />\n                  );\n                }\n              })}\n            </LessonsBlock>\n          ))}\n        </TopicsLineBlock>\n      </div>\n      <Footer />\n    </SkillsListContainer>\n  );\n}\n", "import { FooterLine, FooterText } from \"./lib\";\n\nexport default function Footer() {\n  return (\n    <footer>\n      <FooterLine />\n      <div style={{ paddingBottom: 28 }}>\n        <FooterText>\n          Inspired by{\" \"}\n          <a href=\"https://www.duolingo.com\" target=\"_blank\">\n            Duolingo\n          </a>\n        </FooterText>\n      </div>\n    </footer>\n  );\n}\n", "import { useEffect, useRef, useState } from \"react\";\nimport { Form, useTransition } from \"remix\";\nimport {\n  LessonProgress,\n  LessonProgressInner,\n  LessonTitle,\n  LessonBlockMenu,\n  LessonBlockMenuTriangle,\n  LessonBlockMenuTriangleContent,\n  LessonBlockInner,\n  LessonBlockLink,\n  LessonBlockButton,\n  LessonBlock,\n  LessonsContainer,\n} from \"./lib\";\nimport Bin from \"~/styles/bin.svg\";\nimport useOnClickOutside from \"~/hooks/useOnClickOutside\";\nimport { Topic } from \"@prisma/client\";\n\ntype LessonItem = Topic & {\n  editLink: string;\n};\n\nexport default function LessonItem({\n  id,\n  title,\n  currentChapter,\n  chapters,\n  editLink,\n}: LessonItem) {\n  const [isOpened, setIsOpened] = useState(false);\n  const transition = useTransition();\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if (transition.state === \"loading\") {\n      setIsOpened(false);\n    }\n  }, [transition.state]);\n  useOnClickOutside(ref, () => setIsOpened(false));\n\n  const isDisabled = transition.state !== \"idle\";\n  const exp = ((currentChapter / chapters) * 100).toString();\n  const topicLink = `/skill/${title}/${\n    currentChapter / chapters === 1 ? \"practice\" : currentChapter + 1\n  }`;\n\n  function toggleMenu() {\n    setIsOpened(!isOpened);\n  }\n\n  return (\n    <LessonsContainer>\n      <LessonBlock ref={ref}>\n        <button key={id} aria-labelledby={title} onClick={toggleMenu}>\n          <LessonProgress exp={exp}>\n            <LessonProgressInner />\n          </LessonProgress>\n          <LessonTitle>{title}</LessonTitle>\n        </button>\n        <LessonBlockMenu isOpened={isOpened}>\n          <LessonBlockMenuTriangle>\n            <LessonBlockMenuTriangleContent />\n          </LessonBlockMenuTriangle>\n          <LessonBlockInner>\n            <div style={{ display: \"flex\" }}>\n              <LessonBlockLink to={editLink}>Edit</LessonBlockLink>\n              <Form method=\"post\">\n                <input type=\"hidden\" name=\"lessonId\" value={id} />\n                <LessonBlockButton type=\"submit\" disabled={isDisabled}>\n                  <img src={Bin} alt=\"delete\" width={20} height={20} />\n                </LessonBlockButton>\n              </Form>\n            </div>\n            {/* If the topic is 100% done, then we just repeat all lessons from it */}\n            {/* Otherwise we study lessons only from next chapter */}\n            <LessonBlockLink to={topicLink}>Start +16 XP</LessonBlockLink>\n          </LessonBlockInner>\n        </LessonBlockMenu>\n      </LessonBlock>\n    </LessonsContainer>\n  );\n}\n", "import { useEffect } from \"react\";\n\nexport default function useOnClickOutside(ref, handler) {\n  useEffect(\n    () => {\n      const listener = (event) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n        handler(event);\n      };\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}\n", "import Icon from \"~/styles/practice_last_added.svg\";\nimport { PracticeLastAddedContainer, PracticeLastAddedLink } from \"./lib\";\n\nexport default function PracticeLastAdded() {\n  return (\n    <PracticeLastAddedContainer>\n      <PracticeLastAddedLink to=\"/practice\">\n        <img\n          src={Icon}\n          alt=\"Practice last added lessons\"\n          height={32}\n          width={38.7}\n        />\n      </PracticeLastAddedLink>\n    </PracticeLastAddedContainer>\n  );\n}\n", "import { redirect, useLoaderData, useParams } from \"remix\";\nimport type { LoaderFunction, ActionFunction } from \"remix\";\nimport { prisma } from \"~/db.server\";\nimport Lesson from \"~/modules/Lesson\";\nimport { getActiveLanguage } from \"~/models/language.server\";\nimport { getUser } from \"~/session.server\";\nimport { User, WeeklyActivity } from \"@prisma/client\";\nimport { getWeekDay } from \"~/utils\";\n\nexport function ErrorBoundary() {\n  const { lessonId } = useParams();\n  return (\n    <div className=\"error-container\">{`There was an error loading lesson by the id ${lessonId}. Sorry.`}</div>\n  );\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const form = await request.formData();\n  const expData = Number(form.get(\"exp\"));\n  const user = (await getUser(request)) as User;\n  const newUserActivity = user.weeklyActivity as WeeklyActivity;\n  newUserActivity[`${getWeekDay()}`] = newUserActivity[`${getWeekDay()}`] + 10;\n\n  await prisma.user.update({\n    where: {\n      id: user?.id,\n    },\n    data: {\n      weeklyActivity: { ...newUserActivity },\n    },\n  });\n\n  return redirect(`/`);\n};\n\nexport const loader: LoaderFunction = async () => {\n  const lessons = await prisma.lesson.findMany({\n    orderBy: { createdAt: \"desc\" },\n    take: 10,\n  });\n\n  if (!lessons) {\n    throw new Error(\"lesson not found\");\n  }\n\n  return lessons;\n};\n\nexport default function LessonScreen() {\n  const steps = useLoaderData();\n\n  return <Lesson steps={steps} />;\n}\n", "import type { ActionFunction, LoaderFunction } from \"remix\";\nimport { redirect } from \"remix\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "import { Outlet } from \"remix\";\n\nexport default function Repeat() {\n  return <Outlet />;\n}\n", "import { redirect } from \"remix\";\nimport { getUser } from \"~/session.server\";\nimport { getLanguages } from \"~/models/language.server\";\n\nexport const loader = async ({ request }: { request: Request }) => {\n  const user = await getUser(request);\n  if (!user) {\n    return redirect(\"/login\");\n  }\n\n  const languages = await getLanguages(request);\n  const activeLanguageTitle = languages?.find((it) => it.active)?.title;\n\n  return redirect(`/${activeLanguageTitle}/skills`);\n};\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useActionData, useTransition } from \"@remix-run/react\";\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { createUser, verifyLogin } from \"~/models/user.server\";\nimport { LoginContainer, LoginContinerInner } from \"~/components/lib\";\nimport { Login } from \"~/components/Login\";\nimport { useState } from \"react\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\nexport type ActionData = {\n  errors?: {\n    username?: string;\n    password?: string;\n  };\n  fields?: {\n    loginType: string;\n    password: string;\n  };\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const loginType = formData.get(\"loginType\");\n  const username = formData.get(\"username\") as string;\n  const password = formData.get(\"password\") as string;\n  const user = await verifyLogin(username, password);\n\n  if (user) {\n    return createUserSession({\n      request,\n      userId: user.id,\n      redirectTo: \"/\",\n    });\n  }\n\n  if (loginType === \"login\") {\n    return json<ActionData>(\n      {\n        errors: { username: \"Invalid username or password\" },\n        fields: { loginType: \"login\", password: \"\" },\n      },\n      { status: 400 }\n    );\n  }\n\n  const newUser = await createUser(username, password);\n\n  return createUserSession({\n    request,\n    userId: newUser.id,\n    redirectTo: \"/\",\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport default function LoginPage() {\n  const actionData = useActionData() as ActionData;\n  const transition = useTransition();\n\n  const [isLogin, setIsLogin] = useState(\n    actionData && actionData?.fields?.loginType === \"login\"\n      ? true\n      : !actionData\n      ? true\n      : false\n  );\n\n  const buttonText = transition.state === \"submitting\" ? \"loginning\" : \"login\";\n\n  return (\n    <LoginContainer>\n      <LoginContinerInner>\n        <Login\n          isLogin={isLogin}\n          setIsLogin={setIsLogin}\n          actionData={actionData}\n        />\n      </LoginContinerInner>\n    </LoginContainer>\n  );\n}\n", "import { useEffect, useRef } from \"react\";\nimport { Form } from \"remix\";\nimport { ActionData } from \"~/routes/login\";\nimport {\n  LoginTitle,\n  LoginToggle,\n  LoginInput,\n  LoginButton,\n  ErrorMessage,\n} from \"./lib\";\n\ntype LoginProps = {\n  isLogin: boolean;\n  setIsLogin: (isLogin: boolean) => void;\n  actionData: ActionData;\n};\n\nexport function Login({ isLogin, setIsLogin, actionData }: LoginProps) {\n  const usernameRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.username) {\n      usernameRef.current?.focus();\n    }\n    if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <Form method=\"post\" style={{ width: \"100%\", maxWidth: 375 }}>\n      <LoginTitle>{isLogin ? \"Login\" : \"Register\"}</LoginTitle>\n      <LoginToggle htmlFor=\"register\" style={{ zIndex: isLogin ? 1 : -1 }}>\n        <input\n          type=\"radio\"\n          name=\"loginType\"\n          id=\"register\"\n          value=\"register\"\n          onChange={() => setIsLogin(!isLogin)}\n          style={{ visibility: \"hidden\", position: \"absolute\" }}\n          checked={!isLogin}\n        />\n        {isLogin ? \"Register\" : \"Login\"}\n      </LoginToggle>\n      <LoginToggle htmlFor=\"login\" style={{ zIndex: !isLogin ? 1 : -1 }}>\n        <input\n          type=\"radio\"\n          name=\"loginType\"\n          id=\"login\"\n          value=\"login\"\n          onChange={() => setIsLogin(!isLogin)}\n          style={{ visibility: \"hidden\", position: \"absolute\" }}\n          checked={isLogin}\n        />\n        {isLogin ? \"Register\" : \"Login\"}\n      </LoginToggle>\n      <div style={{ marginTop: 8 }}>\n        <LoginInput\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Username\"\n          ref={usernameRef}\n          id=\"username\"\n          autoFocus={true}\n          required\n        />\n\n        <LoginInput\n          name=\"password\"\n          id=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          ref={passwordRef}\n          required\n        />\n\n        {actionData?.errors?.username && (\n          <ErrorMessage role=\"alert\" id=\"username-error\">\n            {actionData.errors.username}\n          </ErrorMessage>\n        )}\n      </div>\n      <LoginButton type=\"submit\">{isLogin ? \"Login\" : \"Register\"}</LoginButton>\n    </Form>\n  );\n}\n", "export default {'version':'4435f591','entry':{'module':'/build/entry.client-7PYIEKWK.js','imports':['/build/_shared/chunk-72CIFQLS.js','/build/_shared/chunk-6BO74FWO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-7VVFJPCW.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/$language':{'id':'routes/$language','parentId':'root','path':':language','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$language-LTZHBHBP.js','imports':['/build/_shared/chunk-DFG4XZEI.js','/build/_shared/chunk-ME5PAYV3.js','/build/_shared/chunk-HGHGZEQA.js','/build/_shared/chunk-6H6WQFFR.js','/build/_shared/chunk-77254MHM.js','/build/_shared/chunk-47Y7UUED.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$language/constructor/$topicId':{'id':'routes/$language/constructor/$topicId','parentId':'routes/$language','path':'constructor/:topicId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$language/constructor/$topicId-OYHT7N2R.js','imports':['/build/_shared/chunk-NWDO63FO.js','/build/_shared/chunk-TEJ7EXYD.js','/build/_shared/chunk-BWI2EZD6.js','/build/_shared/chunk-QPM6IN7H.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/$language/constructor/new':{'id':'routes/$language/constructor/new','parentId':'routes/$language','path':'constructor/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$language/constructor/new-GRSF5YJU.js','imports':['/build/_shared/chunk-NWDO63FO.js','/build/_shared/chunk-TEJ7EXYD.js','/build/_shared/chunk-BWI2EZD6.js','/build/_shared/chunk-QPM6IN7H.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/$language/skills':{'id':'routes/$language/skills','parentId':'routes/$language','path':'skills','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$language/skills-QFPD2KYN.js','imports':['/build/_shared/chunk-QPM6IN7H.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-BD67KWZ4.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-7G7ZNN3W.js','imports':['/build/_shared/chunk-DFG4XZEI.js','/build/_shared/chunk-ME5PAYV3.js','/build/_shared/chunk-47Y7UUED.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-X6KLJBK3.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/practice':{'id':'routes/practice','parentId':'root','path':'practice','index':undefined,'caseSensitive':undefined,'module':'/build/routes/practice-HQWLWF3I.js','imports':['/build/_shared/chunk-JLYYLSDL.js','/build/_shared/chunk-BWI2EZD6.js','/build/_shared/chunk-ME5PAYV3.js','/build/_shared/chunk-77254MHM.js','/build/_shared/chunk-47Y7UUED.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/repeat':{'id':'routes/repeat','parentId':'root','path':'repeat','index':undefined,'caseSensitive':undefined,'module':'/build/routes/repeat-JE4LJW6K.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/skill/$title/$chapter':{'id':'routes/skill/$title/$chapter','parentId':'root','path':'skill/:title/:chapter','index':undefined,'caseSensitive':undefined,'module':'/build/routes/skill/$title/$chapter-K3ANWDK7.js','imports':['/build/_shared/chunk-JLYYLSDL.js','/build/_shared/chunk-DFG4XZEI.js','/build/_shared/chunk-TEJ7EXYD.js','/build/_shared/chunk-BWI2EZD6.js','/build/_shared/chunk-6H6WQFFR.js','/build/_shared/chunk-77254MHM.js','/build/_shared/chunk-47Y7UUED.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/skill/$title/practice':{'id':'routes/skill/$title/practice','parentId':'root','path':'skill/:title/practice','index':undefined,'caseSensitive':undefined,'module':'/build/routes/skill/$title/practice-NOJPX2JH.js','imports':['/build/_shared/chunk-JLYYLSDL.js','/build/_shared/chunk-DFG4XZEI.js','/build/_shared/chunk-TEJ7EXYD.js','/build/_shared/chunk-BWI2EZD6.js','/build/_shared/chunk-6H6WQFFR.js','/build/_shared/chunk-77254MHM.js','/build/_shared/chunk-47Y7UUED.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true}},'url':'/build/manifest-4435F591.js'};"],
  "mappings": "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",
  "names": []
}
