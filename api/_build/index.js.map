{
  "version": 3,
  "sources": ["<stdin>", "../../app/entry.server.tsx", "../../app/root.tsx", "../../app/routes/skill/$title/$chapter.tsx", "../../app/modules/Skill/index.tsx", "../../app/components/lib.tsx", "../../app/modules/Constructor/components/lib.ts", "../../app/components/Progress.tsx", "../../app/modules/Skill/reducer.ts", "../../app/modules/Skill/components/Results.tsx", "../../app/modules/Skill/components/lib.ts", "../../app/hooks/useFocus.ts", "../../app/modules/Skill/components/Footer.tsx", "../../app/utils.ts", "../../app/modules/Skill/components/Lesson.tsx", "../../app/modules/Skill/components/InsertWords/InsertWordsScreen.tsx", "../../app/modules/Constructor/Levels/components/lib.tsx", "../../app/modules/Skill/components/InsertWords/lib.ts", "../../app/modules/Skill/components/InsertWords/Puzzle.tsx", "../../app/modules/Skill/components/InsertWords/Variants.tsx", "../../app/modules/Skill/components/InsertWords/Text.tsx", "../../app/modules/Skill/components/InsertWords/index.tsx", "../../app/modules/Skill/components/PairsScreen.tsx", "../../app/modules/Skill/components/Pairs.tsx", "../../app/modules/Skill/components/QuestionAnswer/QuestionAnswerScreen.tsx", "../../app/modules/Skill/components/QuestionAnswer/index.tsx", "../../app/modules/Constructor/Levels/components/Variants/VariantsScreen.tsx", "../../app/modules/Skill/components/Variants.tsx", "../../app/modules/Skill/components/AreYouSureBlock/lib.tsx", "../../app/modules/Skill/components/AreYouSureBlock/AreYouSureBlock.tsx", "../../app/modules/Skill/components/AreYouSureBlock/index.tsx", "../../app/db.server.ts", "../../app/session.server.ts", "../../app/models/user.server.ts", "../../app/models/language.server.ts", "../../app/models/skill.server.ts", "../../app/models/lesson.server.ts", "../../app/routes/skill/$title/practice.tsx", "../../app/routes/$language.tsx", "../../app/components/Projects.tsx", "../../app/components/Menu.tsx", "../../app/routes/$language/constructor/$skillId.tsx", "../../app/modules/Constructor/index.tsx", "../../app/modules/Constructor/components/SkillInfo.tsx", "../../app/modules/Constructor/Levels/reducer.ts", "../../app/modules/Constructor/Levels/index.tsx", "../../app/modules/Constructor/Levels/components/Variants/index.tsx", "../../app/modules/Constructor/Levels/components/MatchingPairs/reducer.ts", "../../app/modules/Constructor/Levels/components/MatchingPairs/actions.ts", "../../app/modules/Constructor/Levels/components/MatchingPairs/index.tsx", "../../app/modules/Constructor/Levels/components/InsertWords/InsertWords.tsx", "../../app/modules/Constructor/Levels/components/InsertWords/lib.tsx", "../../app/modules/Constructor/Levels/components/InsertWords/Backend.tsx", "../../app/modules/Constructor/Levels/components/InsertWords/ChooseMissingWords.tsx", "../../app/modules/Constructor/Levels/components/InsertWords/index.tsx", "../../app/modules/Constructor/Levels/components/Step.tsx", "../../app/constants.ts", "../../app/modules/Constructor/components/CloseBtn.tsx", "../../app/modules/Constructor/Levels/components/QuestionAnswer/index.tsx", "../../app/modules/Constructor/components/Keywords.tsx", "../../app/modules/Constructor/components/Keyword.tsx", "../../app/modules/Constructor/Levels/components/Sidebar.tsx", "../../app/routes/$language/constructor/new.tsx", "../../app/routes/$language/skills.tsx", "../../app/modules/Common/components/WeeklyProgress/lib.tsx", "../../app/modules/Common/components/WeeklyProgress/WeeklyProgress.tsx", "../../app/components/SkillsList.tsx", "../../app/modules/Common/components/Footer/lib.tsx", "../../app/modules/Common/components/Footer/Footer.tsx", "../../app/modules/Common/components/Footer/index.tsx", "../../app/components/LessonItem.tsx", "../../app/hooks/useOnClickOutside.ts", "../../app/components/PracticeLastAdded.tsx", "../../app/routes/practice.tsx", "../../app/routes/logout.tsx", "../../app/routes/index.tsx", "../../app/routes/login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { RemixServer } from \"@remix-run/react\";\nimport type { EntryContext } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import { Links, LiveReload, Outlet, Scripts } from \"@remix-run/react\";\nimport LogRocket from \"logrocket\";\nLogRocket.init(\"wuhqsy/my-duo\");\n\nfunction Document({\n  children,\n  title = `MyDuo`,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width,initial-scale=1,user-scalable=no\"\n        />\n        <title>{title}</title>\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;500;600;700;800&display=swap\"\n          rel=\"stylesheet\"\n        />\n        <Links />\n      </head>\n      <body style={{ margin: 0 }}>\n        {children}\n        <LiveReload />\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n\nexport default function App() {\n  return (\n    <Document>\n      <Outlet />\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  return (\n    <Document title=\"Uh-oh!\">\n      <div className=\"error-container\">\n        <h1>App Error</h1>\n        <pre>{error.message}</pre>\n      </div>\n    </Document>\n  );\n}\n", "import Skill from \"~/modules/Skill\";\nimport { getActiveLanguage } from \"~/models/language.server\";\nimport { getSkillByTitle, updateCurrentChapter } from \"~/models/skill.server\";\nimport { getTodayTotalXP, increaseTodayExp } from \"~/models/user.server\";\nimport { useLoaderData, useParams, useSubmit } from \"@remix-run/react\";\nimport { ActionArgs, json, LoaderArgs, redirect } from \"@remix-run/node\";\nimport { getStepsForChapter } from \"~/models/lesson.server\";\n\nexport function ErrorBoundary() {\n  const { title, chapter } = useParams();\n  return (\n    <div className=\"error-container\">{`There was an error loading skill with the title ${title} and chapter ${chapter}. Sorry.`}</div>\n  );\n}\n\nexport const action = async ({ request, params }: ActionArgs) => {\n  const activeLanguage = await getActiveLanguage(request);\n\n  if (!activeLanguage) {\n    throw new Error(\"No active language found\");\n  }\n\n  const form = await request.formData();\n  const expData = Number(form.get(\"exp\"));\n  const title = params.title as string;\n\n  const skill = await getSkillByTitle(title, activeLanguage.id);\n\n  if (!skill) {\n    throw new Error(`Skill with this title: ${title} is underfined`);\n  }\n\n  await updateCurrentChapter(skill);\n\n  await increaseTodayExp(request, expData);\n\n  return redirect(`/${activeLanguage.title}/skills`);\n};\n\nexport const loader = async ({ request, params }: LoaderArgs) => {\n  const activeLanguage = await getActiveLanguage(request);\n\n  if (!activeLanguage) {\n    throw new Error(`No active language is found`);\n  }\n\n  const title = params.title as string;\n  const chapter = Number(params.chapter as string);\n\n  const steps = await getStepsForChapter(title, chapter, activeLanguage.id);\n\n  const totalXP = await getTodayTotalXP(request);\n\n  return json({ steps, totalXP });\n};\n\nexport default function LessonScreen() {\n  const { steps, totalXP } = useLoaderData<typeof loader>();\n\n  return <Skill steps={steps} totalXP={totalXP} />;\n}\n", "import { useEffect, useContext, createContext, createRef } from \"react\";\nimport Progress from \"~/components/Progress\";\nimport { useSkillReducer, defaultSkillContextState } from \"./reducer\";\n// import { useSubmit } from \"@remix-run/react\";\nimport { Results } from \"./components/Results\";\nimport Footer from \"./components/Footer\";\nimport { LessonContainer } from \"./components/lib\";\nimport InsertWords from \"./components/InsertWords\";\nimport Pairs from \"./components/Pairs\";\nimport QuestionAnswerPractice from \"./components/QuestionAnswer\";\nimport VariantsPractice from \"./components/Variants\";\nimport { SkillContextType, Step } from \"./types\";\nimport { Overlay } from \"~/components/lib\";\nimport AreYouSureBlock from \"./components/AreYouSureBlock\";\nimport { useSubmit } from \"@remix-run/react\";\n// import Progress from \"./components/Progress\";\n\nexport const SkillContext = createContext<SkillContextType>(\n  defaultSkillContextState\n);\nSkillContext.displayName = \"SkillContext\";\n\nexport function useSkill() {\n  const context = useContext(SkillContext);\n  if (context === undefined) {\n    throw new Error(\"useSkill must be used within a <Lesson />\");\n  }\n  return context;\n}\n\nexport default function Skill({\n  steps,\n  totalXP,\n}: {\n  steps: Step[];\n  totalXP: number;\n}) {\n  const resultsFormRef = createRef<HTMLFormElement>();\n\n  const value = useSkillReducer();\n  const submit = useSubmit();\n\n  const { setup, skillState, continueSkill, resetStatus } = value;\n  const { status } = skillState;\n\n  useEffect(() => {\n    setup(steps, totalXP); // Once the data is loaded, we set the it in reducer\n  }, []);\n\n  const onContinue = () => {\n    if (status === \"results\") {\n      return submit(resultsFormRef.current, { replace: true });\n    }\n    return continueSkill();\n  };\n\n  return (\n    <SkillContext.Provider value={{ ...value, continueSkill: onContinue }}>\n      <LessonContainer>\n        {status === \"results\" ? (\n          <>\n            <Results onSubmit={onContinue} ref={resultsFormRef} />\n            <Footer />\n          </>\n        ) : (\n          <>\n            <Progress />\n            <QuestionAnswerPractice />\n            <InsertWords />\n            <VariantsPractice />\n            <Pairs />\n            {status === \"leaving\" ? (\n              <>\n                <Overlay\n                  active={true}\n                  onClick={resetStatus}\n                  style={{ top: 0, zIndex: 5, pointerEvents: \"auto\" }}\n                />\n                <AreYouSureBlock />\n              </>\n            ) : null}\n          </>\n        )}\n      </LessonContainer>\n    </SkillContext.Provider>\n  );\n}\n", "import { keyframes } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { NavLink, Link } from \"@remix-run/react\";\n\ntype FormButtonProps = {\n  active?: boolean;\n};\n\ntype ProgressProps = {\n  progress: number;\n};\n\ntype KeywordProps = {\n  active: boolean;\n};\n\ntype OverlayProps = {\n  active: boolean;\n};\n\ntype LessonProgressProps = {\n  exp: number;\n};\n\ntype LessonBlockMenuProps = {\n  isOpened: boolean;\n};\n\nconst HorizontalList = styled.ul((props) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  margin: 0,\n  height: \"100%\",\n  padding: \"0 9px\",\n}));\n\nconst ListItem = styled(\"li\")`\n  height: 100%;\n  margin: 0 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n`;\n\nconst LessonsContainer = styled(\"section\")`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  position: relative;\n`;\n\nconst LessonsBlock = styled(\"div\")`\n  grid-column-gap: 12px;\n  display: grid;\n  grid-auto-columns: calc(33.33333% - 8px);\n  grid-auto-flow: column;\n  justify-content: center;\n  padding: 16px 12px;\n`;\n\nconst LessonBlock = styled(\"div\")`\n  width: 33%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst MenuAppear = keyframes`\n  from {\n    opacity: 0;\n    transform: translate(-50%, -40px);\n  }\n\n  to {\n    opacity: 1;\n    transform: translateX(-50%, 0);\n  }\n`;\n\nconst LessonBlockMenu = styled(\"div\")<LessonBlockMenuProps>`\n  display: ${(props) => (props.isOpened ? \"block\" : \"none\")};\n  position: absolute;\n  left: 50%;\n  top: calc(100% + 20px);\n  transform: translate(-50%);\n  z-index: 1;\n  animation-name: ${MenuAppear};\n  animation-duration: 0.2s;\n  animation-timing-function: ease-in-out;\n`;\n\nconst LessonBlockMenuTriangle = styled(\"div\")`\n  left: calc(50% - 15px);\n  transform: translateX(-50%);\n  margin: 0 15px;\n  top: -8px;\n  height: 10px;\n  overflow: hidden;\n  width: 20px;\n  box-sizing: border-box;\n  position: absolute;\n`;\n\nconst LessonBlockMenuTriangleContent = styled(\"span\")`\n  background-color: #ce82ff;\n  border: 0;\n  position: absolute;\n  content: \"\";\n  border-radius: 2px;\n  height: 14.14427px;\n  left: 50%;\n  transform: rotate(45deg);\n  transform-origin: top left;\n  width: 14.14427px;\n`;\n\nconst LessonBlockInner = styled(\"div\")`\n  background-color: #ce82ff;\n  color: #fff;\n  padding: 16px;\n  text-align: center;\n  width: 295px;\n  box-sizing: border-box;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LessonBlockLink = styled(Link)`\n  color: #ce82ff;\n  background-color: #fff;\n  flex-grow: 1;\n  text-transform: uppercase;\n  margin-top: 12px;\n  border-width: 0 0 4px;\n  padding: 13px 16px;\n  font-size: 15px;\n  line-height: 20px;\n  border-color: inherit;\n  border-radius: 18px;\n  text-decoration: none;\n  font-family: \"Nunito\";\n  font-weight: 700;\n  letter-spacing: 0.8px;\n  &:hover {\n    filter: brightness(1.1);\n  }\n`;\n\nconst LessonBlockButton = styled(\"button\")`\n  color: #ce82ff;\n  background-color: #fff;\n  flex-grow: 1;\n  text-transform: uppercase;\n  margin-top: 12px;\n  margin-left: 10px;\n  border-width: 0 0 4px;\n  padding: 13px 16px;\n  font-size: 15px;\n  line-height: 20px;\n  border-color: inherit;\n  border-radius: 18px;\n  text-decoration: none;\n  font-family: \"Nunito\";\n  font-weight: 700;\n  letter-spacing: 0.8px;\n  &:hover img {\n    filter: brightness(1.1);\n  }\n`;\n\nconst LessonBlockTitle = styled(\"div\")`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  margin: 0 26px;\n  padding-bottom: 20px;\n  text-align: center;\n  width: 100%;\n  & span {\n    height: 2px;\n    background-color: #e5e5e5;\n    flex-grow: 1;\n  }\n  & h2 {\n    font-size: 24px;\n    font-weight: 700;\n    font-family: \"Nunito\";\n    color: #4b4b4b;\n    flex-grow: 0.3;\n  }\n`;\n\nconst LessonBlockItem = styled.a(() => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  width: \"33.33%\",\n  textDecoration: \"none\",\n}));\n\nconst UserImage = styled.img(\n  {\n    borderRadius: \"100%\",\n  },\n  (props) => ({ width: props.width, height: props.height })\n);\n\nconst ProgressBarContainer = styled(\"div\")`\n  width: 100%;\n  max-width: 1080px;\n  margin: 0 auto;\n  padding: 50px 40px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nconst ProgressBar = styled(\"div\")<ProgressProps>`\n  width: 100%;\n  height: 16px;\n  position: relative;\n  background-color: #e5e5e5;\n  position: relative;\n  border-radius: 7px;\n  &:before,\n  &:after {\n    content: \"\";\n    display: block;\n    width: ${(props) => props.progress * 100}%;\n    height: 16px;\n    background-color: #58cc02;\n    position: absolute;\n    top: 0;\n    left: 0;\n    border-radius: 7px;\n    transition: width 0.2s ease;\n  }\n  &:after {\n    height: 30%;\n    top: 25%;\n    left: 8px;\n    right: 8px;\n    width: calc(${(props) => props.progress * 100}% - 16px);\n    background: white;\n    opacity: 0.2;\n  }\n`;\n\nconst LeaveLessonButton = styled(\"button\")`\n  margin-right: 21px;\n  height: 16px;\n  margin-top: -3px;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  background: inherit;\n`;\nconst LeaveLessonLink = styled(Link)`\n  margin-right: 21px;\n  height: 16px;\n  margin-top: -3px;\n`;\n\nconst Input = styled(\"input\")`\n  background-color: #f7f7f7;\n  border: 1px solid #e5e5e5;\n  border-radius: 10px;\n  padding: 10px 12px;\n  width: 100%;\n`;\n\nconst Textarea = styled(\"textarea\")`\n  background-color: rgb(247, 247, 247);\n  border: 2px solid rgb(229, 229, 229);\n  border-radius: 10px;\n  padding: 10px 12px;\n  min-height: 170px;\n  width: 100%;\n  -webkit-appearance: none;\n  resize: none;\n  flex-grow: 1;\n  box-sizing: border-box;\n  position: relative;\n  z-index: 1;\n\n  line-height: 24px;\n  color: #3c3c3c;\n  font-size: 19px;\n  font-family: \"Nunito\";\n  font-weight: 400;\n  letter-spacing: 1px;\n`;\n\nconst LoginTitle = styled(\"h1\")`\n  font-size: 26px;\n  margin: 10px 0 15px;\n  font-family: Nunito;\n  font-weight: 700;\n  text-align: center;\n`;\n\nconst Fieldset = styled(\"fieldset\")`\n  margin-top: 20px;\n`;\n\nconst InputTextLabel = styled(\"label\")`\n  width: 49%;\n  margin-right: 1%;\n`;\n\nconst TextareaLabel = styled(\"label\")`\n  width: 100%;\n`;\n\nconst LabelText = styled(\"span\")`\n  margin-bottom: 10px;\n  display: block;\n  cursor: pointer;\n  color: #4b4b4b;\n  font-size: 15px;\n  font-family: \"Nunito\", sans-serif;\n  font-weight: 700;\n  letter-spacing: 0.6px;\n`;\n\nconst Legend = styled(\"legend\")`\n  color: #4b4b4b;\n  font-size: 34px;\n  font-weight: 700;\n  line-height: 1.6;\n  margin-bottom: 14px;\n  margin-top: 0;\n  text-align: center;\n  font-family: \"Nunito\", sans-serif;\n`;\n\nconst FormButton = styled(\"button\")<FormButtonProps>`\n  background-color: ${(props) =>\n    props.active ? \"#78C83D\" : props.disabled ? \"#E5E5E5\" : \"#fff\"};\n  color: ${(props) =>\n    props.active ? \"#fff\" : props.disabled ? \"#AFAFAF\" : \"#1cb0f6\"};\n  border: ${(props) => (props.active ? \"none\" : \"2px solid #e5e5e5\")};\n  height: 50px;\n  box-shadow: ${(props) =>\n    props.active ? \"0px -4px 0px 0px rgba(108, 164, 48, 1) inset\" : \"none\"};\n  cursor: ${(props) => (props.disabled ? \"default\" : \"pointer\")};\n  width: 150px;\n  text-transform: uppercase;\n  font-family: \"Nunito\";\n  font-size: 15px;\n  font-weight: 800;\n  letter-spacing: 0.8px;\n  border-radius: 15px;\n  padding: 0 20px;\n  display: ${(props) => (props.hidden ? \"none\" : \"block\")};\n  transition: filter 0.2s;\n  &:hover:enabled {\n    filter: brightness(1.1);\n  }\n  &:active:enabled {\n    filter: brightness(1.1);\n    height: 46px;\n    transform: translateY(4px);\n  }\n`;\n\nconst KeywordTemplate = styled(\"span\")<KeywordProps>`\n  margin-right: 10px;\n  cursor: pointer;\n  border: ${(props) => props.active && \"1px solid blue\"};\n`;\n\nconst LessonProgress = styled(\"div\")<LessonProgressProps>`\n  animation: growProgressBar 3s 1 forwards;\n  width: 106px;\n  height: 106px;\n  border-radius: 50%;\n  display: grid;\n  place-items: center;\n  background: radial-gradient(\n      closest-side,\n      white 85%,\n      transparent 0 99.9%,\n      white 0\n    ),\n    conic-gradient(#ffd900 calc(${(props) => props.exp} * 1%), #e5e5e5 0);\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 18px;\n  font-weight: 700;\n  font-family: \"Nunito\";\n  color: #1cb0f6;\n  position: relative;\n`;\n\nconst LessonProgressInner = styled(\"div\")`\n  border-radius: 50%;\n  height: 68%;\n  left: 50%;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 68%;\n  background: #ce82ff;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:hover {\n    opacity: 0.85;\n  }\n`;\n\nconst Main = styled(\"main\")`\n  padding: 24px 10% 0;\n  display: flex;\n  justify-content: space-between;\n  overflow-x: hidden;\n`;\n\nconst LessonTitle = styled(\"b\")`\n  font-size: 17px;\n  font-weight: 700;\n  color: #3c3c3c;\n  text-align: center;\n  margin-top: 8px;\n  display: block;\n`;\n\nconst NavIcon = styled(\"img\")`\n  margin-right: 10px;\n  width: 36px;\n  height: 36px;\n`;\n\nconst LoginContainer = styled(\"section\")`\n  padding: 30px;\n  height: 100vh;\n  left: 0;\n  overflow-y: auto;\n  top: 0;\n  width: 100vw;\n  box-sizing: border-box;\n`;\n\nconst LoginContinerInner = styled(`div`)`\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  position: relative;\n  width: 100%;\n`;\n\nconst LoginInput = styled(\"input\")`\n  background: transparent;\n  flex-grow: 1;\n  line-height: 27px;\n  width: 100%;\n  box-sizing: border-box;\n  font-family: \"Nunito\", sans-serif;\n  font-size: 100%;\n  background: #f7f7f7;\n  border: 2px solid #e5e5e5;\n  border-radius: 16px;\n  padding: 8px 16px;\n  display: inline-flex;\n  margin-top: 8px;\n`;\n\nconst LoginButton = styled(\"button\")`\n  width: 100%;\n  letter-spacing: 0.8px;\n  font: 700 15px \"Nunito\";\n  padding: 0 16px;\n  height: 50px;\n  color: white;\n  border: none;\n  border-bottom: 4px solid rgba(133, 133, 133, 0.5);\n  border-radius: 16px;\n  cursor: pointer;\n  text-transform: uppercase;\n  background-color: #1cb0f6;\n  transition: filter 0.2s;\n  &:hover {\n    filter: brightness(1.1);\n  }\n  &:active {\n    margin-top: 4px;\n    border: none;\n    height: 46px;\n  }\n`;\n\nconst LoginToggle = styled(\"label\")`\n  position: absolute;\n  top: 0;\n  right: 0;\n  letter-spacing: 0.8px;\n  font: 700 15px \"Nunito\";\n  line-height: 1.2;\n  padding: 0 16px;\n  height: 50px;\n  color: #1cb0f6;\n  border: 2px solid #e5e5e5;\n  border-bottom: 4px solid #e5e5e5;\n  border-radius: 16px;\n  cursor: pointer;\n  text-transform: uppercase;\n  background-color: white;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  transition: filter 0.2s;\n  &:hover {\n    filter: brightness(0.9);\n  }\n  &:active {\n    border-bottom-width: 2px;\n  }\n`;\n\nconst MenuContainer = styled(\"div\")`\n  height: 71px;\n  width: 100vw;\n  border-top: 1px solid #dadcde;\n  border-bottom: 2px solid #dadcde;\n  padding: 0 10%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst MenuNavLink = styled(NavLink)`\n  text-decoration: none;\n  text-transform: uppercase;\n  font-family: \"Nunito\";\n  font-weight: 800;\n  font-size: 15px;\n  color: #afafaf;\n  letter-spacing: 0.8px;\n  display: flex;\n  align-items: center;\n  transition: filter 0.2s ease;\n  &:hover {\n    filter: brightness(0.7) contrast(2.5);\n  }\n  &.active:hover {\n    filter: none;\n  }\n`;\n\nconst ActiveLanguageButton = styled(\"button\")`\n  color: #3c3c3c;\n  border: none;\n  background-color: inherit;\n  font-family: \"Nunito\";\n  font-weight: 800;\n  letter-spacing: 0.8px;\n  cursor: pointer;\n`;\n\nconst ActiveLanguageContainer = styled(\"div\")`\n  position: absolute;\n  top: 40px;\n  right: -30px;\n  width: 200px;\n  padding: 20px 0;\n  z-index: 9;\n`;\n\nconst LanguagesContainer = styled(\"div\")`\n  border: 2px solid #dadcde;\n  border-radius: 15px;\n  background-color: white;\n`;\n\nconst LanguagesList = styled(\"ul\")`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LanguagesItem = styled(\"button\")`\n  border: none;\n  border-bottom: 2px solid #dadcde;\n  width: 100%;\n  cursor: pointer;\n  padding: 16px 20px;\n  background-color: inherit;\n  color: #3c3c3c;\n  font-family: \"Nunito\";\n  font-weight: 700;\n  letter-spacing: 0.8px;\n  text-align: left;\n  transition: background-color 0.2s ease;\n  &:hover {\n    background-color: rgba(175, 175, 175, 0.15);\n  }\n`;\n\nconst LanguagesInput = styled(\"input\")`\n  border: none;\n  border-bottom: 2px solid #dadcde;\n  border-radius: 0 0 10px 10px;\n  width: 100%;\n  cursor: pointer;\n  padding: 20px 30px 20px 20px;\n  background-color: inherit;\n  color: #3c3c3c;\n  font-family: \"Nunito\";\n  font-weight: 700;\n  letter-spacing: 0.8px;\n  text-align: left;\n`;\n\nconst LanguagesAddBtn = styled(\"button\")`\n  position: absolute;\n  font-size: 30px;\n  top: 7px;\n  right: 15px;\n  color: #afafaf;\n`;\n\nconst Overlay = styled(\"div\")<OverlayProps>`\n  background: rgba(28, 97, 130, 0.1);\n  bottom: 0;\n  left: 0;\n  opacity: ${(props) => (props.active ? 1 : 0)};\n  pointer-events: none;\n  position: fixed;\n  right: 0;\n  top: 71px;\n  transition: opacity 0.3s;\n`;\n\nconst Logout = styled(\"button\")`\n  border: none;\n  cursor: pointer;\n  background-color: inherit;\n  color: #afafaf;\n  font-family: \"Nunito\";\n  font-weight: 700;\n  letter-spacing: 0.8px;\n  padding: 0;\n  transition: filter 0.2s ease;\n  &:hover {\n    filter: brightness(0.7) contrast(2.5);\n  }\n`;\n\nconst PracticeLastAddedContainer = styled(\"div\")`\n  height: 72px;\n  width: 72px;\n  border-radius: 50%;\n  border: solid #e5e5e5;\n  border-width: 2px 2px 4px;\n  position: sticky;\n  margin-bottom: 54px;\n  bottom: 24px;\n  background-color: #fff;\n  &:hover {\n    filter: brightness(0.9);\n  }\n`;\n\nconst PracticeLastAddedLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  filter: inherit;\n`;\n\nconst ErrorMessage = styled(\"p\")`\n  line-height: 20px;\n  font-family: \"Nunito\", sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n  letter-spacing: 0.3px;\n  color: #ea2b2b;\n`;\n\nconst SkillsListContainer = styled(\"section\")`\n  width: 65%;\n  padding: 0 30px;\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 95px);\n`;\n\nconst SkillsLineBlock = styled(\"div\")`\n  width: 100%;\n  max-width: 440px;\n  margin: 0 auto 38px auto;\n`;\n\nexport {\n  ProgressBarContainer,\n  ProgressBar,\n  LeaveLessonButton,\n  LeaveLessonLink,\n  HorizontalList,\n  ListItem,\n  NavLink,\n  LessonsBlock,\n  LessonBlock,\n  LessonsContainer,\n  LessonBlockLink,\n  LessonBlockButton,\n  LessonBlockInner,\n  LessonBlockTitle,\n  LessonBlockItem,\n  UserImage,\n  Input,\n  Textarea,\n  Fieldset,\n  InputTextLabel,\n  TextareaLabel,\n  LabelText,\n  Legend,\n  FormButton,\n  KeywordTemplate,\n  LessonProgress,\n  LessonProgressInner,\n  Main,\n  LessonTitle,\n  NavIcon,\n  LoginContainer,\n  LoginContinerInner,\n  LoginButton,\n  LoginInput,\n  LoginToggle,\n  MenuContainer,\n  MenuNavLink,\n  Logout,\n  Overlay,\n  ActiveLanguageButton,\n  ActiveLanguageContainer,\n  LanguagesContainer,\n  LanguagesList,\n  LanguagesItem,\n  LanguagesInput,\n  LanguagesAddBtn,\n  LessonBlockMenu,\n  LessonBlockMenuTriangle,\n  LessonBlockMenuTriangleContent,\n  LoginTitle,\n  PracticeLastAddedContainer,\n  PracticeLastAddedLink,\n  ErrorMessage,\n  SkillsListContainer,\n  SkillsLineBlock,\n};\n", "import styled from \"@emotion/styled\";\nimport { Form } from \"@remix-run/react\";\n\ntype ScreenContainerProps = {\n  screen: string;\n  target: string;\n};\n\nconst ConstructorForm = styled(Form)`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  height: calc(100vh - 95px);\n`;\n\nconst ConstructorFormInner = styled(\"section\")`\n  max-width: 70%;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  position: relative;\n  padding-left: 30px;\n`;\n\nconst LessonTitleInput = styled(\"input\")`\n  width: fit-content;\n  margin: 0 auto;\n  text-align: center;\n  border: none;\n  font-size: 17px;\n  font-weight: 700;\n  color: #3c3c3c;\n  text-align: center;\n  margin-top: 8px;\n`;\n\nconst ConstructorMenu = styled(\"div\")`\n  background: #fff;\n  border: 2px solid #e5e5e5;\n  border-radius: 16px;\n  display: block;\n  margin: 0 24px 24px;\n  padding: 24px;\n  width: 380px;\n`;\n\nconst ScreenContainer = styled(\"section\")<ScreenContainerProps>`\n  position: absolute;\n  top: 0;\n  width: calc(100% - 60px);\n  text-align: center;\n  visibility: ${(props) =>\n    props.screen !== props.target ? \"hidden\" : \"visible\"};\n`;\n\nconst ConstructorSidebar = styled(\"section\")`\n  max-width: 25%;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 71px;\n  position: relative;\n  background-color: #fff;\n  // border: 2px solid #e5e5e5;\n  border-radius: 16px;\n  margin: 0 24px 24px;\n  padding: 24px;\n`;\n\nconst BtnClose = styled(\"button\")`\n  position: absolute;\n  cursor: pointer;\n  width: 16px;\n  height: 16px;\n  border: none;\n  background-color: inherit;\n  padding: 0;\n  left: 30px;\n  bottom: -60px;\n`;\n\nconst BtnCloseImage = styled(\"img\")`\n  width: 16px;\n  height: 16px;\n  vertical-align: initial;\n  transition: filter 0.2s ease;\n  opacity: 0.3;\n  &:hover {\n    filter: brightness(0.7) contrast(2.5);\n  }\n`;\n\nconst VariantsList = styled(\"ul\")`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst VariantsItem = styled(\"li\")`\n  min-width: 240px;\n`;\n\nconst PairsList = styled(\"ul\")`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nexport {\n  LessonTitleInput,\n  ConstructorMenu,\n  ScreenContainer,\n  ConstructorSidebar,\n  ConstructorForm,\n  ConstructorFormInner,\n  BtnClose,\n  BtnCloseImage,\n  PairsList,\n  VariantsList,\n  VariantsItem,\n};\n", "import CloseIcon from \"~/styles/close.svg\";\nimport {\n  ProgressBar,\n  ProgressBarContainer,\n  LeaveLessonButton,\n  LeaveLessonLink,\n} from \"~/components/lib\";\nimport { useSkill } from \"~/modules/Skill\";\nimport { BtnCloseImage } from \"~/modules/Constructor/components/lib\";\n\nconst Progress = () => {\n  const { progress, leave } = useSkill();\n  return (\n    <ProgressBarContainer>\n      {progress === 0 ? (\n        <LeaveLessonLink to=\"/\">\n          <BtnCloseImage src={CloseIcon} alt=\"Close the skill\" />\n        </LeaveLessonLink>\n      ) : (\n        <LeaveLessonButton onClick={() => leave()}>\n          <BtnCloseImage src={CloseIcon} alt=\"Close the skill\" />\n        </LeaveLessonButton>\n      )}\n\n      <ProgressBar progress={progress} />\n    </ProgressBarContainer>\n  );\n};\n\nexport default Progress;\n", "import { useReducer } from \"react\";\nimport { SkillState, Step } from \"./types\";\n\n// The function returns next stepNumber if there is any\nconst continueContent = (content: Step, lessonSteps: Step[]) => {\n  const newContent = lessonSteps.shift();\n  if (!newContent) {\n    return content;\n  }\n\n  if (newContent.stepType !== \"Pairs\") {\n    newContent.difficulty = null;\n  }\n\n  if (newContent?.variants.length || newContent?.isToChoose) {\n    newContent.difficulty = \"easy\";\n  }\n\n  if (content?.difficulty) {\n    newContent.difficulty = content.difficulty;\n  }\n\n  return newContent;\n};\n\nenum actionTypes {\n  continue = \"CONTINUE\",\n  setup = \"SETUP\",\n  results = \"RESULTS\",\n  setStateRight = \"SET_STATE_RIGHT\",\n  setStateWrong = \"SET_STATE_WRONG\",\n  setCheckDisabled = \"SET_CHECK_DISABLED\",\n  updateState = \"UPDATE_STATE\",\n  setDifficulty = \"SET_DIFFICULTY\",\n  leave = \"LEAVE\",\n  resetStatus = \"RESET_STATUS\",\n}\n\ntype Action =\n  | { type: actionTypes.setup; steps: Step[]; totalXP: number }\n  | { type: actionTypes.continue }\n  | { type: actionTypes.results }\n  | { type: actionTypes.setCheckDisabled; disabled: boolean }\n  | { type: actionTypes.setStateRight }\n  | { type: actionTypes.setStateWrong }\n  | { type: actionTypes.setDifficulty; difficulty: \"easy\" | \"hard\" | null }\n  | { type: actionTypes.updateState; update: {} }\n  | { type: actionTypes.leave }\n  | { type: actionTypes.resetStatus };\n\nexport const basicState: SkillState = {\n  progress: 0,\n  stepNumber: 0,\n  content: {\n    id: \"\",\n    number: 0,\n    answer: [\"\"],\n    stepType: \"\",\n    question: \"\",\n    text: \"\",\n    keywords: [\"\"],\n    definition: \"\",\n    variants: [],\n    isToChoose: false,\n    chapter: 1,\n    languageId: \"\",\n    difficulty: \"easy\",\n  },\n  lessonSteps: [], // Array of all steps\n  maxSteps: 0, // Max steps\n  skillState: { status: \"idle\", formDisabled: false, buttonDisabled: true },\n  totalXP: 0,\n};\n\nfunction skillReducer(state: SkillState, action: Action): SkillState {\n  const { content, stepNumber, maxSteps, lessonSteps, skillState } = state;\n  const positiveState = {\n    ...state,\n    progress: stepNumber / maxSteps,\n    skillState: {\n      status: \"right\",\n      formDisabled: true,\n      buttonDisabled: false,\n    },\n  };\n  const negativeState = {\n    ...state,\n    lessonSteps: [...lessonSteps, content],\n    stepNumber: stepNumber - 1,\n    skillState: {\n      status: \"wrong\",\n      formDisabled: true,\n      buttonDisabled: false,\n    },\n  };\n  switch (action.type) {\n    case actionTypes.continue:\n      const isResults = stepNumber === maxSteps;\n      return {\n        ...state,\n        stepNumber: stepNumber + 1,\n        content: continueContent(content, lessonSteps),\n        skillState: {\n          ...skillState,\n          status: isResults ? \"results\" : \"idle\",\n          formDisabled: false,\n          buttonDisabled: isResults ? false : true,\n        },\n      };\n    case actionTypes.setup: // Initial action to set data right after loading component\n      const { steps, totalXP } = action;\n      return {\n        ...basicState,\n        stepNumber: 1,\n        lessonSteps: steps,\n        maxSteps: steps.length,\n        content: continueContent(basicState.content, steps) as Step,\n        totalXP,\n      };\n    case actionTypes.results:\n      return {\n        ...state,\n        stepNumber: stepNumber + 1,\n        skillState: { ...skillState, status: \"results\" },\n      };\n    case actionTypes.setStateRight:\n      return positiveState;\n    case actionTypes.setStateWrong:\n      return negativeState;\n    case actionTypes.setCheckDisabled:\n      const { disabled } = action;\n      return {\n        ...state,\n        skillState: { ...skillState, buttonDisabled: disabled },\n      };\n    case actionTypes.updateState:\n      const { update } = action;\n      return { ...state, ...update };\n    case actionTypes.setDifficulty:\n      const { difficulty } = action;\n      return { ...state, content: { ...state.content, difficulty } };\n    case actionTypes.leave:\n      return { ...state, skillState: { ...skillState, status: \"leaving\" } };\n    case actionTypes.resetStatus:\n      return { ...state, skillState: { ...skillState, status: \"idle\" } };\n    default: {\n      throw new Error(`Unsupported action: ${action}`);\n    }\n  }\n}\n\nfunction useSkillReducer({\n  initialState = basicState,\n  reducer = skillReducer,\n} = {}) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { content, progress, skillState, stepNumber, maxSteps, totalXP } =\n    state;\n\n  const continueSkill = () => dispatch({ type: actionTypes.continue });\n  const setup = (steps: Step[], totalXP: number) =>\n    dispatch({ type: actionTypes.setup, steps, totalXP });\n  const showResults = () => dispatch({ type: actionTypes.results });\n  const setStateRight = () => dispatch({ type: actionTypes.setStateRight });\n  const setStateWrong = () => dispatch({ type: actionTypes.setStateWrong });\n  const setCheckDisabled = (disabled: boolean) =>\n    dispatch({ type: actionTypes.setCheckDisabled, disabled });\n  const updateState = (update: {}) =>\n    dispatch({ type: actionTypes.updateState, update });\n  const setDifficulty = (difficulty: \"easy\" | \"hard\" | null) =>\n    dispatch({ type: actionTypes.setDifficulty, difficulty });\n  const leave = () => dispatch({ type: actionTypes.leave });\n  const resetStatus = () => dispatch({ type: actionTypes.resetStatus });\n\n  return {\n    content,\n    progress,\n    skillState,\n    stepNumber,\n    maxSteps,\n    totalXP,\n    continueSkill,\n    setup,\n    showResults,\n    setStateRight,\n    setStateWrong,\n    setCheckDisabled,\n    updateState,\n    setDifficulty,\n    leave,\n    resetStatus,\n  };\n}\n\nconst defaultSkillContextState = {\n  ...basicState,\n  setup: () => {},\n  continueSkill: () => {},\n  showResults: () => {},\n  setStateRight: () => {},\n  setStateWrong: () => {},\n  setCheckDisabled: () => {},\n  updateState: () => {},\n  setDifficulty: () => {},\n  leave: () => {},\n  resetStatus: () => {},\n};\n\nexport { useSkillReducer, skillReducer, defaultSkillContextState };\n", "import React, { ReactNode } from \"react\";\nimport {\n  ResultsBlock,\n  ResultsContainer,\n  ResultsDescription,\n  ResultsHiddenForm,\n  ResultsTitle,\n} from \"./lib\";\nimport ResultsImg from \"~/styles/results.png\";\nimport { useSkill } from \"..\";\nimport { useFocus } from \"~/hooks/useFocus\";\n\ntype Props = {\n  children?: ReactNode;\n  onSubmit: () => void;\n};\n\nexport type Ref = HTMLFormElement;\n\nexport const Results = React.forwardRef<Ref, Props>((props, ref) => {\n  const { totalXP } = useSkill();\n\n  const containerRef = useFocus<HTMLDivElement>();\n\n  return (\n    <ResultsContainer\n      ref={containerRef}\n      onKeyDown={(e) => {\n        if (e.key === \"Enter\") {\n          props.onSubmit();\n        }\n      }}\n      tabIndex={0}\n    >\n      <ResultsHiddenForm method=\"post\" ref={ref}>\n        <input type=\"text\" name=\"exp\" value=\"16\" readOnly />\n      </ResultsHiddenForm>\n\n      <ResultsBlock>\n        {/* <ResultsTitle>Right answers and mistakes</ResultsTitle> */}\n        <img src={ResultsImg} width=\"140\" alt=\"Results picture\" />\n        <ResultsTitle>You've earned {totalXP + 10} XP today</ResultsTitle>\n        <span>\n          <ResultsDescription>Practice Complete!</ResultsDescription>\n          <ResultsDescription\n            style={{ color: \"#ffc800\", fontWeight: \"700\", marginLeft: \"10px\" }}\n          >\n            +10 XP\n          </ResultsDescription>\n        </span>\n      </ResultsBlock>\n    </ResultsContainer>\n  );\n});\n", "/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { keyframes } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { Form } from \"@remix-run/react\";\nimport RightIcon from \"~/styles/right.svg\";\nimport WrongIcon from \"~/styles/wrong.svg\";\n\ntype LessonFooterProps = {\n  stateRight?: boolean;\n  stateWrong?: boolean;\n  status: string;\n};\ntype LessonButtonProps = {\n  active?: boolean;\n  stateWrong?: boolean;\n  stateRight?: boolean;\n  skip?: boolean;\n  hidden?: boolean;\n};\ntype VariantItemProps = {\n  isFocused: boolean;\n  isDisabled?: boolean;\n};\n\nconst LessonContainer = styled(\"section\")`\n  position: relative;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LessonFooter = styled(\"section\")<LessonFooterProps>`\n  padding: 0 40px;\n  width: 100%;\n  height: 140px;\n  border-top: 2px solid #e5e5e5;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-sizing: border-box;\n  background-color: ${({ status }) =>\n    status === \"right\" ? \"#d7ffb8\" : status === \"wrong\" ? \"#ffdfe0\" : \"#fff\"};\n  color: ${({ status }) =>\n    status === \"right\" ? \"#58a700\" : status === \"wrong\" ? \"#ea2b2b\" : \"#fff\"};\n`;\n\nconst LessonFooterInner = styled(\"div\")`\n  max-width: 920px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 auto;\n`;\n\nconst LessonFooterMessage = styled(\"div\")<LessonFooterProps>`\n  width: 100%;\n  display: ${({ status }) =>\n    status === \"right\" || status === \"wrong\" ? \"flex\" : \"none\"};\n  align-items: center;\n`;\n\nconst LessonFooterTitle = styled(\"h2\")`\n  margin: 0;\n  font-family: \"Nunito\", sans-serif;\n  line-height: 30px;\n  font-size: 24px;\n  font-weight: 800;\n  letter-spacing: 0.2px;\n`;\n\nconst LessonFooterText = styled(\"p\")`\n  margin: 5px 0 0 0;\n  font-size: 17px;\n  font-family: \"Nunito\";\n  overflow-y: scroll;\n  max-height: 60px;\n`;\n\nconst LessonButton = styled(\"button\")<LessonButtonProps>`\n  border: 0 solid transparent;\n  background-color: ${(props) =>\n    props.stateWrong\n      ? \"#ff4b4b\"\n      : props.stateRight\n      ? \"#58cc02\"\n      : props.active\n      ? \"#78C83D\"\n      : props.skip\n      ? \"#fff\"\n      : \"#E5E5E5\"};\n  color: ${(props) => (props.active ? \"#fff\" : \"#AFAFAF\")};\n  border-color: ${(props) =>\n    props.stateWrong\n      ? \"#ea2b2b\"\n      : props.stateRight\n      ? \"#58a700\"\n      : props.skip\n      ? \"#e5e5e5\"\n      : \"white\"};\n  border-width: ${(props) => (props.skip ? \"2px\" : 0)};\n  border-bottom-width: ${(props) =>\n    props.active || props.skip ? `4px` : \"transparent\"};\n  border-bottom-color: ${(props) =>\n    props.skip ? \"#e5e5e5\" : props.stateWrong ? \"#ea2b2b\" : \"#58a700\"};\n  height: 50px;\n  width: 150px;\n  cursor: ${(props) => (props.active || props.skip ? \"pointer\" : \"default\")};\n  text-transform: uppercase;\n  font-family: \"Nunito\";\n  font-size: 15px;\n  font-weight: 800;\n  letter-spacing: 0.8px;\n  border-radius: 15px;\n  padding: 0 20px;\n  display: ${(props) => (props.hidden ? \"none\" : \"block\")};\n  transition: filter 0.2s;\n  &:hover:enabled {\n    filter: ${(props) => (props.skip ? \"brightness(.9)\" : \"brightness(1.1)\")};\n  }\n  &:active:enabled {\n    filter: ${(props) => (props.skip ? \"brightness(.9)\" : \"brightness(1.1)\")};\n    border-bottom-width: ${(props) => (props.skip ? `2px` : \"0\")};\n    height: 46px;\n    transform: translateY(4px);\n  }\n`;\n\nconst ChangeDifficultyBtn = styled(\"button\")`\n  text-transform: uppercase;\n  font-family: \"Nunito\";\n  font-size: 15px;\n  font-weight: 800;\n  letter-spacing: 0.8px;\n  border: none;\n  background-color: inherit;\n  display: flex;\n  align-items: center;\n  color: #afafaf;\n  cursor: pointer;\n  &:hover {\n    filter: brightness(1.2);\n  }\n`;\n\nconst LessonAppear = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateX(150px)\n  }\n\n  100% {\n    opacity: 1;\n    transform: translateX(0)\n  }\n`;\n\nconst LessonBody = styled(\"div\")`\n  margin: 72px 29% 4%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  max-height: calc(100% - 240px);\n  animation-name: ${LessonAppear};\n  animation-duration: 0.2s;\n`;\n\nconst LessonBodyTitle = styled(\"h3\")`\n  font-family: \"Nunito\";\n  font-size: 23px;\n  font-weight: 700;\n  color: #4b4b4b;\n  text-align: center;\n  margin-bottom: 13px;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  z-index: 2;\n  background-color: #fff;\n`;\n\nconst LessonBodyMessage = styled(\"div\")`\n  padding: 12px 15px 12px 21px;\n  border: 2px solid #dedede;\n  font-family: \"Nunito\";\n  font-weight: 400;\n  font-size: 18px;\n  color: #4c4c4c;\n  margin: 0 21px;\n  position: relative;\n  z-index: 1;\n`;\n\nconst LessonBodyVariants = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n`;\n\nconst LessonBodyVariant = styled(\"div\")<LessonButtonProps>`\n  position: relative;\n  border-radius: 15px;\n  border: 2px solid #e5e5e5;\n  border-bottom: 4px solid #e5e5e5;\n  cursor: pointer;\n  padding: 18px 0;\n  text-align: center;\n  margin-top: 14px;\n  border-color: ${(props) =>\n    props.active\n      ? \"#98D6FC\"\n      : props.stateRight\n      ? \"#B6EB7E\"\n      : props.stateWrong\n      ? \"#E9A8A6\"\n      : null};\n  background-color: ${(props) => (props.active ? \"#E1F3FE\" : \"inherit\")};\n  color: ${(props) => (props.active ? \"#4897D1\" : \"inherit\")};\n`;\n\nconst LessonBodyWelcome = styled(\"div\")``;\n\nconst LessonBodyResults = styled(\"div\")``;\n\nconst VariantItem = styled(\"button\")<VariantItemProps>`\n  background-color: ${(props) =>\n    props.isFocused ? \"rgb(221, 244, 255)\" : \"inherit\"};\n  height: 60px;\n  border: 1px solid;\n  border-color: ${(props) => (props.isFocused ? \"#84d8ff\" : \"#e5e5e5\")};\n  border-radius: 12px;\n  border-width: 2px 2px 4px;\n  cursor: ${(props) => (props.isDisabled ? \"default\" : \"pointer\")};\n  position: relative;\n  touch-action: manipulation;\n  transform: translateZ(0);\n  user-select: none;\n  text-align: center;\n  color: ${(props) =>\n    props.isFocused ? \"#1899d6\" : props.isDisabled ? \"#e5e5e5\" : \"#4b4b4b\"};\n  font-size: 19px;\n  line-height: 1.4;\n  padding: 12px 16px;\n  width: 100%;\n  transition: background-color 0.1s;\n  outline: none;\n  &:hover {\n    background-color: ${(props) =>\n      props.isFocused ? \"#ddf4ff\" : props.isDisabled ? \"inherit\" : \"#f7f7f7\"};\n  }\n  &:active {\n    transform: translateY(2px) translateZ(0);\n  }\n`;\n\nconst LessonTitle = styled(\"h1\")`\n  font-size: 30px;\n  font-family: \"Nunito\", sans-serif;\n  line-height: 1.25;\n  color: #3c3c3c;\n  text-align: left;\n  font-weight: 800;\n  cursor: default;\n  margin: 0;\n`;\n\nconst LessonQuestion = styled(\"p\")`\n  font-size: 19px;\n  line-height: 39px;\n  font-family: \"Nunito\", sans-serif;\n  color: #3c3c3c;\n  padding: 12px 24px;\n  margin-left: 8px;\n  background-color: #fff;\n  border: 2px solid #e5e5e5;\n  border-radius: 15px;\n  box-sizing: border-box;\n  cursor: default;\n`;\n\nconst LessonQuestionTriangleContainer = styled(\"div\")`\n  height: 10px;\n  overflow: hidden;\n  width: 20px;\n  position: absolute;\n  left: -5px;\n  margin: 15px 0;\n  top: calc(50% - 15px);\n  transform: translateY(-50%) rotate(-90deg);\n`;\n\nconst LessonQuestionTriangle = styled(\"span\")`\n  box-sizing: border-box;\n  position: absolute;\n  background-color: #fff;\n  border: 2px solid #e5e5e5;\n  border-radius: 2px;\n  content: \"\";\n  height: 14.14427px;\n  left: 50%;\n  transform: rotate(45deg);\n  transform-origin: top left;\n  width: 14.14427px;\n`;\n\nconst messageIconAppear = keyframes`\n\n  50% {\n    transform: scale(1.1)\n  }\n\n  75% {\n    transform: scale(0.9)\n  }\n\n  100% {\n    transform: scale(1)\n  }\n`;\n\nconst LessonFooterIcon = styled(\"div\")<LessonFooterProps>`\n  border-radius: 98px;\n  display: block;\n  float: left;\n  height: 80px;\n  width: 80px;\n  background: url(${({ status }) =>\n    status === \"right\" ? RightIcon : WrongIcon});\n\n  background-position: ${({ status }) =>\n    status === \"right\" ? \"-145px -64px\" : \"-183px -65px\"};\n  background-color: #fff;\n  display: block;\n  animation-name: ${messageIconAppear};\n  animation-duration: 0.3s;\n  animation-fill-mode: forwards;\n  animation-timing-function: linear;\n`;\n\nconst ResultsContainer = styled(\"section\")`\n  display: flex;\n  height: calc(100vh - 140px);\n  justify-content: center;\n  outline: none;\n`;\n\nconst ResultsHiddenForm = styled(Form)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  top: -1000px;\n  left: -1000px;\n`;\n\nconst ResultsTitle = styled(\"h2\")`\n  margin: 25px 0;\n  font-family: \"Nunito\";\n  font-size: 24px;\n  font-weight: 800;\n  color: #3c3c3c;\n`;\n\nconst ResultsDescription = styled(\"span\")`\n  font-size: 19px;\n  line-height: 1.4;\n  color: #777;\n  font-family: \"Nunito\";\n`;\n\nconst ResultsBlock = styled(\"div\")`\n  padding: 50px 100px;\n  width: 100%;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  position: relative;\n  box-sizing: border-box;\n`;\n\nconst PairsList = styled(\"ul\")`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  list-style: none;\n  margin: 30px 0 0;\n  padding: 0;\n`;\n\nconst PairsItem = styled(\"li\")`\n  margin-bottom: 5px;\n  position: relative;\n  width: 48%;\n`;\n\nexport {\n  LessonContainer,\n  LessonFooter,\n  LessonFooterInner,\n  LessonFooterMessage,\n  LessonFooterTitle,\n  LessonFooterText,\n  LessonButton,\n  LessonBody,\n  LessonBodyTitle,\n  LessonBodyMessage,\n  LessonBodyVariants,\n  LessonBodyVariant,\n  LessonBodyWelcome,\n  LessonBodyResults,\n  VariantItem,\n  LessonTitle,\n  LessonQuestion,\n  LessonQuestionTriangleContainer,\n  LessonQuestionTriangle,\n  LessonFooterIcon,\n  ResultsContainer,\n  ResultsHiddenForm,\n  ResultsTitle,\n  ResultsDescription,\n  ResultsBlock,\n  ChangeDifficultyBtn,\n  PairsList,\n  PairsItem,\n};\n", "import { useRef, useEffect } from \"react\";\n\nexport const useFocus = <T extends HTMLElement>(dependency?: string) => {\n  const ref = useRef<T>(null);\n\n  useEffect(() => {\n    return ref.current?.focus();\n  }, [dependency]);\n\n  return ref;\n};\n", "import { useTransition } from \"@remix-run/react\";\nimport { useSkill } from \"..\";\nimport {\n  LessonFooter,\n  LessonFooterInner,\n  LessonFooterMessage,\n  LessonFooterIcon,\n  LessonFooterTitle,\n  LessonFooterText,\n  LessonButton,\n  ChangeDifficultyBtn,\n} from \"./lib\";\nimport Easier from \"~/styles/easier.svg\";\nimport Harder from \"~/styles/harder.svg\";\nimport { doesItemContainSign } from \"~/utils\";\n\nexport default function Footer({\n  checkAnswer = () => {},\n}: {\n  checkAnswer?: Function;\n}) {\n  const transition = useTransition();\n  const { skillState, content, continueSkill, setStateWrong, setDifficulty } =\n    useSkill();\n\n  const { answer, text, difficulty } = content;\n  const { status, buttonDisabled } = skillState;\n\n  const buttonText =\n    transition.state === \"submitting\"\n      ? \"Saving...\"\n      : transition.state === \"loading\"\n      ? \"Saved!\"\n      : status === \"right\"\n      ? \"Next\"\n      : status !== \"idle\"\n      ? \"Continue\"\n      : \"Check\";\n\n  const getFooterText = (text: string | null, answer: string[]) => {\n    if (text && answer.length) {\n      if (answer.length === 1) {\n        return doesItemContainSign(text.split(\" \")[Number(answer[0])]).newItem;\n      }\n      return text;\n    }\n    return answer.join(\" \");\n  };\n\n  const handleContinue = () => {\n    if (\n      buttonText === \"Saving...\" ||\n      buttonText === \"Saved!\" ||\n      skillState.buttonDisabled\n    ) {\n      return;\n    }\n    if (status === \"idle\") {\n      return checkAnswer();\n    }\n    continueSkill();\n  };\n\n  const handleSkip = () => {\n    setStateWrong();\n  };\n\n  return (\n    <LessonFooter status={status}>\n      <LessonFooterInner>\n        <LessonButton\n          onClick={handleSkip}\n          skip={true}\n          hidden={status !== \"idle\" || content.stepType === \"Pairs\"}\n        >\n          Skip\n        </LessonButton>\n\n        {difficulty && status === \"idle\" && (\n          <ChangeDifficultyBtn\n            onClick={() =>\n              setDifficulty(difficulty === \"easy\" ? \"hard\" : \"easy\")\n            }\n          >\n            <img\n              src={difficulty === \"easy\" ? Harder : Easier}\n              alt={difficulty}\n              height={19}\n              width={27}\n              style={{ marginRight: 10 }}\n            />\n            <p>Make {difficulty === \"easy\" ? \"harder\" : \"easier\"}</p>\n          </ChangeDifficultyBtn>\n        )}\n\n        <LessonFooterMessage status={status}>\n          {(status === \"right\" || status === \"wrong\") && (\n            <LessonFooterIcon status={status} />\n          )}\n          <div style={{ marginLeft: 16, width: \"calc(100% - 209px)\" }}>\n            <LessonFooterTitle>\n              {status === \"wrong\" ? \"Right answer: \" : \"Great!\"}\n            </LessonFooterTitle>\n            {status === \"wrong\" && (\n              <LessonFooterText>{getFooterText(text, answer)}</LessonFooterText>\n            )}\n          </div>\n        </LessonFooterMessage>\n\n        <LessonButton\n          active={!buttonDisabled}\n          stateRight={status === \"right\"}\n          stateWrong={status === \"wrong\"}\n          onClick={handleContinue}\n          disabled={\n            buttonText === \"Saving...\" ||\n            buttonText === \"Saved!\" ||\n            buttonDisabled\n          }\n          style={{\n            marginLeft:\n              status === \"results\" || content.stepType === \"Pairs\" ? \"auto\" : 0,\n          }}\n        >\n          {buttonText}\n        </LessonButton>\n      </LessonFooterInner>\n    </LessonFooter>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.username === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateUsername(username: unknown): username is string {\n  return typeof username === \"string\" && username.length > 3;\n}\n\nexport const isItemInArray = <T>(arr: Array<T>, item: T) => {\n  // let isExist = false;\n  // arr.find((arrItem) => {\n  //   if (arrItem === item) {\n  //     isExist = true;\n  //   }\n  // });\n  // return isExist;\n\n  return !!arr.filter((arrItem) => arrItem === item).length;\n};\n\nexport const findInArrayById = (arr = [{ id: \"\" }], id: string) => {\n  return arr.find((arrItem) => (arrItem.id = id));\n};\n\nexport const doesItemContainSign = (item: string) => {\n  const newItem = item.split(\"\").slice(0, -1).join(\"\");\n  switch (item.slice(-1)) {\n    case \",\": {\n      return {\n        newItem,\n        sign: \",\",\n      };\n    }\n    case \".\": {\n      return {\n        newItem,\n        sign: \".\",\n      };\n    }\n    case \"?\": {\n      return {\n        newItem,\n        sign: \"?\",\n      };\n    }\n    case \"!\": {\n      return {\n        newItem,\n        sign: \"!\",\n      };\n    }\n    default: {\n      return { newItem: item, sign: \"\" };\n    }\n  }\n};\n\nexport const doesArrayContainItems = (items: string[], arr: string[]) => {\n  const filtered = arr.filter((arrItem: string) =>\n    items.find(\n      (item: string) =>\n        item.trim().toLocaleLowerCase() === arrItem.trim().toLowerCase()\n    )\n  );\n  return {\n    state: !!filtered.length,\n    length: filtered.length,\n    items: filtered,\n    formatted: filtered.map((item) => item.trim()),\n  };\n};\n\nexport const getWeekDay = () => {\n  return getShortWeekday(new Date());\n};\n\nexport const getYesterdayDay = () => {\n  const today = new Date();\n  today.setDate(today.getDate() - 1);\n\n  return getShortWeekday(today);\n};\n\nfunction getShortWeekday(day: Date) {\n  return day.toLocaleDateString(\"en-US\", {\n    weekday: \"short\",\n  }) as string;\n}\n\nexport const getCurrentWeek = () => {\n  const week = [];\n\n  for (let i = 6; i >= 0; i--) {\n    const today = new Date();\n    today.setDate(today.getDate() - i);\n    week.push(getShortWeekday(today));\n  }\n\n  return week;\n};\n\nexport const areArraysEqual = (arr1: string[], arr2: string[]) => {\n  if (arr1.length !== arr2.length) {\n    false;\n  }\n  const filtered = arr1.filter((arr1Item, idx) => arr1Item === arr2[idx]);\n  return filtered.length === arr1.length;\n};\n\nexport const getTodayDate = () => {\n  const today = new Date();\n\n  return today.getFullYear() + today.getUTCMonth() + today.getDate();\n};\n", "import React, { ReactElement, useEffect, useState } from \"react\";\nimport { useFocus } from \"~/hooks/useFocus\";\nimport { useSkill } from \"..\";\nimport Footer from \"./Footer\";\nimport { LessonBody } from \"./lib\";\n\ntype LessonProps = {\n  initialValue?: string | string[];\n  checkAnswer: Function;\n  disabledCondition: Function | null;\n  keyDownHandle?: Function;\n};\n\nexport const Lesson: React.FC<LessonProps> = ({\n  initialValue = \"\",\n  disabledCondition,\n  checkAnswer,\n  keyDownHandle,\n  children,\n  ...props\n}) => {\n  const { skillState, continueSkill, setCheckDisabled } = useSkill();\n  const { status, formDisabled, buttonDisabled } = skillState;\n  const [userAnswer, setUserAnswer] = useState(initialValue);\n\n  const lessonRef = useFocus<HTMLDivElement>(status);\n\n  useEffect(() => {\n    if (disabledCondition === null) {\n      return;\n    }\n    if (disabledCondition(userAnswer)) {\n      return setCheckDisabled(false);\n    }\n    return setCheckDisabled(true);\n  }, [userAnswer]);\n\n  const onKeyDownHandle = (event: React.KeyboardEvent, callback?: Function) => {\n    if (callback) {\n      callback(event);\n    }\n    if (keyDownHandle) {\n      keyDownHandle(event, setUserAnswer);\n    }\n    if (event.key !== \"Enter\" || buttonDisabled) {\n      return;\n    }\n    event.preventDefault();\n\n    if (status === \"idle\") {\n      return checkAnswer(userAnswer);\n    }\n\n    return continueSkill();\n  };\n\n  useEffect(() => {\n    if (!formDisabled && setUserAnswer) {\n      setUserAnswer(initialValue);\n    }\n  }, [formDisabled]);\n\n  return (\n    <div\n      tabIndex={0}\n      onKeyDown={onKeyDownHandle}\n      ref={lessonRef}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexGrow: 1,\n        outline: \"none\",\n      }}\n    >\n      <LessonBody>\n        {React.Children.map(children, (child) => {\n          return React.cloneElement(child as ReactElement, {\n            userAnswer,\n            setUserAnswer,\n            keyDownCheck: onKeyDownHandle,\n            checkAnswer: (uAnswer: string | string[]) =>\n              checkAnswer(uAnswer, setUserAnswer),\n            ...props,\n          });\n        })}\n      </LessonBody>\n      <Footer checkAnswer={() => checkAnswer(userAnswer)} />\n    </div>\n  );\n};\n", "import { useEffect, useLayoutEffect, useState } from \"react\";\nimport { InsertWordsTextBlock } from \"~/modules/Constructor/Levels/components/lib\";\nimport { useSkill } from \"../..\";\nimport { LessonTitle } from \"../lib\";\nimport Puzzle from \"./Puzzle\";\nimport Variants from \"./Variants\";\nimport Text from \"./Text\";\nimport { areArraysEqual } from \"~/utils\";\n\ntype InsertWordsScreenProps = {\n  userAnswer: string[];\n  setUserAnswer: Function;\n  keyDownCheck: Function;\n};\n\nexport default function InsertWordsScreen({\n  userAnswer,\n  setUserAnswer,\n  keyDownCheck,\n}: InsertWordsScreenProps) {\n  const { content, skillState } = useSkill();\n\n  const { isToChoose, variants, answer, difficulty } = content;\n  // const initalValues = new Array(answer[0].split(\",\").length).fill(\n  //   variants && difficulty === \"easy\" ? \" \" : \"\"\n  // );\n  const initalValues = new Array(answer.length).fill(\n    variants && difficulty === \"easy\" ? \" \" : \"\"\n  );\n\n  const [values, setValues] = useState(initalValues);\n\n  useEffect(() => {\n    if (areArraysEqual(userAnswer, values) && !isToChoose) {\n      return;\n    }\n    // if (values.length !== answer[0].split(\",\").length) {\n    if (values.length !== answer.length) {\n      return;\n    }\n\n    setUserAnswer(values);\n  }, [values]);\n\n  useEffect(() => {\n    if (isToChoose) {\n      return;\n    }\n    if (userAnswer[0].length) {\n      setValues([...userAnswer]);\n    }\n  }, [userAnswer]);\n\n  useLayoutEffect(() => {\n    // if (skillState.formDisabled) {\n    //   return;\n    // }\n    // console.log(\"Wow\");\n    setValues(initalValues);\n    // }, [difficulty, skillState.formDisabled]);\n  }, [difficulty]);\n\n  return (\n    <>\n      <LessonTitle>Add missing words</LessonTitle>\n\n      <InsertWordsTextBlock>\n        <Text values={values} setValues={setValues} />\n\n        <Variants\n          values={values}\n          setValues={setValues}\n          keyDownCheck={keyDownCheck}\n        />\n\n        <Puzzle values={values} setValues={setValues} />\n      </InsertWordsTextBlock>\n    </>\n  );\n}\n", "import styled from \"@emotion/styled\";\nimport Sidebar from \"./Sidebar\";\n\ntype InsertWordsTextBlockProps = {\n  showText?: boolean;\n};\n\ntype VariantItemNumberProps = {\n  isConnected?: boolean;\n  isFocused: boolean;\n};\n\ntype InsertWordsInputProps = {\n  length: number;\n  isToChoose?: boolean;\n};\n\ntype SidebarBtnProps = {\n  isActive: boolean;\n};\n\nconst StepContent = styled(\"div\")`\n  border-top: 1px solid #e5e5e5;\n  border-bottom: 1px solid #e5e5e5;\n  padding: 60px 24px;\n  min-height: 300px;\n  margin-top: 20px;\n`;\n\nconst StepHeader = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 70px;\n  position: relative;\n`;\n\nconst ChooseStyle = styled(\"div\")`\n  display: grid;\n  grid-template-columns: max-content max-content;\n  grid-template-rows: max-content max-content;\n  justify-content: center;\n  align-items: self-end;\n  margin: auto 0;\n`;\n\nconst StyleButton = styled(\"button\")`\n  padding: 35px;\n  font-size: 20px;\n  border: none;\n  cursor: pointer;\n  font-family: \"Nunito\";\n  transition: color 0.2s;\n  &:hover {\n    color: #1cb0f6;\n  }\n  &:active {\n    color: #1cb0f6;\n    filter: brightness(1.1);\n  }\n`;\n\nconst InsertWordsTextBlock = styled(\"div\")<InsertWordsTextBlockProps>`\n  min-height: 170px;\n  flex-grow: 1;\n  width: 100%;\n  padding: 10px 0;\n  background-color: #fff;\n  position: relative;\n  z-index: ${(props) => (props.showText ? \"2\" : \"0\")};\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  box-sizing: border-box;\n  font-size: 19px;\n  font-family: \"Nunito\";\n  margin-top: 30px;\n`;\n\nconst InsertWordsInput = styled(\"input\")<InsertWordsInputProps>`\n  border: none;\n  font-size: 19px;\n  margin: 0 7px;\n  width: ${(props) => props.length * 13}px;\n  border-bottom: 2px solid #afafaf;\n  cursor: ${(props) => (props.isToChoose ? \"pointer\" : \"text\")};\n  caret-color: #1caff6;\n  padding: 0;\n  &:disabled {\n    background: inherit;\n    cursor: default;\n  }\n  &:focus {\n    border-bottom-color: #1caff6;\n    outline: none;\n  }\n`;\n\nconst InsertWordsAnswerField = styled(\"span\")<InsertWordsInputProps>`\n  margin: 0 7px;\n  width: ${(props) => props.length * 13}px;\n  border-bottom: 2px solid #afafaf;\n`;\n\nconst VariantsList = styled(\"ul\")`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  background-color: #fff;\n`;\n\nconst VariantsItem = styled(\"li\")`\n  position: relative;\n  margin-bottom: 8px;\n  background-color: white;\n`;\n\nconst VariantItemInput = styled(\"input\")`\n  border: 1px solid #e5e5e5;\n  border-radius: 12px;\n  border-width: 2px 2px 4px;\n  position: relative;\n  touch-action: manipulation;\n  transform: translateZ(0);\n  user-select: none;\n  text-align: left;\n  color: #4b4b4b;\n  font-size: 19px;\n  line-height: 1.4;\n  padding: 12px 16px 12px 56px;\n  width: 100%;\n`;\n\nconst VariantItemNumber = styled(\"span\")<VariantItemNumberProps>`\n  border: 2px solid #e5e5e5;\n  border-color: ${(props) =>\n    props.isConnected\n      ? \"#78C83D\"\n      : props.isFocused\n      ? \"rgb(132, 216, 255)\"\n      : \"#e5e5e5\"};\n  border-radius: 8px;\n  color: ${(props) =>\n    props.isConnected\n      ? \"#78C83D\"\n      : props.isFocused\n      ? \"rgb(24, 153, 214)\"\n      : \"#afafaf\"};\n  font-size: 15px;\n  font-weight: 700;\n  height: 30px;\n  width: 30px;\n  position: absolute;\n  top: 12px;\n  left: 16px;\n  z-index: 1;\n  text-align: center;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Nunito\";\n`;\n\nconst SidebarList = styled(\"ul\")`\n  margin-bottom: auto;\n`;\n\nconst SidebarBtn = styled(\"button\")<SidebarBtnProps>`\n  color: #3c3c3c;\n  display: block;\n  font-size: 16px;\n  font-weight: 700;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  background: ${(props) => (props.isActive ? \"#dadada\" : \"inherit\")};\n  border-radius: 16px;\n  width: 100%;\n  text-align: left;\n  padding: 13px 20px;\n  transition: background 0.07s;\n  margin-bottom: 2px;\n  &:hover {\n    background: #dadada;\n  }\n`;\n\nexport {\n  StepHeader,\n  StepContent,\n  ChooseStyle,\n  StyleButton,\n  InsertWordsTextBlock,\n  InsertWordsInput,\n  InsertWordsAnswerField,\n  VariantsList,\n  VariantsItem,\n  VariantItemInput,\n  VariantItemNumber,\n  SidebarList,\n  SidebarBtn,\n};\n", "/** @jsxRuntime classic */\n/** @jsx jsx */\nimport styled from \"@emotion/styled\";\n\ntype PuzzleItemProps = {\n  alreadyChoosen: boolean;\n};\n\nconst PuzzleContainer = styled(\"section\")`\n  width: 100%;\n`;\n\nconst PuzzleList = styled(\"ul\")`\n  list-style-type: none;\n  padding: 0;\n  margin: 30px 0 0;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row-reverse;\n  justify-content: center;\n`;\n\nconst PuzzleItem = styled(\"li\")<PuzzleItemProps>`\n  margin: 0 16px 8px 0;\n  position: ${(props) => (props.alreadyChoosen ? \"absolute\" : \"relative\")};\n  top: ${(props) => (props.alreadyChoosen ? \"-1000px\" : \"0\")};\n`;\n\nconst VariantsContainer = styled(\"section\")`\n  width: 100%;\n  margin-top: 20px;\n  outline: none;\n`;\n\nconst VariantsList = styled(\"ul\")`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst VariantsItem = styled(\"li\")`\n  position: relative;\n  margin-bottom: 8px;\n  width: 49%;\n`;\n\nexport {\n  PuzzleContainer,\n  PuzzleList,\n  PuzzleItem,\n  VariantsContainer,\n  VariantsList,\n  VariantsItem,\n};\n", "import { doesItemContainSign } from \"~/utils\";\nimport { useSkill } from \"../..\";\nimport { VariantItem } from \"../lib\";\nimport { PuzzleContainer, PuzzleItem, PuzzleList } from \"./lib\";\n\ntype PuzzleProps = {\n  values: string[];\n  setValues: Function;\n};\n\nexport default function Puzzle({ values, setValues }: PuzzleProps) {\n  const { content } = useSkill();\n  const { answer: contentAnswer, text, difficulty, isToChoose } = content;\n  const insertText = text as string;\n  const selectVariant = (variant: string) => {\n    setValues((prevArray: string[]) => {\n      const empty = prevArray.find((item) => {\n        if (item === \" \" || item.length === 0 || !!item === false) {\n          return item;\n        }\n      });\n      const inx = prevArray.indexOf(empty as string);\n      if (inx.toString() && inx !== -1) {\n        const newArr = prevArray;\n        newArr[inx] = variant;\n        return [...newArr];\n      }\n      return [...prevArray, variant];\n    });\n  };\n\n  const indexes =\n    contentAnswer.length === 1 ? contentAnswer[0].split(\",\") : contentAnswer;\n\n  const words = indexes.map((idx) => {\n    const textItem = insertText.split(\" \")[Number(idx)];\n\n    return doesItemContainSign(textItem).newItem;\n  });\n\n  return isToChoose && difficulty === \"easy\" ? (\n    <PuzzleContainer>\n      <PuzzleList>\n        {/* {contentAnswer.map((answer, idx: number) => { */}\n        {words.map((answer, idx: number) => {\n          const alreadyChoosen = !!values.find((value) => value === answer);\n          return (\n            <PuzzleItem alreadyChoosen={alreadyChoosen} key={idx}>\n              <VariantItem\n                type=\"button\"\n                isFocused={false}\n                onClick={() => selectVariant(answer)}\n                disabled={alreadyChoosen}\n              >\n                {answer}\n              </VariantItem>\n            </PuzzleItem>\n          );\n        })}\n      </PuzzleList>\n    </PuzzleContainer>\n  ) : null;\n}\n", "import { useEffect, useRef } from \"react\";\nimport { VariantItemNumber } from \"~/modules/Constructor/Levels/components/lib\";\nimport { useSkill } from \"../..\";\nimport { VariantItem } from \"../lib\";\nimport { VariantsContainer, VariantsItem, VariantsList } from \"./lib\";\n\ntype VariantsProps = {\n  values: string[];\n  setValues: Function;\n  keyDownCheck: Function;\n};\n\nexport default function Variants({\n  values,\n  setValues,\n  keyDownCheck,\n}: VariantsProps) {\n  const myRef = useRef<HTMLDivElement>(null);\n  const { content, skillState } = useSkill();\n  const { variants, difficulty } = content;\n\n  useEffect(() => {\n    if (skillState.status === \"idle\") {\n      const timeout = setTimeout(() => {\n        myRef.current?.focus();\n      }, 10);\n      return () => clearTimeout(timeout);\n    }\n  }, [skillState.status]);\n\n  const KeyDownHandler = (e: KeyboardEvent) => {\n    variants.forEach((variant, idx) => {\n      if (Number(e.key) === idx + 1) {\n        setValues([variant.value]);\n      }\n    });\n  };\n\n  return variants && difficulty === \"easy\" ? (\n    <VariantsContainer\n      tabIndex={0}\n      ref={myRef}\n      onKeyDown={(e) =>\n        keyDownCheck(e, (e: KeyboardEvent) => KeyDownHandler(e))\n      }\n    >\n      <VariantsList>\n        {variants.map(({ value }, idx: number) => (\n          <VariantsItem key={idx} onClick={() => setValues([value])}>\n            <VariantItemNumber isFocused={value === values[0]}>\n              {idx + 1}\n            </VariantItemNumber>\n            <VariantItem type=\"button\" isFocused={value === values[0]}>\n              {value}\n            </VariantItem>\n          </VariantsItem>\n        ))}\n      </VariantsList>\n    </VariantsContainer>\n  ) : null;\n}\n", "import { Fragment, SyntheticEvent, useEffect, useRef, useState } from \"react\";\nimport { InsertWordsInput } from \"~/modules/Constructor/Levels/components/lib\";\nimport { doesItemContainSign } from \"~/utils\";\nimport { useSkill } from \"../..\";\n\ntype TextProps = {\n  values: string[];\n  setValues: Function;\n};\n\nexport default function Text({ values, setValues }: TextProps) {\n  const { content, skillState } = useSkill();\n  const { text, isToChoose, variants, answer, difficulty } = content;\n  useEffect(() => {\n    // gets rid of focus if our lesson is only one and we solve it wrong\n    if (!skillState.formDisabled) {\n      setValues([...new Array(answer.length).fill(\" \")]);\n    }\n  }, [skillState.formDisabled]);\n\n  const myRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (skillState.status === \"idle\" && !isToChoose && !variants.length) {\n      const timeout = setTimeout(() => {\n        myRef.current?.focus();\n      }, 10);\n      return () => clearTimeout(timeout);\n    }\n  }, [skillState.status]);\n\n  const handleChange = (evt: SyntheticEvent, index: number) => {\n    const target = evt.target as HTMLInputElement;\n    setValues((prevArray: string[]) => {\n      const newArray = prevArray;\n      newArray[index] = target.value;\n      return [...newArray];\n    });\n  };\n\n  const handleInputClick = (evt: SyntheticEvent, index: number) => {\n    const target = evt.target as HTMLInputElement;\n    if (target.value === \" \" || target.value.length === 0) {\n      return;\n    }\n    target.blur();\n    setValues((prevArray: string[]) => {\n      prevArray[index] = \" \";\n      return [...prevArray];\n    });\n  };\n\n  return (\n    <section>\n      {text?.split(\" \").map((textItem: string, textItemIndex: number) => {\n        const { newItem, sign } = doesItemContainSign(textItem);\n        if (answer.includes(textItemIndex.toString())) {\n          return answer.map((indexItem: string, index: number) => {\n            if (textItemIndex !== Number(indexItem)) {\n              // sets position for inputs\n              return null;\n            }\n\n            return (\n              <Fragment key={index}>\n                {difficulty === \"easy\" && !!variants.length ? (\n                  <InsertWordsInput\n                    type=\"text\"\n                    length={newItem.length}\n                    disabled={true}\n                    value={values[index]}\n                    style={{ color: \"#fff\" }}\n                  />\n                ) : difficulty === \"easy\" && isToChoose ? (\n                  <InsertWordsInput\n                    type=\"text\"\n                    length={newItem.length}\n                    value={values[index]}\n                    onClick={(evt) => {\n                      handleInputClick(evt, index);\n                    }}\n                    style={{ cursor: \"pointer\" }}\n                    readOnly\n                  />\n                ) : (\n                  <InsertWordsInput\n                    type=\"text\"\n                    id={`input${0}`}\n                    isToChoose={isToChoose as boolean}\n                    length={newItem.length}\n                    value={values[index]}\n                    onChange={(evt) => handleChange(evt, index)}\n                    disabled={skillState.formDisabled}\n                    ref={answer.indexOf(indexItem) === 0 ? myRef : null}\n                  />\n                )}\n\n                <span style={{ marginRight: 4 }}>{sign}</span>\n              </Fragment>\n            );\n          });\n        }\n        return (\n          <span style={{ marginRight: 4 }} key={`text${textItemIndex}`}>\n            {textItem}\n          </span>\n        );\n      })}\n    </section>\n  );\n}\n", "import {\n  areArraysEqual,\n  doesArrayContainItems,\n  doesItemContainSign,\n} from \"~/utils\";\nimport { useSkill } from \"../..\";\nimport { Lesson } from \"../Lesson\";\nimport InsertWordsScreen from \"./InsertWordsScreen\";\n\nexport type InsertWordsType = {\n  userAnswer: string[];\n  setUserAnswer: Function;\n};\n\nexport default function InsertWords() {\n  const { content, setStateRight, setStateWrong } = useSkill();\n  const { answer, stepType, text, difficulty, isToChoose } = content;\n\n  if (!text) {\n    return null;\n  }\n\n  const initialUserAnswer = [\"\"];\n\n  const checkAnswer = (userAnswer: string[]) => {\n    const arrayOfAnswers = text.split(\" \").filter((item, index) => {\n      if (answer[0].split(\",\").find((it) => Number(it) === index)) {\n        return item;\n      }\n    });\n    const formattedArrayOfAnswers = arrayOfAnswers.map(\n      (answerItem) => doesItemContainSign(answerItem).newItem\n    );\n    const { formatted } = doesArrayContainItems(\n      formattedArrayOfAnswers as string[],\n      userAnswer\n    );\n\n    if (difficulty === \"easy\" && isToChoose) {\n      if (areArraysEqual(formattedArrayOfAnswers as string[], userAnswer)) {\n        return setStateRight();\n      }\n      return setStateWrong();\n    }\n\n    if (areArraysEqual(formattedArrayOfAnswers as string[], formatted)) {\n      return setStateRight();\n    }\n    return setStateWrong();\n  };\n\n  return stepType === \"Insert\" ? (\n    <Lesson\n      disabledCondition={(userAnswer: string[]) => {\n        const isEachFieldContented = userAnswer.filter((uA) => {\n          if (uA !== \" \" && uA.length > 0) {\n            return true;\n          }\n        });\n        return isEachFieldContented.length === answer.length;\n      }}\n      initialValue={initialUserAnswer}\n      checkAnswer={checkAnswer}\n    >\n      <InsertWordsScreen\n        userAnswer={[\"\"]}\n        setUserAnswer={() => {}}\n        keyDownCheck={() => {}}\n      />\n    </Lesson>\n  ) : null;\n}\n", "import { Variant } from \"@prisma/client\";\nimport { useState } from \"react\";\nimport { LessonTitle, PairsItem, PairsList, VariantItem } from \"./lib\";\n\ntype PairsScreenProps = {\n  variants: Variant[];\n  checkAnswer: Function;\n  userAnswer: string[];\n};\n\nexport default function PairsScreen({\n  variants,\n  checkAnswer,\n  userAnswer,\n}: PairsScreenProps) {\n  const [activeIdx, setActiveIdx] = useState<number>(-1);\n\n  const isVariantDisabled = (idx: number) => {\n    if (\n      userAnswer.find((answerItem) => answerItem.includes((idx + 1).toString()))\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <>\n      <LessonTitle>Connect pairs</LessonTitle>\n\n      <PairsList>\n        {variants.map(({ value, isFocused }, idx: number) => (\n          <PairsItem\n            key={idx}\n            onClick={(evt) => {\n              const target = evt.target as HTMLInputElement;\n              if (isVariantDisabled(idx)) {\n                return;\n              }\n              if (activeIdx === -1) {\n                return setActiveIdx(Number(target.id));\n              }\n              checkAnswer(`${activeIdx}${target.id}`);\n              setActiveIdx(-1);\n            }}\n          >\n            <VariantItem\n              type=\"button\"\n              id={(idx + 1).toString()}\n              disabled={isVariantDisabled(idx)}\n              isDisabled={isVariantDisabled(idx)}\n              isFocused={isFocused || activeIdx === idx + 1}\n            >\n              {value}\n            </VariantItem>\n          </PairsItem>\n        ))}\n      </PairsList>\n    </>\n  );\n}\n", "import { useSkill } from \"..\";\nimport { Lesson } from \"./Lesson\";\nimport PairsScreen from \"./PairsScreen\";\n\nexport default function Pairs() {\n  const { content, setStateRight, updateState, skillState } = useSkill();\n  const { answer, variants } = content;\n  const initialValue = [\"\"];\n\n  const checkAnswer = (uAns: string, setUserAnswer: Function) => {\n    let spliceIdx = 0;\n    if (\n      // Checking if userAnswer or it's vice versa is equal the right one\n      answer.find((answerItem: string, idx: number) => {\n        spliceIdx = idx;\n        return (\n          answerItem === uAns ||\n          answerItem.split(\"\").reverse().join(\"\") === uAns\n        );\n      })\n    ) {\n      const newContent = content;\n      newContent.answer.splice(spliceIdx, 1);\n      setUserAnswer((prevUserAnswer: string[]) => [...prevUserAnswer, uAns]);\n      if (newContent.answer.length === 0) {\n        return setStateRight();\n      }\n      return updateState({ content: newContent });\n    } else {\n      setUserAnswer((prevUserAnswer: string[]) => [...prevUserAnswer]);\n      return updateState({\n        skillState: { ...skillState, buttonDisabled: true },\n      });\n    }\n  };\n\n  return content.stepType === \"Pairs\" ? (\n    <Lesson\n      initialValue={initialValue}\n      disabledCondition={null}\n      checkAnswer={checkAnswer}\n    >\n      <PairsScreen\n        userAnswer={[\"\"]}\n        checkAnswer={() => {}}\n        variants={variants}\n      />\n    </Lesson>\n  ) : null;\n}\n", "import { useEffect, useRef } from \"react\";\nimport { Textarea } from \"~/components/lib\";\nimport {\n  LessonTitle,\n  LessonQuestion,\n  LessonQuestionTriangleContainer,\n  LessonQuestionTriangle,\n} from \"../lib\";\nimport Duo from \"~/styles/duo.svg\";\nimport { useSkill } from \"../..\";\n\ntype QuestionAnswerScreenType = {\n  userAnswer: string;\n  setUserAnswer: Function;\n};\n\nexport default function QuestionAnswerScreen({\n  userAnswer,\n  setUserAnswer,\n}: QuestionAnswerScreenType) {\n  const { skillState, content } = useSkill();\n\n  const myRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    if (skillState.status === \"idle\") {\n      const timeout = setTimeout(() => {\n        myRef.current?.focus();\n      }, 10);\n      return () => clearTimeout(timeout);\n    }\n  }, [skillState.status]);\n\n  return (\n    <>\n      <LessonTitle>Answer the question</LessonTitle>\n      <section>\n        <div\n          style={{ display: \"flex\", alignItems: \"center\", margin: \"30px 0\" }}\n        >\n          <img src={Duo} alt=\"Duo\" height={150} style={{ marginBottom: -50 }} />\n          <div style={{ position: \"relative\" }}>\n            <LessonQuestion>{content.question}</LessonQuestion>\n            <LessonQuestionTriangleContainer>\n              <LessonQuestionTriangle />\n            </LessonQuestionTriangleContainer>\n          </div>\n        </div>\n        <Textarea\n          id=\"answer\"\n          name=\"answer\"\n          placeholder=\"Enter your answer\"\n          value={userAnswer}\n          onChange={(e) => setUserAnswer(e.target.value)}\n          disabled={skillState.formDisabled}\n          ref={myRef}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n            }\n          }}\n        />\n      </section>\n    </>\n  );\n}\n", "import { useSkill } from \"../..\";\nimport { doesArrayContainItems } from \"~/utils\";\nimport QuestionAnswerScreen from \"./QuestionAnswerScreen\";\nimport { Lesson } from \"../Lesson\";\n\nexport default function QuestionAnswerPractice() {\n  const { content, setStateWrong, setStateRight } = useSkill();\n\n  const checkAnswer = (userAnswer: string) => {\n    const { state, length } = doesArrayContainItems(\n      content.answer,\n      userAnswer.split(\" \")\n    );\n\n    if (!state) {\n      return setStateWrong();\n    }\n\n    if (\n      doesArrayContainItems(content.keywords, userAnswer.split(\" \")).length ===\n        content.keywords.length &&\n      content.keywords.length\n    ) {\n      return setStateRight();\n    }\n\n    if (length < content.answer.length * 0.8) {\n      // if user's response is less than 80% right, then return negative\n      return setStateWrong();\n    }\n\n    return setStateRight();\n  };\n\n  return content.stepType === \"Question\" ? (\n    <Lesson\n      checkAnswer={checkAnswer}\n      disabledCondition={(userAnswer: string) => userAnswer.length > 0}\n    >\n      <QuestionAnswerScreen userAnswer={\"\"} setUserAnswer={() => {}} />\n    </Lesson>\n  ) : null;\n}\n", "import { Variant } from \"@prisma/client\";\nimport {\n  LessonQuestion,\n  LessonQuestionTriangle,\n  LessonQuestionTriangleContainer,\n  LessonTitle,\n  VariantItem,\n} from \"~/modules/Skill/components/lib\";\nimport { VariantItemNumber, VariantsItem, VariantsList } from \"../lib\";\nimport Duo from \"~/styles/duo.svg\";\n\ntype VariantsScreenProps = {\n  question: string;\n  variants: Variant[];\n  userAnswer: string;\n  setUserAnswer: (answer: string) => void;\n};\n\nexport default function VariantsScreen({\n  question,\n  variants,\n  userAnswer,\n  setUserAnswer,\n}: VariantsScreenProps) {\n  return (\n    <>\n      <LessonTitle>Choose right variant</LessonTitle>\n      <section>\n        <div\n          style={{ display: \"flex\", alignItems: \"center\", margin: \"30px 0\" }}\n        >\n          <img src={Duo} alt=\"Duo\" height={150} style={{ marginBottom: -50 }} />\n          <div style={{ position: \"relative\" }}>\n            <LessonQuestion>{question}</LessonQuestion>\n            <LessonQuestionTriangleContainer>\n              <LessonQuestionTriangle />\n            </LessonQuestionTriangleContainer>\n          </div>\n        </div>\n\n        <VariantsList>\n          {variants.map(({ value }, idx: number) => (\n            <VariantsItem key={idx} onClick={() => setUserAnswer(value)}>\n              <VariantItemNumber isFocused={value === userAnswer}>\n                {idx + 1}\n              </VariantItemNumber>\n              <VariantItem type=\"button\" isFocused={value === userAnswer}>\n                {value}\n              </VariantItem>\n            </VariantsItem>\n          ))}\n        </VariantsList>\n      </section>\n    </>\n  );\n}\n", "import VariantsScreen from \"~/modules/Constructor/Levels/components/Variants/VariantsScreen\";\nimport { useSkill } from \"..\";\nimport { Lesson } from \"./Lesson\";\n\nexport default function VariantsPractice() {\n  const { content, setStateRight, setStateWrong } = useSkill();\n  const { question, variants, stepType } = content;\n\n  const lessonQuestion = question as string;\n\n  const checkAnswer = (userAnswer: string) => {\n    if (userAnswer === content.answer[0]) {\n      return setStateRight();\n    }\n    return setStateWrong();\n  };\n\n  const handleOnKeyDown = (e: React.KeyboardEvent, setUserAnswer: Function) => {\n    if (e.key === \"1\") {\n      return setUserAnswer(variants[0].value);\n    }\n    if (e.key === \"2\") {\n      return setUserAnswer(variants[1].value);\n    }\n    if (e.key === \"3\") {\n      return setUserAnswer(variants[2].value);\n    }\n  };\n\n  return stepType === \"Variants\" ? (\n    <Lesson\n      disabledCondition={(userAnswer: string) => userAnswer.length}\n      checkAnswer={checkAnswer}\n      keyDownHandle={handleOnKeyDown}\n    >\n      <VariantsScreen\n        userAnswer={\"\"}\n        setUserAnswer={() => {}}\n        question={lessonQuestion}\n        variants={variants}\n      />\n    </Lesson>\n  ) : null;\n}\n", "import styled from \"@emotion/styled\";\nimport { Link } from \"@remix-run/react\";\n\nconst Wrapper = styled(\"div\")`\n  background: #fff;\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  width: 100%;\n  z-index: 6;\n`;\n\nconst Inner = styled(\"div\")`\n  max-width: 1140px;\n  padding: 40px 24px;\n  margin: 0 auto;\n`;\n\nconst Grid = styled(\"div\")`\n  display: grid;\n  grid-gap: 16px 40px;\n  align-items: center;\n  grid-template-areas:\n    \"title dismiss quit\"\n    \"description dismiss quit\";\n  grid-template-columns: 1fr repeat(2, minmax(min-content, 172px));\n`;\n\nconst Title = styled(\"span\")`\n  font-size: 25px;\n  grid-area: title;\n  line-height: 30px;\n  font-weight: 700;\n  font-family: \"Nunito\";\n`;\n\nconst Description = styled(\"span\")`\n  font-size: 19px;\n  grid-area: description;\n  line-height: 24px;\n  padding: 0;\n  color: #777;\n  font-family: \"Nunito\";\n`;\n\nconst QuitButton = styled(Link)`\n  border: 0 solid transparent;\n  background-color: #1cb0f6;\n  color: #fff;\n  border-color: white;\n  border-width: 0;\n  border-bottom-width: 4px;\n  border-bottom-color: #1899d6;\n  height: 50px;\n  width: 150px;\n  cursor: pointer;\n  text-transform: uppercase;\n  font-family: \"Nunito\";\n  font-size: 15px;\n  font-weight: 800;\n  letter-spacing: 0.8px;\n  border-radius: 15px;\n  padding: 0 20px;\n  display: flex;\n  text-decoration: none;\n  justify-content: center;\n  align-items: center;\n  transition: filter 0.2s;\n`;\n\nconst StayButton = styled(\"button\")`\n  border: 0 solid transparent;\n  background-color: #fff;\n  color: #afafaf;\n  border-color: #e5e5e5;\n  border-width: 2px;\n  border-bottom-width: 4px;\n  border-bottom-color: #e5e5e5;\n  height: 50px;\n  width: 150px;\n  cursor: pointer;\n  text-transform: uppercase;\n  font-family: \"Nunito\";\n  font-size: 15px;\n  font-weight: 800;\n  letter-spacing: 0.8px;\n  border-radius: 15px;\n  padding: 0 20px;\n  display: block;\n  -webkit-transition: filter 0.2s;\n  transition: filter 0.2s;\n`;\n\nexport { Wrapper, Inner, Grid, Title, Description, QuitButton, StayButton };\n", "import { useSkill } from \"../..\";\nimport {\n  Description,\n  Grid,\n  Inner,\n  QuitButton,\n  StayButton,\n  Title,\n  Wrapper,\n} from \"./lib\";\n\nexport default function AreYouSureBlock() {\n  const { resetStatus } = useSkill();\n  return (\n    <Wrapper>\n      <Inner>\n        <Grid>\n          <Title>Are you sure you want to quit?</Title>\n          <Description>All progress in this session will be lost.</Description>\n          <div style={{ marginRight: \"-12px\", gridArea: \"dismiss\" }}>\n            <StayButton onClick={() => resetStatus()}>Stay</StayButton>\n          </div>\n\n          <div style={{ marginRight: \"-12px\", gridArea: \"quit\" }}>\n            <QuitButton to=\"/\">Quit</QuitButton>\n          </div>\n        </Grid>\n      </Inner>\n    </Wrapper>\n  );\n}\n", "import AreYouSureBlock from \"./AreYouSureBlock\";\n\nexport default AreYouSureBlock;\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// in production we'll have a single connection to the DB.\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  prisma = global.__db__;\n  prisma.$connect();\n}\n\nexport { prisma };\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    maxAge: 0,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(request: Request): Promise<string | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request): Promise<null | User> {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n): Promise<string> {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: 60 * 60 * 24 * 7, // 7 days\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import type { User, WeeklyActivity } from \"@prisma/client\";\nimport bcrypt from \"bcryptjs\";\n\nimport { prisma } from \"~/db.server\";\nimport { getUser } from \"~/session.server\";\nimport { getCurrentWeek, getTodayDate, getWeekDay } from \"~/utils\";\nimport { createInitialLanguage, whenLastPractice } from \"./language.server\";\n\nexport type { User } from \"@prisma/client\";\n\nconst emptyWeek = {\n  Sun: 0,\n  Mon: 0,\n  Tue: 0,\n  Wed: 0,\n  Thu: 0,\n  Fri: 0,\n  Sat: 0,\n};\n\nexport async function createUser(username: User[\"username\"], password: string) {\n  const passwordHash = await bcrypt.hash(password, 10);\n\n  const user = await prisma.user.create({\n    data: {\n      username,\n      passwordHash,\n      streak: 0,\n      wasToday: false,\n      weeklyActivity: {\n        ...emptyWeek,\n      },\n    },\n  });\n\n  await createInitialLanguage(user.id);\n\n  return user;\n}\n\nexport async function updateUserStreak(\n  id: User[\"id\"],\n  wasToday: boolean,\n  streak: number\n) {\n  return prisma.user.update({\n    where: { id },\n    data: { wasToday, streak },\n  });\n}\n\nexport async function getUserById(id: User[\"id\"]) {\n  return prisma.user.findUnique({ where: { id } });\n}\n\nexport async function getUserByUsername(username: User[\"username\"]) {\n  return prisma.user.findUnique({ where: { username } });\n}\n\nexport async function deleteUserByUsername(username: User[\"username\"]) {\n  return prisma.user.delete({ where: { username } });\n}\n\nexport async function verifyLogin(\n  username: User[\"username\"],\n  password: string\n) {\n  const userWithPassword = await prisma.user.findUnique({\n    where: { username },\n  });\n\n  if (!userWithPassword || !userWithPassword.passwordHash) {\n    return null;\n  }\n\n  const isValid = await bcrypt.compare(password, userWithPassword.passwordHash);\n\n  if (!isValid) {\n    return null;\n  }\n\n  const { passwordHash: _password, ...userWithoutPassword } = userWithPassword;\n\n  return userWithoutPassword;\n}\n\nexport async function increaseTodayExp(request: Request, value: number) {\n  const today = getWeekDay() as keyof WeeklyActivity;\n  let user = await getUser(request);\n  if (!user) throw new Error(\"User is undefined\");\n\n  if (!user.wasToday) {\n    user = await updateUserStreak(user.id, true, user.streak + 1);\n  }\n\n  return await prisma.user.update({\n    where: { id: user.id },\n    data: {\n      weeklyActivity: {\n        ...user.weeklyActivity,\n        [today]: user.weeklyActivity[today] + value,\n      },\n    },\n  });\n}\n\nexport async function resetTodayActivity(request: Request) {\n  const user = await getUser(request);\n  if (!user) throw new Error(\"User is undefined\");\n\n  return await prisma.user.update({\n    where: { id: user.id },\n    data: {\n      weeklyActivity: {\n        ...user.weeklyActivity,\n        [`${getWeekDay()}`]: 0,\n      },\n    },\n  });\n}\n\nexport async function resetMultipleActivity(\n  request: Request,\n  lastPracticed: number\n) {\n  const today = getTodayDate();\n  const user = await getUser(request);\n  if (!user) throw new Error(\"User is undefined\");\n\n  const currentWeek = getCurrentWeek();\n  const newWeek = user.weeklyActivity;\n  let i = today - lastPracticed;\n\n  if (i > 6) {\n    return await prisma.user.update({\n      where: { id: user.id },\n      data: {\n        weeklyActivity: {\n          ...emptyWeek,\n        },\n      },\n    });\n  }\n\n  currentWeek.forEach((day, index) => {\n    if (i > 0 && index === 7 - i) {\n      newWeek[day as keyof WeeklyActivity] = 0;\n      i -= 1;\n    }\n  });\n\n  return await prisma.user.update({\n    where: { id: user.id },\n    data: {\n      weeklyActivity: {\n        ...newWeek,\n      },\n    },\n  });\n}\n\nexport async function getLastActivity(request: Request) {\n  const today = getTodayDate();\n  const lastPracticed = await whenLastPractice(request);\n\n  if (today - lastPracticed > 0) {\n    await resetMultipleActivity(request, lastPracticed);\n    return lastPracticed;\n  }\n\n  return today;\n}\n\nexport async function getTodayTotalXP(request: Request) {\n  const today = getWeekDay() as keyof WeeklyActivity;\n  let user = await getUser(request);\n  if (!user) throw new Error(\"User is undefined\");\n\n  const data = await prisma.user.findUnique({\n    where: { id: user.id },\n    select: {\n      weeklyActivity: true,\n    },\n  });\n\n  if (!data) throw new Error(\"No weekly activity was found in getTodayTotalXP\");\n\n  return data.weeklyActivity[today];\n}\n", "import type { Language } from \"@prisma/client\";\nimport { prisma } from \"~/db.server\";\nimport { getUserId, logout } from \"~/session.server\";\n\nexport type { Language } from \"@prisma/client\";\n\nexport async function createInitialLanguage(userId: string) {\n  return await prisma.language.create({\n    data: { userId, active: true, title: \"MyFirstLanguage\" },\n  });\n}\n\nexport async function createNewLanguage(\n  request: Request,\n  title: Language[\"title\"]\n) {\n  const userId = await getUserId(request);\n  if (typeof userId !== \"string\") {\n    return null;\n  }\n\n  await deactiveAllUserLanguages(userId);\n\n  const language = await prisma.language.create({\n    data: { userId, title, active: true },\n  });\n\n  return language;\n}\n\nasync function deactiveAllUserLanguages(userId: Language[\"userId\"]) {\n  const languages = await prisma.language.updateMany({\n    where: {\n      userId,\n    },\n    data: {\n      active: false,\n    },\n  });\n\n  return languages;\n}\n\nexport async function setActiveLanguage(id: string) {\n  const language = await prisma.language.findUnique({\n    where: { id },\n  });\n\n  if (language) {\n    await deactiveAllUserLanguages(language.userId);\n  }\n\n  await prisma.language.update({\n    where: {\n      id,\n    },\n    data: {\n      active: true,\n    },\n  });\n\n  return language;\n}\n\nexport async function getActiveLanguage(request: Request) {\n  const userId = await getUserId(request);\n  if (typeof userId !== \"string\") {\n    return null;\n  }\n\n  try {\n    const language = await prisma.language.findFirst({\n      where: { userId, active: true },\n    });\n    return language;\n  } catch {\n    throw logout(request);\n  }\n}\n\nexport async function getLanguages(request: Request) {\n  const userId = await getUserId(request);\n  if (typeof userId !== \"string\") {\n    return null;\n  }\n\n  try {\n    const languages = await prisma.language.findMany({\n      where: { userId },\n    });\n    return languages;\n  } catch {\n    throw logout(request);\n  }\n}\n\nexport async function whenLastPractice(request: Request) {\n  const languages = (await getLanguages(request)) as Language[];\n  const lastUpdatedSkill = await prisma.skill.findFirst({\n    where: {\n      languageId: { in: languages.map(({ id }) => id) },\n    },\n    select: { updatedAt: true },\n    orderBy: { updatedAt: \"desc\" },\n  });\n  if (!lastUpdatedSkill) {\n    return 0;\n  }\n  return lastUpdatedSkill.updatedAt as number;\n}\n", "import { Skill } from \"@prisma/client\";\nimport { prisma } from \"~/db.server\";\nimport { getTodayDate } from \"~/utils\";\n\nexport async function createSkill(data: Skill) {\n  return await prisma.skill.create({ data });\n}\n\nexport async function getSkills(languageId: string) {\n  return await prisma.skill.findMany({\n    take: 20,\n    where: { languageId: languageId },\n    select: {\n      id: true,\n      title: true,\n      // createdAt: true,\n      lessonsAmount: true,\n      currentLesson: true,\n      lineNumber: true,\n    },\n    orderBy: { createdAt: \"desc\" },\n  });\n}\n\nexport async function updateCurrentChapter(skill: Skill) {\n  const { currentLesson, lessonsAmount, id } = skill;\n  const today = getTodayDate();\n\n  return await prisma.skill.update({\n    where: {\n      id,\n    },\n    data: {\n      currentLesson:\n        lessonsAmount !== currentLesson ? currentLesson + 1 : currentLesson,\n      updatedAt: today,\n    },\n  });\n}\n\nexport async function checkTitleUnique(languageId: string, title: string) {\n  const skills = await prisma.skill.findMany({ where: { languageId } });\n  return !!skills.find((skill) => skill.title === title);\n}\n\nexport async function getLastAddedSkill(languageId: string) {\n  const lastAddedSkill = await prisma.skill.findFirst({\n    where: { languageId },\n    orderBy: { createdAt: \"desc\" },\n    select: {\n      lineNumber: true,\n      currentLesson: true,\n      lessonsAmount: true,\n      title: true,\n      id: true,\n    },\n  });\n\n  return lastAddedSkill;\n}\n\nexport async function getLastAddedSkills(languageId: string) {\n  const lastAddedSkill = await prisma.skill.findFirst({\n    where: { languageId },\n    orderBy: { createdAt: \"desc\" },\n    select: {\n      lineNumber: true,\n      currentLesson: true,\n      lessonsAmount: true,\n      title: true,\n      id: true,\n    },\n  });\n  return await prisma.skill.findMany({\n    where: { languageId, lineNumber: lastAddedSkill?.lineNumber },\n  });\n}\n\nexport async function deleteSkillById(id: string) {\n  return await prisma.skill.delete({ where: { id } });\n}\n\nexport async function getSkillByTitle(title: string, languageId: string) {\n  return await prisma.skill.findFirst({ where: { title, languageId } });\n}\n", "import { Step as StepType, Skill } from \"@prisma/client\";\nimport { prisma } from \"~/db.server\";\nimport { Step } from \"~/modules/Skill/types\";\nimport { getSkillByTitle } from \"./skill.server\";\n\nfunction getSteps(steps: StepType[]): Step[] {\n  return steps.map(({ createdAt, updatedAt, ...rest }) => ({\n    ...rest,\n    difficulty: null,\n  }));\n}\n\nexport async function createSteps(data: StepType[]) {\n  const batch = await prisma.step.createMany({ data });\n  const IDs = await prisma.step.findMany({\n    select: { id: true },\n    orderBy: { createdAt: \"desc\" },\n    take: batch.count,\n  });\n\n  return IDs.map((idItem) => idItem.id);\n}\n\nexport async function deleteLessonsFromSkill(skillId: string) {\n  const skill = await prisma.skill.findUnique({ where: { id: skillId } });\n  return await prisma.step.deleteMany({\n    where: { id: { in: skill?.stepIDs } },\n  });\n}\n\nexport async function getLessonsBySkillId(id: string) {\n  const skill = (await prisma.skill.findUnique({ where: { id } })) as Skill;\n  return await prisma.step.findMany({\n    where: { id: { in: skill.stepIDs } },\n  });\n}\n\nexport async function getStepsForPracticing(activeLanguageId: string) {\n  const steps = await prisma.step.findMany({\n    where: { languageId: activeLanguageId },\n    orderBy: { createdAt: \"desc\" },\n    take: 10,\n  });\n\n  return getSteps(steps);\n}\n\nexport async function getStepsForChapter(\n  skillTitle: string,\n  chapter: number,\n  languageId: string\n) {\n  const skill = await getSkillByTitle(skillTitle, languageId);\n\n  if (!skill) {\n    throw new Error(\"Skill is not found\");\n  }\n\n  const steps = await prisma.step.findMany({\n    where: { id: { in: skill.stepIDs } },\n  });\n\n  return getSteps(steps);\n}\n\nexport async function getStepsForPracticingSkill(\n  skillTitle: string,\n  languageId: string\n) {\n  const skill = await getSkillByTitle(skillTitle, languageId);\n\n  if (!skill) {\n    throw new Error(\"Skill is not found\");\n  }\n\n  const steps = await prisma.step.findMany({\n    where: { id: { in: skill.stepIDs } },\n  });\n\n  return getSteps(steps);\n}\n", "import Lesson from \"~/modules/Skill\";\nimport { getActiveLanguage } from \"~/models/language.server\";\nimport { getTodayTotalXP, increaseTodayExp } from \"~/models/user.server\";\nimport { getSkillByTitle, updateCurrentChapter } from \"~/models/skill.server\";\nimport {\n  useCatch,\n  useLoaderData,\n  useParams,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { ErrorMessage } from \"~/components/lib\";\nimport { getStepsForPracticingSkill } from \"~/models/lesson.server\";\n\nexport const action = async ({ request, params }: ActionArgs) => {\n  const activeLanguage = await getActiveLanguage(request);\n\n  if (!activeLanguage) {\n    throw new Error(\"No active language found\");\n  }\n\n  const form = await request.formData();\n  const expData = Number(form.get(\"exp\"));\n  const title = params.title as string;\n\n  const skill = await getSkillByTitle(title, activeLanguage.id);\n\n  if (!skill) {\n    throw new Error(`Skill with this title: ${title} is underfined`);\n  }\n\n  await updateCurrentChapter(skill);\n\n  await increaseTodayExp(request, expData);\n\n  return redirect(`/${activeLanguage?.title}/skills`);\n};\n\nexport const loader = async ({ request, params }: LoaderArgs) => {\n  const activeLanguage = await getActiveLanguage(request);\n\n  if (!activeLanguage) {\n    throw new Error(\"No active language found\");\n  }\n\n  const title = params.title as string;\n\n  const skill = await getSkillByTitle(title, activeLanguage.id);\n\n  if (!skill) {\n    throw new Response(\"Skill is not found\", { status: 404 });\n  }\n\n  const steps = await getStepsForPracticingSkill(\n    skill.title,\n    activeLanguage.id\n  );\n\n  const totalXP = await getTodayTotalXP(request);\n\n  return json({ steps, totalXP });\n};\n\nexport default function LessonScreen() {\n  const { steps, totalXP } = useLoaderData<typeof loader>();\n\n  return <Lesson steps={steps} totalXP={totalXP} />;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <ErrorMessage>{caught.statusText}</ErrorMessage>;\n  }\n}\n\nexport function ErrorBoundary() {\n  const { title } = useParams();\n  return (\n    <div className=\"error-container\">{`There was an error loading skill by the title ${title}. Sorry.`}</div>\n  );\n}\n", "import { json, redirect, Response } from \"@remix-run/node\";\nimport type { LoaderArgs } from \"@remix-run/node\";\nimport { Outlet, useCatch, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { ErrorMessage, Main, Overlay } from \"~/components/lib\";\nimport Menu from \"~/components/Menu\";\nimport {\n  createNewLanguage,\n  getLanguages,\n  setActiveLanguage,\n} from \"~/models/language.server\";\nimport { getLastActivity, updateUserStreak } from \"~/models/user.server\";\nimport { getUser } from \"~/session.server\";\nimport styles from \"~/styles/index.css\";\nimport { getTodayDate } from \"~/utils\";\n\nexport const links = () => {\n  return [{ rel: \"stylesheet\", href: styles }];\n};\n\nexport async function action({ request }: { request: Request }) {\n  const form = await request.formData();\n  const id = form.get(\"id\") as string;\n  const newLanguage = form.get(\"newLanguage\") as string;\n  let project;\n  if (newLanguage?.length > 0) {\n    project = await createNewLanguage(request, newLanguage);\n  } else {\n    project = await setActiveLanguage(id);\n  }\n\n  return redirect(`/${project?.title}/skills`);\n}\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  let user = await getUser(request);\n\n  if (!user) {\n    return redirect(\"/login\");\n  }\n\n  const userData = { streak: user.streak, wasToday: user.wasToday };\n  const languages = await getLanguages(request);\n\n  if (!languages) {\n    throw new Response(\"No languages were found\", { status: 404 });\n  }\n\n  const activeLanguage = languages.find((item) => item.active);\n  const today = getTodayDate();\n\n  if (!activeLanguage) {\n    throw new Response(`Active language wasn't found`, { status: 404 });\n  }\n\n  // Check if we just on language page (doesn't exist), then we automatically redirect to skills list\n  const onLanguagePage = request.url.split(\"/\").at(-1) === activeLanguage.title;\n  if (onLanguagePage) {\n    return redirect(`/${activeLanguage.title}/skills`);\n  }\n\n  const lastActive = await getLastActivity(request);\n  if (today - lastActive > 1 || lastActive === 0) {\n    user = await updateUserStreak(user.id, false, 0);\n    return json({ userData, languages });\n  }\n\n  if (today - lastActive === 1) {\n    user = await updateUserStreak(user.id, false, user.streak);\n    return json({ userData, languages });\n  }\n\n  if (!user.wasToday && lastActive === today) {\n    user = await updateUserStreak(user.id, true, user.streak + 1);\n    return json({ userData, languages });\n  }\n\n  if (user.wasToday) {\n    return json({ userData, languages });\n  }\n\n  return json({ userData, languages });\n};\n\nexport default function LanguagePage() {\n  const { userData, languages } = useLoaderData<typeof loader>();\n  const [isOverlay, setIsOverlay] = useState(false);\n  return (\n    <>\n      <Menu\n        userData={userData}\n        languages={languages}\n        onOverlay={setIsOverlay}\n      />\n      <Main>\n        <Outlet />\n      </Main>\n      <Overlay active={isOverlay} />\n    </>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <ErrorMessage>{caught.statusText}</ErrorMessage>;\n  }\n\n  return new Error(\"Something went wrong in language route\");\n}\n", "import { useState } from \"react\";\nimport { Form } from \"@remix-run/react\";\nimport {\n  ActiveLanguageButton,\n  ActiveLanguageContainer,\n  LanguagesItem,\n  LanguagesInput,\n  LanguagesContainer,\n  LanguagesList,\n  LanguagesAddBtn,\n} from \"./lib\";\nimport { Language } from \"@prisma/client\";\n\nexport default function Projects({\n  onOverlay,\n  languages,\n}: {\n  onOverlay: Function;\n  languages: Language[];\n}) {\n  const [showWindow, setShowWindow] = useState(false);\n  const [isNewLanguage, setIsNewLanguage] = useState(false);\n\n  const activeLanguage = languages?.find((item) => item.active);\n\n  function showModal() {\n    onOverlay(true);\n    setShowWindow(true);\n  }\n\n  function hideModal() {\n    onOverlay(false);\n    setShowWindow(false);\n  }\n\n  return (\n    <>\n      <ActiveLanguageButton\n        type=\"button\"\n        onMouseEnter={showModal}\n        onMouseLeave={hideModal}\n      >\n        {activeLanguage?.title}\n      </ActiveLanguageButton>\n\n      <ActiveLanguageContainer\n        onMouseEnter={showModal}\n        onMouseLeave={hideModal}\n      >\n        {showWindow && (\n          <LanguagesContainer>\n            <LanguagesList>\n              {languages?.map((item, idx: number) => (\n                <li\n                  key={idx}\n                  style={{\n                    backgroundColor: item.active\n                      ? \"rgb(221, 244, 255)\"\n                      : \"inherit\",\n                    order: item.active ? 0 : 1,\n                    borderRadius: item.active ? \"10px 10px 0 0\" : 0,\n                  }}\n                >\n                  <Form method=\"post\">\n                    <input type=\"hidden\" name=\"id\" value={item.id} readOnly />\n                    <LanguagesItem type=\"submit\">{item.title}</LanguagesItem>\n                  </Form>\n                </li>\n              ))}\n            </LanguagesList>\n            <fieldset style={{ position: \"relative\" }}>\n              {isNewLanguage ? (\n                <Form method=\"post\">\n                  <LanguagesInput\n                    type=\"text\"\n                    placeholder=\"Enter title\"\n                    name=\"newLanguage\"\n                    onChange={showModal}\n                    autoComplete=\"off\"\n                    required\n                  />\n                  <LanguagesAddBtn>+</LanguagesAddBtn>\n                </Form>\n              ) : (\n                <LanguagesItem\n                  type=\"button\"\n                  onClick={() => setIsNewLanguage(true)}\n                  style={{\n                    color: \"rgb(175, 175, 175)\",\n                    fontSize: 14,\n                    padding: \"13px 20px\",\n                    borderBottom: \"none\",\n                  }}\n                >\n                  Add a new course\n                </LanguagesItem>\n              )}\n            </fieldset>\n          </LanguagesContainer>\n        )}\n      </ActiveLanguageContainer>\n    </>\n  );\n}\n", "import {\n  HorizontalList,\n  ListItem,\n  Logout,\n  MenuContainer,\n  MenuNavLink,\n  NavIcon,\n} from \"./lib\";\nimport study from \"~/styles/study.svg\";\nimport shop from \"~/styles/shop.svg\";\nimport studyActive from \"~/styles/study-active.svg\";\nimport streak from \"~/styles/streak.svg\";\nimport streakActive from \"~/styles/streak-active.svg\";\nimport shopActive from \"~/styles/shop-active.svg\";\nimport Projects from \"./Projects\";\nimport { Language, User } from \"@prisma/client\";\n\nconst MENU = [\n  {\n    title: \"Study\",\n    link: \"skills\",\n    icon: study,\n    activeIcon: studyActive,\n  },\n  {\n    title: \"constructor\",\n    link: \"constructor/new\",\n    icon: shop,\n    activeIcon: shopActive,\n  },\n];\n\ntype UserData = Pick<User, \"streak\" | \"wasToday\">;\n\nconst Menu = ({\n  userData,\n  languages,\n  onOverlay,\n}: {\n  userData: UserData;\n  languages: Language[];\n  onOverlay: Function;\n}) => {\n  return (\n    <MenuContainer>\n      <nav style={{ width: \"35%\" }}>\n        <HorizontalList>\n          {MENU.map(({ title, icon, activeIcon, link }) => (\n            <ListItem key={title}>\n              <MenuNavLink\n                to={`${link}`}\n                className=\"nav-link\"\n                prefetch=\"render\"\n              >\n                {({ isActive }) => (\n                  <>\n                    <NavIcon src={isActive ? activeIcon : icon} alt={title} />\n                    {title}\n                  </>\n                )}\n              </MenuNavLink>\n            </ListItem>\n          ))}\n        </HorizontalList>\n      </nav>\n      <HorizontalList>\n        <ListItem>\n          <Projects languages={languages} onOverlay={onOverlay} />\n        </ListItem>\n        <ListItem>\n          <img\n            src={userData.wasToday ? streakActive : streak}\n            alt=\"streak\"\n            width={25}\n            height={30}\n            style={{ marginRight: 6 }}\n          />\n          <b\n            style={{\n              fontFamily: \"Nunito\",\n              color: userData.wasToday ? \"#ff9600\" : \"#e5e5e5\",\n            }}\n          >\n            {userData.streak}\n          </b>\n        </ListItem>\n        <ListItem>\n          <form action=\"/logout\" method=\"post\">\n            <Logout type=\"submit\">Logout</Logout>\n          </form>\n        </ListItem>\n      </HorizontalList>\n    </MenuContainer>\n  );\n};\n\nexport default Menu;\n", "import { useActionData, useLoaderData } from \"@remix-run/react\";\nimport { json, redirect, Response } from \"@remix-run/node\";\nimport type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { prisma } from \"~/db.server\";\nimport Constructor from \"~/modules/Constructor\";\nimport { Language, Step, Skill } from \"@prisma/client\";\nimport {\n  createSteps,\n  deleteLessonsFromSkill,\n  getLessonsBySkillId,\n} from \"~/models/lesson.server\";\nimport { ActionData } from \"./new\";\nimport {\n  checkTitleUnique,\n  getLastAddedSkill,\n  getLastAddedSkills,\n} from \"~/models/skill.server\";\nimport { getActiveLanguage } from \"~/models/language.server\";\nimport { getTodayDate } from \"~/utils\";\n\nexport const action = async ({ request, params }: ActionArgs) => {\n  const form = await request.formData();\n  const title = form.get(\"title\") as string;\n  const activeLanguage = (await getActiveLanguage(request)) as Language;\n  const stepChapters = form.getAll(\"chapter\") as string[];\n  const skill = (await prisma.skill.findUnique({\n    where: { id: params.skillId },\n  })) as Skill;\n\n  if (title !== skill.title) {\n    const isTitleUnique = await checkTitleUnique(activeLanguage.id, title);\n\n    if (isTitleUnique) {\n      return json<ActionData>(\n        {\n          errors: { title: \"Title isn't unique\" },\n        },\n        { status: 400 }\n      );\n    }\n  }\n\n  // const lessons = form.getAll(\"step\").map((item, index) => {\n  //   const stepType = form.get(`type${index}`);\n  //   let answer: string | string[] = form.get(`answer${index}`) as string;\n  //   const returnData = {\n  //     stepType,\n  //     number: index,\n  //     chapter: Number(stepChapters[index]),\n  //     languageId: activeLanguage.id,\n  //   };\n  //   switch (stepType) {\n  //     case \"Question\": {\n  //       const question = form.get(`question${index}`);\n  //       const keywords = form.get(`keywords${index}`) as string;\n  //       answer = answer.trim().split(\" \");\n  //       return {\n  //         ...returnData,\n  //         question,\n  //         answer,\n  //         keywords: keywords ? keywords.split(\",\") : [],\n  //       };\n  //     }\n  //     case \"Insert\": {\n  //       const text = form.get(`text${index}`) as string;\n  //       const isToChoose = !!form.get(`isToChoose${index}`);\n  //       const variantValues = form.getAll(`variant${index}`);\n  //       const variants = variantValues.map((value, idx) => ({\n  //         idx,\n  //         value,\n  //         isFocused: false,\n  //       }));\n  //       answer = answer\n  //         .trim()\n  //         .split(\",\")\n  //         .sort((a, b) => a - b);\n  //       return {\n  //         ...returnData,\n  //         answer,\n  //         text: text.trim(),\n  //         isToChoose: variants.length === 0 ? isToChoose : false,\n  //         variants,\n  //       };\n  //     }\n  //     case \"Variants\": {\n  //       const question = form.get(`question${index}`);\n  //       const variants = form.getAll(`variant${index}`);\n  //       return {\n  //         ...returnData,\n  //         answer,\n  //         question,\n  //         variants: variants.map((variant, idx) => ({\n  //           value: variant,\n  //           idx: idx + 1,\n  //           isFocused: false,\n  //         })),\n  //       };\n  //     }\n  //     case \"Pairs\": {\n  //       const variants = form.getAll(`variant${index}`) as string[];\n  //       return {\n  //         ...returnData,\n  //         // answer: answer[0].split(\",\"),\n  //         answer: answer.split(\",\"),\n  //         variants: variants.map((variant, idx) => ({\n  //           value: variant,\n  //           isFocused: false,\n  //           isConnected: true,\n  //           idx: idx + 1,\n  //         })),\n  //       };\n  //     }\n  //     default: {\n  //       return { ...returnData, answer };\n  //     }\n  //   }\n  // }) as Step[];\n\n  // const lessons = [];\n\n  // await deleteLessonsFromSkill(params.skillId as string);\n\n  // const createdLessonsIDs = await createSteps(lessons);\n  // const data = {\n  //   title,\n  //   lessonIDs: createdLessonsIDs,\n  //   chapters: Number(stepChapters[stepChapters.length - 1]),\n  //   currentChapter: 0,\n  //   level: 0,\n  //   languageId: activeLanguage?.id,\n  //   updatedAt: getTodayDate(),\n  // };\n\n  // await prisma.skill.update({\n  //   where: { id: params.skillId },\n  //   data: { ...data },\n  // });\n\n  // return redirect(`/`);\n};\n\nexport const loader = async ({ request, params }: LoaderArgs) => {\n  const skill = await prisma.skill.findUnique({\n    where: { id: params.skillId },\n  });\n\n  if (!skill) {\n    throw new Response(\"Skill is not found\", { status: 404 });\n  }\n\n  const activeLanguage = (await getActiveLanguage(request)) as Language;\n  const lastAddedSkills = await getLastAddedSkills(activeLanguage.id);\n\n  const lessons = await getLessonsBySkillId(skill.id);\n  const data = {\n    title: skill.title,\n    steps: lessons,\n    lineNumber: skill.lineNumber,\n  };\n\n  return { data, lastAddedSkills };\n};\n\nexport default function ConstructorEdit() {\n  const actionData = useActionData() as ActionData;\n  const { data, lastAddedSkills } = useLoaderData();\n\n  return (\n    <Constructor\n      data={data}\n      lastAddedSkills={lastAddedSkills}\n      actionData={actionData}\n    />\n  );\n}\n", "import { createContext, Fragment, useContext, useEffect } from \"react\";\nimport SkillInfo from \"./components/SkillInfo\";\nimport { initialContext, useConstructorReducer } from \"./Levels/reducer\";\nimport { ConstructorForm, ConstructorFormInner } from \"./components/lib\";\nimport Levels from \"./Levels\";\nimport Sidebar from \"./Levels/components/Sidebar\";\nimport { ActionData } from \"~/routes/$language/constructor/new\";\nimport { ConstructorData } from \"./Levels/types\";\nimport { Skill } from \"@prisma/client\";\n\nconst ConstructorContext = createContext(initialContext);\nConstructorContext.displayName = \"ConstructorContext\";\n\nexport const useConstructor = () => {\n  const state = useContext(ConstructorContext);\n  if (state === undefined) {\n    throw new Error(\"useConstructor must be used within a <Constructor />\");\n  }\n  return state;\n};\n\nexport default function Constructor({\n  data,\n  actionData,\n  lastAddedSkills,\n}: {\n  lastAddedSkills?: Skill[];\n  data?: ConstructorData;\n  actionData: ActionData;\n}) {\n  const state = useConstructorReducer();\n  const { currentScreen, setup, changeCurrentScreen } = state;\n\n  useEffect(() => {\n    if (data) {\n      setup(data.steps);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (actionData?.errors?.title && currentScreen !== \"Skill\") {\n      changeCurrentScreen(\"Skill\");\n    }\n  }, [actionData]);\n\n  return (\n    <ConstructorContext.Provider value={state}>\n      <ConstructorForm method=\"post\" autoComplete=\"off\">\n        <ConstructorFormInner>\n          <SkillInfo\n            title={data?.title}\n            actionData={actionData}\n            lastAddedSkills={lastAddedSkills}\n          />\n          <Levels />\n        </ConstructorFormInner>\n        <Sidebar />\n      </ConstructorForm>\n    </ConstructorContext.Provider>\n  );\n}\n", "import { Skill } from \"@prisma/client\";\nimport { useEffect, useState } from \"react\";\nimport {\n  ErrorMessage,\n  Legend,\n  LessonBlock,\n  LessonProgress,\n  LessonProgressInner,\n  LessonsBlock,\n  LessonsContainer,\n  LessonTitle,\n} from \"~/components/lib\";\nimport { ActionData } from \"~/routes/$language/constructor/new\";\nimport { useConstructor } from \"..\";\n\nimport { LessonTitleInput, ScreenContainer } from \"./lib\";\n\nexport default function SkillInfo({\n  title = \"\",\n  actionData,\n  lastAddedSkills = [],\n}: {\n  lastAddedSkills?: Skill[];\n  title: string | undefined;\n  actionData: ActionData;\n}) {\n  const { setBasicInfoReady, currentScreen } = useConstructor();\n  const [skillTitle, setSkillTitle] = useState(\"\");\n  const [lineNumber, setLineNumber] = useState(0);\n  useEffect(() => {\n    if (title) {\n      setSkillTitle(title);\n    }\n  }, []);\n  useEffect(() => {\n    setBasicInfoReady(!!skillTitle.length);\n  }, [skillTitle]);\n\n  return (\n    <ScreenContainer screen={currentScreen} target=\"Skill\">\n      <input type=\"hidden\" name=\"formType\" value=\"repeat\" />\n      <input type=\"hidden\" name=\"lineNumber\" value={lineNumber} />\n\n      <Legend>Skill info</Legend>\n      <LessonProgress exp={0} style={{ margin: \"40px auto 0 auto\" }} />\n      <LessonTitleInput\n        type=\"text\"\n        name=\"title\"\n        placeholder=\"Enter skill title\"\n        value={skillTitle}\n        onChange={(e) => setSkillTitle(e.target.value)}\n        required\n        autoFocus={true}\n      />\n      {actionData?.errors?.title && (\n        <ErrorMessage role=\"alert\" id=\"title-error\">\n          {actionData.errors.title}\n        </ErrorMessage>\n      )}\n\n      {lastAddedSkills?.length > 0 && (\n        <div style={{ width: \"100%\", maxWidth: \"440px\", margin: \"0 auto\" }}>\n          <h2 style={{ marginTop: 60 }}>Position</h2>\n          <LessonsBlock>\n            {lastAddedSkills.map((lastAdded: Skill) => (\n              <LessonsContainer key={lastAdded.id}>\n                <LessonBlock>\n                  <button type=\"button\" aria-labelledby={lastAdded.title}>\n                    <LessonProgress\n                      exp={\n                        (lastAdded.currentLesson / lastAdded.lessonsAmount) *\n                        100\n                      }\n                    >\n                      <LessonProgressInner />\n                    </LessonProgress>\n                    <LessonTitle>{lastAdded.title}</LessonTitle>\n                  </button>\n                </LessonBlock>\n              </LessonsContainer>\n            ))}\n            {lastAddedSkills.length < 3 && (\n              <LessonsContainer key={\"312dsdf\"}>\n                <LessonBlock>\n                  <button\n                    type=\"button\"\n                    aria-labelledby={\"121\"}\n                    onClick={() => setLineNumber(lastAddedSkills[0].lineNumber)}\n                  >\n                    <LessonProgress exp={0} style={{ fontSize: \"39px\" }}>\n                      {lastAddedSkills[0].lineNumber === lineNumber ? (\n                        <LessonProgressInner />\n                      ) : (\n                        \"+\"\n                      )}\n                    </LessonProgress>\n                    <LessonTitle>\n                      {skillTitle.length ? skillTitle : \"Skill title\"}\n                    </LessonTitle>\n                  </button>\n                </LessonBlock>\n              </LessonsContainer>\n            )}\n          </LessonsBlock>\n          <LessonBlock>\n            <button\n              type=\"button\"\n              aria-labelledby={\"121\"}\n              onClick={() => setLineNumber(lastAddedSkills[0].lineNumber + 1)}\n            >\n              <LessonProgress exp={0} style={{ fontSize: \"39px\" }}>\n                {lastAddedSkills[0].lineNumber + 1 === lineNumber ? (\n                  <LessonProgressInner />\n                ) : (\n                  \"+\"\n                )}\n              </LessonProgress>\n              <LessonTitle>\n                {skillTitle.length ? skillTitle : \"Skill title\"}\n              </LessonTitle>\n            </button>\n          </LessonBlock>\n        </div>\n      )}\n    </ScreenContainer>\n  );\n}\n", "import { nanoid } from \"nanoid\";\nimport type { Step, State } from \"./types\";\n\nimport { useReducer } from \"react\";\n\nconst getBasicState = (): State => {\n  const lessonId = nanoid();\n  const step = createStep({ number: 0, parentLessonId: lessonId });\n  return {\n    lessons: [{ id: lessonId }],\n    currentScreen: \"Skill\",\n    steps: [step],\n    basicInfoReady: false,\n    stepsReady: false,\n    activeStepId: step.id,\n    activeLessonId: lessonId,\n  };\n};\n\nconst createStep = ({ number = 0, parentLessonId = \"qwerty\" }): Step => {\n  return {\n    // active: true,\n    // question: \"\",\n    id: nanoid(),\n    answer: \"\",\n    number,\n    // keywords: [],\n    stepType: \"\",\n    ready: false,\n    // text: \"\",\n    // variants: [],\n    parentLessonId,\n    options: {},\n  };\n};\n\nenum actionTypes {\n  setup = \"SETUP\",\n  setStepType = \"SET_STEP_TYPE\",\n  removeStep = \"REMOVE_STEP\",\n  removeStepType = \"REMOVE_STEP_TYPE\",\n  setStepActive = \"SET_STEP_ACTIVE\",\n  setQuestion = \"SET_QUESTION\",\n  setKeywords = \"SET_KEYWORDS\",\n  setAnswer = \"SET_ANSWER\",\n  addLesson = \"ADD_LESSON\",\n  addStep = \"ADD_STEP\",\n  setStepReady = \"SET_STEP_READY\",\n  changeCurrentScreen = \"CHANGE_CURRENT_SCREEN\",\n  setBasicInfoReady = \"SET_BASIC_INFO_READY\",\n  setStepsReady = \"SET_STEPS_READY\",\n  setLessonActive = \"SET_LESSON_ACTIVE\",\n}\n\ntype Action =\n  | { type: actionTypes.setup; steps: Step[] }\n  | { type: actionTypes.setStepType; payload: { stepType: string; id: string } }\n  | { type: actionTypes.removeStep }\n  | { type: actionTypes.removeStepType; id: string }\n  | { type: actionTypes.setStepActive; id: string }\n  | {\n      type: actionTypes.setQuestion;\n      payload: { question: string; number: number };\n    }\n  | {\n      type: actionTypes.setKeywords;\n      payload: { keywords: string[]; number: number };\n    }\n  | { type: actionTypes.addLesson }\n  | { type: actionTypes.addStep }\n  | {\n      type: actionTypes.setStepReady;\n      payload: { isReady: boolean; number: number };\n    }\n  | { type: actionTypes.setAnswer; payload: { answer: string; number: number } }\n  | { type: actionTypes.changeCurrentScreen; currentScreen: \"Skill\" | \"Steps\" }\n  | { type: actionTypes.setBasicInfoReady; isReady: boolean }\n  | { type: actionTypes.setStepsReady; isReady: boolean }\n  | { type: actionTypes.setLessonActive; id: string };\n\nexport const basicState = getBasicState();\n\nfunction constructorReducer(state: State, action: Action): State {\n  const { steps, lessons, activeStepId, activeLessonId } = state;\n  const { type } = action;\n\n  switch (type) {\n    case actionTypes.setup: {\n      const { steps } = action;\n      return {\n        ...state,\n        steps,\n      };\n    }\n    case actionTypes.setStepType: {\n      const { stepType, id } = action.payload;\n      const newSteps = steps.map((step: Step) =>\n        step.id === id ? { ...step, stepType: stepType } : { ...step }\n      );\n      return { ...state, steps: [...newSteps] };\n    }\n    case actionTypes.removeStepType: {\n      const { id } = action;\n      const newSteps = steps.map((step: Step) => {\n        if (step.id === id) {\n          return {\n            ...step,\n            stepType: \"\",\n            keywords: [],\n            answer: \"\",\n            ready: false,\n          };\n        } else {\n          return { ...step };\n        }\n      });\n      return { ...state, steps: [...newSteps] };\n    }\n    case actionTypes.setStepReady: {\n      const { isReady, number } = action.payload;\n      const newSteps = steps;\n      newSteps[number].ready = isReady;\n      return {\n        ...state,\n        steps: [...newSteps],\n      };\n    }\n    case actionTypes.setStepActive: {\n      const { id } = action;\n      const newSteps = steps.map((step) => {\n        if (step.id === id) {\n          return { ...step, active: true };\n        }\n        return { ...step, active: false };\n      });\n      return { ...state, steps: [...newSteps] };\n    }\n    case actionTypes.setQuestion: {\n      const { question, number } = action.payload;\n      let newSteps = steps;\n      newSteps[number].options.question = question;\n      return { ...state, steps: [...newSteps] };\n    }\n    case actionTypes.setAnswer: {\n      const { answer, number } = action.payload;\n      let newSteps = steps;\n      newSteps[number].answer = answer;\n      return { ...state, steps: [...newSteps] };\n    }\n    case actionTypes.setKeywords: {\n      let { keywords, number } = action.payload;\n      let newSteps = steps;\n      newSteps[number].options.keywords = keywords;\n      return { ...state, steps: [...newSteps] };\n    }\n    case actionTypes.addStep: {\n      // const { parentLessonId } = action;\n      const newStep = createStep({\n        number: steps.length,\n        parentLessonId: activeLessonId,\n      });\n      // const newSteps = steps.map((step) => ({ ...step }));\n      return {\n        ...state,\n        steps: [...steps, newStep],\n        activeStepId: newStep.id,\n      };\n    }\n    case actionTypes.removeStep: {\n      const newSteps = steps;\n      const removeIdx = newSteps.indexOf(\n        newSteps.find((step) => step.id === activeStepId) as Step\n      );\n      newSteps.splice(removeIdx, 1);\n      // const newSteps = steps\n      //   .filter((item: Step) => action.id !== item.id)\n      //   .map((item: Step, i: number) => ({ ...item, number: i }));\n      const lastStep = newSteps.at(-1) as Step;\n      return {\n        ...state,\n        steps: [...newSteps],\n        activeStepId: lastStep.id,\n      };\n    }\n    case actionTypes.addLesson: {\n      const lessonId = nanoid();\n      const newLesson = {\n        id: lessonId,\n      };\n      const newStep = createStep({\n        number: steps.length,\n        parentLessonId: lessonId,\n      });\n      const newSteps = steps.map((step) => ({ ...step, active: false }));\n      return {\n        ...state,\n        lessons: [...lessons, newLesson],\n        steps: [...newSteps, newStep],\n        activeLessonId: lessonId,\n        activeStepId: newStep.id,\n      };\n    }\n    case actionTypes.changeCurrentScreen: {\n      const { currentScreen } = action;\n      return { ...state, currentScreen };\n    }\n    case actionTypes.setLessonActive: {\n      const { id } = action;\n      return { ...state, activeLessonId: id };\n    }\n    case actionTypes.setBasicInfoReady: {\n      const { isReady } = action;\n      return { ...state, basicInfoReady: isReady };\n    }\n    case actionTypes.setStepsReady: {\n      const { isReady } = action;\n      return { ...state, stepsReady: isReady };\n    }\n    default:\n      throw new Error(`We don't know this action type: ${type}`);\n  }\n}\n\nfunction useConstructorReducer({\n  initialState = basicState,\n  reducer = constructorReducer,\n} = {}) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const setup = (steps: Step[]) => dispatch({ type: actionTypes.setup, steps });\n  const setStepType = (stepType: string, id: string) =>\n    dispatch({ type: actionTypes.setStepType, payload: { stepType, id } });\n  const removeStep = () => dispatch({ type: actionTypes.removeStep });\n  const removeStepType = (id: string) =>\n    dispatch({ type: actionTypes.removeStepType, id });\n  const setStepActive = (id: string) =>\n    dispatch({ type: actionTypes.setStepActive, id });\n  const setQuestion = (question: string, number: number) =>\n    dispatch({ type: actionTypes.setQuestion, payload: { question, number } });\n  const setKeywords = (keywords: string[], number: number) =>\n    dispatch({ type: actionTypes.setKeywords, payload: { keywords, number } });\n  const addLesson = () => dispatch({ type: actionTypes.addLesson });\n  const addStep = () => dispatch({ type: actionTypes.addStep });\n  const setStepReady = (isReady: boolean, number: number) =>\n    dispatch({ type: actionTypes.setStepReady, payload: { isReady, number } });\n  const setAnswer = (answer: string, number: number) =>\n    dispatch({ type: actionTypes.setAnswer, payload: { answer, number } });\n  const changeCurrentScreen = (currentScreen: \"Skill\" | \"Steps\") =>\n    dispatch({ type: actionTypes.changeCurrentScreen, currentScreen });\n  const setBasicInfoReady = (isReady: boolean) =>\n    dispatch({ type: actionTypes.setBasicInfoReady, isReady });\n  const setStepsReady = (isReady: boolean) =>\n    dispatch({ type: actionTypes.setStepsReady, isReady });\n  const setLessonActive = (id: string) =>\n    dispatch({ type: actionTypes.setLessonActive, id });\n\n  return {\n    ...state,\n    setStepType,\n    setup,\n    removeStep,\n    removeStepType,\n    setStepActive,\n    setQuestion,\n    setAnswer,\n    setKeywords,\n    addLesson,\n    addStep,\n    setStepReady,\n    changeCurrentScreen,\n    setBasicInfoReady,\n    setStepsReady,\n    setLessonActive,\n  };\n}\n\nconst initialContext = {\n  ...basicState,\n  setStepType: (stepType: string, id: string) => {},\n  setup: (steps: Step[]) => {},\n  removeStep: () => {},\n  removeStepType: (id: string) => {},\n  setStepActive: (id: string) => {},\n  setQuestion: (question: string, number: number) => {},\n  setAnswer: (answer: string | string[], number: number) => {},\n  setKeywords: (keywords: string[], number: number) => {},\n  addLesson: () => {},\n  addStep: () => {},\n  setStepReady: (isReady: boolean, number: number) => {},\n  changeCurrentScreen: (currentScreen: \"Skill\" | \"Steps\") => {},\n  setBasicInfoReady: (isReady: boolean) => {},\n  setStepsReady: (isReady: boolean) => {},\n  setLessonActive: (id: string) => {},\n};\n\nexport { useConstructorReducer, constructorReducer, initialContext };\n", "import { useEffect } from \"react\";\nimport type { Step as StepType } from \"./types\";\nimport Variants from \"./components/Variants\";\nimport MatchingPairs from \"./components/MatchingPairs\";\nimport InsertWords from \"./components/InsertWords\";\nimport { ScreenContainer } from \"../components/lib\";\nimport { useConstructor } from \"..\";\nimport Step from \"./components/Step\";\nimport QuestionAnswer from \"./components/QuestionAnswer\";\n\nexport default function Levels() {\n  const { steps, setStepsReady, currentScreen } = useConstructor();\n  useEffect(() => {\n    setStepsReady(!steps.find((step: StepType) => step.ready === false));\n  }, [steps]);\n\n  return (\n    <ScreenContainer screen={currentScreen} target=\"Steps\">\n      {steps.map((data: StepType, idx: number) => (\n        <Step data={data} index={idx} key={data.id}>\n          {data.stepType === \"Question\" ? <QuestionAnswer /> : null}\n          {data.stepType === \"Insert\" ? <InsertWords /> : null}\n          {data.stepType === \"Variants\" ? <Variants /> : null}\n          {data.stepType === \"Pairs\" ? <MatchingPairs /> : null}\n        </Step>\n      ))}\n    </ScreenContainer>\n  );\n}\n", "import { useEffect, useReducer, useState } from \"react\";\nimport { Textarea } from \"~/components/lib\";\nimport { VariantItemInput, VariantItemNumber } from \"../lib\";\nimport { reducer, Variant } from \"../MatchingPairs/reducer\";\nimport {\n  variantChoose,\n  variantSetValue,\n  variantsSetup,\n} from \"../MatchingPairs/actions\";\nimport { useConstructor } from \"../../..\";\nimport {\n  VariantsItem,\n  VariantsList,\n} from \"~/modules/Constructor/components/lib\";\nimport { LessonTitle } from \"~/modules/Skill/components/lib\";\n\nconst initialState = {\n  variantsCount: 3,\n  question: \"\",\n  variants: [],\n  number: 0,\n  answer: \"\",\n  stepType: \"\",\n};\n\nexport default function Variants({ state = initialState }) {\n  const { number, answer, stepType, variantsCount = 3 } = state;\n  const initialQuestion = state.question;\n  const initialVariants = state.variants;\n  const { setStepReady, setAnswer } = useConstructor();\n  const [{ variants }, dispatch] = useReducer(reducer, {\n    variants: initialVariants,\n    pairs: [],\n  });\n  const [question, setQuestion] = useState(initialQuestion);\n\n  useEffect(() => {\n    if (variants.length === 0) {\n      dispatch(variantsSetup(variantsCount));\n    }\n  }, [variantsCount]);\n\n  useEffect(() => {\n    if (\n      variants.filter((variant: Variant) => variant.value.length === 0).length\n    ) {\n      return setStepReady(false, number);\n    }\n\n    if (\n      variants.find(\n        (variant: Variant) => variant.isFocused || variant.value === answer[0]\n      )\n    ) {\n      setStepReady(true, number);\n    } else {\n      return setStepReady(false, number);\n    }\n\n    if (question?.length) {\n      setStepReady(true, number);\n    } else {\n      setStepReady(false, number);\n    }\n  }, [variants, question]);\n\n  return stepType === \"Variants\" ? (\n    <>\n      <input type=\"hidden\" name={`answer${number}`} value={answer} />\n\n      <fieldset style={{ padding: \"0 25%\" }}>\n        <LessonTitle>Choose right variant</LessonTitle>\n\n        <div style={{ marginTop: 30 }}>\n          <Textarea\n            name={`question${number}`}\n            placeholder=\"Type question\"\n            style={{ minHeight: 100, marginBottom: 20 }}\n            value={question === null ? \"\" : question}\n            onChange={(e) => setQuestion(e.target.value)}\n            required\n          />\n          <VariantsList>\n            {variants.map((variant: Variant, index) => (\n              <VariantsItem\n                key={variant.idx}\n                style={{ marginBottom: 5, width: \"100%\" }}\n              >\n                <label style={{ position: \"relative\" }}>\n                  <VariantItemNumber\n                    onClick={(e) => {\n                      e.preventDefault();\n                      dispatch(variantChoose(index));\n                      setAnswer(variant.value, number);\n                    }}\n                    isFocused={variant.isFocused || variant.value === answer[0]}\n                  >\n                    {variant.idx}\n                  </VariantItemNumber>\n                  <VariantItemInput\n                    type=\"text\"\n                    name={`variant${number}`}\n                    placeholder=\"Type variant\"\n                    value={variant.value}\n                    onChange={(e) => {\n                      dispatch(variantSetValue(index, e.target.value));\n\n                      if (variant.isFocused) {\n                        setAnswer(e.target.value, number);\n                      }\n                    }}\n                    required\n                  />\n                </label>\n              </VariantsItem>\n            ))}\n          </VariantsList>\n        </div>\n      </fieldset>\n    </>\n  ) : null;\n}\n", "import { Action } from \"./actions\";\n\nexport type Variant = {\n  type: string | null;\n  value: string;\n  idx: number;\n  isFocused: boolean;\n  isConnected: boolean | null;\n};\n\nexport type State = {\n  variants: Variant[];\n  pairs: string[];\n};\n\nexport const basicState: State = {\n  variants: [],\n  pairs: [],\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  const { variants, pairs } = state;\n  switch (action.type) {\n    case \"SETUP\": {\n      const { variantsCount, variants, pairs } = action.payload;\n      const newVariants = [];\n      if (variants.length) {\n        return { ...state, variants: [...variants], pairs };\n      }\n      for (let i = 1; i <= variantsCount; i++) {\n        newVariants.push({\n          type: i - 1 < variantsCount / 2 ? \"left\" : \"right\", // Dividing on halfs.\n          value: \"\",\n          isFocused: false,\n          idx: i,\n          isConnected: false,\n        });\n      }\n      return { ...state, variants: newVariants };\n    }\n    case \"VARIANTS_SETUP\": {\n      const { variantsCount } = action.payload;\n      const variants = [];\n      for (let i = 1; i <= variantsCount; i++) {\n        variants.push({\n          value: \"\",\n          isFocused: false,\n          isConnected: false,\n          type: null,\n          idx: i,\n        });\n      }\n      return { ...state, variants };\n    }\n    case \"VARIANT_SET_VALUE\": {\n      const { idx, value } = action.payload;\n      const newVariants = variants;\n      newVariants[idx].value = value;\n      return { ...state, variants: [...newVariants] };\n    }\n    case \"TYPE\": {\n      const { value, idx } = action.payload;\n      const newVariants = variants;\n      newVariants[\n        newVariants.indexOf(\n          newVariants.find(\n            (variant: Variant) => variant.idx === Number(idx)\n          ) as Variant\n        )\n      ].value = value;\n      return { ...state, variants: [...newVariants] };\n    }\n    case \"CHOOSE\": {\n      const { idx } = action.payload;\n      const variantItem = variants.find(\n        (variant: Variant) => variant.idx === Number(idx)\n      );\n      if (variantItem?.type === \"left\") {\n        const newVariants = variants.map((variant: Variant) => ({\n          ...variant,\n          isFocused: variant.idx === Number(idx),\n        }));\n        return { ...state, variants: newVariants };\n      }\n      const newVariants = variants.map((variant: Variant) => ({\n        ...variant,\n        isFocused: variant.idx === Number(idx),\n      }));\n      return { ...state, variants: newVariants };\n    }\n    case \"VARIANT_CHOOSE\": {\n      const { idx } = action.payload;\n      const newVariants = variants.map((variant: Variant) => ({\n        ...variant,\n        isFocused: false,\n      }));\n      newVariants[idx].isFocused = true;\n      return { ...state, variants: [...newVariants] };\n    }\n    case \"CONNECT\": {\n      const { activeIdx, idx } = action.payload;\n      let newPairs = pairs;\n      let exists = newPairs.find(\n        (item) => item.includes(`${activeIdx}`) || item.includes(`${idx}`)\n      );\n      if (exists) {\n        newPairs[newPairs.indexOf(exists)] = `${activeIdx}${idx}`;\n      } else {\n        newPairs.push(`${activeIdx}${idx}`);\n      }\n      return {\n        ...state,\n        variants: variants.map((variant: Variant) => ({\n          ...variant,\n          isFocused: false,\n          isConnected: !!newPairs.filter((pair) =>\n            pair.includes(`${variant.idx}`)\n          ).length,\n        })),\n        pairs: newPairs,\n      };\n    }\n    case \"ADD_PAIR\": {\n      const newVariants = variants;\n      newVariants.push({\n        value: \"\",\n        isFocused: false,\n        idx: newVariants.length + 1,\n        isConnected: false,\n        type: null,\n      });\n      newVariants.push({\n        value: \"\",\n        isFocused: false,\n        idx: newVariants.length + 1,\n        isConnected: false,\n        type: null,\n      });\n      return { ...state, variants: [...newVariants] };\n    }\n    default: {\n      throw new Error(`Omg we don't know this action type`);\n    }\n  }\n};\n", "import { Variant } from \"@prisma/client\";\n\nexport type Action =\n  | {\n      type: \"SETUP\";\n      payload: { variantsCount: number; variants: Variant[]; pairs: string[] };\n    }\n  | { type: \"VARIANTS_SETUP\"; payload: { variantsCount: number } }\n  | { type: \"VARIANT_SET_VALUE\"; payload: { idx: number; value: string } }\n  | { type: \"TYPE\"; payload: { value: string; idx: number } }\n  | { type: \"CHOOSE\"; payload: { idx: number } }\n  | { type: \"VARIANT_CHOOSE\"; payload: { idx: number } }\n  | { type: \"CONNECT\"; payload: { activeIdx: number; idx: number } }\n  | { type: \"ADD_PAIR\" };\n\nexport const pairsSetup = (\n  variantsCount: number,\n  variants: Variant[],\n  pairs: string[]\n): Action => ({\n  type: \"SETUP\",\n  payload: { variantsCount, variants, pairs },\n});\n\nexport const variantsSetup = (variantsCount: number): Action => ({\n  type: \"VARIANTS_SETUP\",\n  payload: { variantsCount },\n});\n\nexport const variantSetValue = (idx: number, value: string): Action => ({\n  type: \"VARIANT_SET_VALUE\",\n  payload: { idx, value },\n});\n\nexport const pairsType = (value: string, idx: number): Action => ({\n  type: \"TYPE\",\n  payload: { value, idx },\n});\n\nexport const pairsChoose = (idx: number): Action => ({\n  type: \"CHOOSE\",\n  payload: {\n    idx,\n  },\n});\n\nexport const variantChoose = (idx: number): Action => ({\n  type: \"VARIANT_CHOOSE\",\n  payload: { idx },\n});\n\nexport const pairsConnect = (activeIdx: number, idx: number): Action => ({\n  type: \"CONNECT\",\n  payload: { activeIdx, idx },\n});\n\nexport const addPair = (): Action => ({ type: \"ADD_PAIR\" });\n", "import { useEffect, useReducer } from \"react\";\nimport { useConstructor } from \"~/modules/Constructor\";\nimport { PairsList } from \"~/modules/Constructor/components/lib\";\nimport { LessonButton, LessonTitle } from \"~/modules/Skill/components/lib\";\nimport { VariantItemNumber, VariantItemInput } from \"../lib\";\nimport { pairsChoose, pairsConnect, pairsSetup, pairsType } from \"./actions\";\nimport { reducer, Variant } from \"./reducer\";\n\nconst initialState = {\n  variantsCount: 4,\n  initialVariants: [],\n  number: 0,\n  answer: [],\n  stepType: \"\",\n  options: {},\n};\n\nexport default function MatchingPairs({ state = initialState }) {\n  const {\n    number,\n    answer,\n    stepType,\n    options,\n    variantsCount = 4,\n    initialVariants = [],\n  } = state;\n\n  const { setStepReady, setAnswer } = useConstructor();\n\n  const [{ variants, pairs }, dispatch] = useReducer(reducer, {\n    variants: initialVariants,\n    pairs: [],\n  });\n\n  const isEditing = answer.length;\n\n  useEffect(() => {\n    if (isEditing) {\n      // return console.log(\"123\");\n      return dispatch(pairsSetup(answer.length, options.variants, answer));\n      // return dispatch(pairsSetup(answer.length, state.variants, answer));\n    }\n    dispatch(pairsSetup(variantsCount, initialVariants, answer as string[]));\n  }, []);\n\n  // console.log(\"State: \", state);\n\n  useEffect(() => {\n    if (pairs.length === variantsCount / 2) {\n      setAnswer(pairs, number);\n      setStepReady(true, number);\n    }\n    if (pairs.length !== variantsCount / 2) {\n      setStepReady(false, number);\n    }\n  }, [pairs.length, pairs]);\n\n  console.log(\"Variants: \", variants);\n\n  return stepType === \"Pairs\" ? (\n    <>\n      <fieldset style={{ maxWidth: 600, margin: \"0 auto\" }}>\n        <input type=\"hidden\" name={`answer${number}`} value={answer} />\n\n        <LessonTitle>Connect pairs</LessonTitle>\n\n        <div style={{ marginTop: 30 }}>\n          <PairsList>\n            {variants.map((variant: Variant) => (\n              <li key={variant.idx} style={{ marginBottom: 5 }}>\n                <label style={{ position: \"relative\" }}>\n                  <VariantItemNumber\n                    onClick={(e) => {\n                      e.preventDefault();\n                      const activeIdx = variants.filter(\n                        (variantItem: Variant) => variantItem.isFocused\n                      )[0]?.idx;\n                      if (\n                        variants.filter(\n                          (variantItem: Variant) => variantItem.isFocused\n                        ).length === 1 ||\n                        variant.isFocused\n                      ) {\n                        dispatch(pairsConnect(activeIdx, variant.idx));\n                      } else {\n                        dispatch(pairsChoose(variant.idx));\n                      }\n                    }}\n                    isConnected={variant.isConnected as boolean}\n                    isFocused={variant.isFocused}\n                  >\n                    {variant.idx}\n                  </VariantItemNumber>\n                  <VariantItemInput\n                    type=\"text\"\n                    name={`variant${number}`}\n                    placeholder=\"type first variant\"\n                    value={variant.value}\n                    onChange={(e) =>\n                      dispatch(pairsType(e.target.value, variant.idx))\n                    }\n                    required\n                  />\n                </label>\n              </li>\n            ))}\n            <LessonButton\n              type=\"button\"\n              onClick={() => dispatch({ type: \"ADD_PAIR\" })}\n              active={true}\n              style={{\n                backgroundColor: \"#1cb0f6\",\n                borderBottomColor: \"#1899d6\",\n              }}\n            >\n              Add pair\n            </LessonButton>\n          </PairsList>\n        </div>\n      </fieldset>\n    </>\n  ) : null;\n}\n", "import { Fragment, useEffect, useState } from \"react\";\nimport { Textarea } from \"~/components/lib\";\nimport { useFocus } from \"~/hooks/useFocus\";\nimport { useConstructor } from \"~/modules/Constructor\";\nimport { LessonTitle } from \"~/modules/Skill/components/lib\";\nimport { doesItemContainSign, isItemInArray } from \"~/utils\";\nimport { InsertWordsInput, InsertWordsTextBlock, StepContent } from \"../lib\";\nimport Backend from \"./Backend\";\nimport ChooseMissingWords from \"./ChooseMissingWords\";\n\nconst initialState = {\n  text: \"\",\n  number: 0,\n  answer: \"\",\n  stepType: \"\",\n};\n\nexport default function InsertWords({ state = initialState }) {\n  const { text, number, stepType } = state;\n  const answer = state.answer ? state.answer[0].split(\",\") : [];\n  const { setStepReady, setAnswer } = useConstructor();\n  const [showText, setShowText] = useState(false);\n  const [isChooseVariants, setChooseVariants] = useState(false);\n  const [indexes, setIndexes] = useState(answer.map((item) => Number(item))); // Indexes of choosen words\n\n  const ref = useFocus<HTMLTextAreaElement>();\n\n  useEffect(() => {\n    setStepReady(!!indexes.length, number);\n  }, [indexes.length]);\n\n  useEffect(() => {\n    if (text) {\n      setAnswer(text, number);\n      // const newWords = text.split(\" \").filter((txt) => {\n      //   const { newItem } = doesItemContainSign(txt);\n      //   return isItemInArray(answer.split(\" \"), newItem);\n      // });\n      setShowText(true);\n    }\n\n    setIndexes((prevIndexes) => {\n      return prevIndexes.map((prevIndex) => Number(prevIndex));\n    });\n  }, []);\n\n  const words = text ? text.split(\" \") : state.answer.split(\" \");\n  const filteredWords = words.filter((word, idx) => {\n    const isChoosen = indexes.find((index) => Number(index) === idx);\n    if (isChoosen) {\n      return word;\n    }\n  });\n\n  return stepType === \"Insert\" ? (\n    <Fragment>\n      <StepContent>\n        <fieldset style={{ padding: \"0 25%\" }}>\n          <input\n            type=\"hidden\"\n            name={`answer${number}`}\n            defaultValue={indexes.join(\",\")}\n          />\n          <input\n            type=\"hidden\"\n            name={`isToChoose${number}`}\n            defaultValue={isChooseVariants ? \"1\" : undefined}\n          />\n\n          <LessonTitle>Add missing words</LessonTitle>\n\n          <div style={{ marginTop: 30 }}>\n            <Textarea\n              name={`text${number}`}\n              placeholder=\"Type text\"\n              value={state.answer}\n              onChange={(evt) => {\n                setAnswer(evt.target.value, number);\n              }}\n              ref={ref}\n              required\n            />\n\n            <InsertWordsTextBlock\n              showText={showText}\n              style={{ marginTop: -176 }}\n            >\n              {words.map((item, idx) => {\n                const { newItem, sign } = doesItemContainSign(item);\n\n                if (!isItemInArray(indexes, idx)) {\n                  return (\n                    <span style={{ marginRight: 3 }} key={idx}>\n                      {item}\n                    </span>\n                  );\n                }\n\n                if (sign) {\n                  return (\n                    <Fragment key={idx}>\n                      <InsertWordsInput type=\"text\" length={newItem.length} />\n                      <span>{sign}</span>\n                    </Fragment>\n                  );\n                }\n\n                return (\n                  <InsertWordsInput\n                    type=\"text\"\n                    key={idx}\n                    length={newItem.length}\n                  />\n                );\n              })}\n\n              {isChooseVariants && (\n                <ChooseMissingWords words={filteredWords} number={number} />\n              )}\n            </InsertWordsTextBlock>\n          </div>\n        </fieldset>\n      </StepContent>\n\n      <Backend\n        text={text}\n        // answer={answer}\n        answer={state.answer}\n        indexes={indexes}\n        setIndexes={setIndexes}\n        showText={setShowText}\n        setChooseVariants={setChooseVariants}\n        setShowText={setShowText}\n        isChooseVariants={isChooseVariants}\n      />\n    </Fragment>\n  ) : null;\n}\n", "import styled from \"@emotion/styled\";\n\ntype WordsItemProps = {\n  isActive: boolean;\n};\n\nconst WordsList = styled(\"ul\")`\n  display: flex;\n  flex-wrap: wrap;\n  list-style-type: none;\n  padding: none;\n  align-items: center;\n`;\n\nconst WordsItem = styled(\"li\")<WordsItemProps>`\n  margin-right: 3px;\n  padding: 3px 6px;\n  border: 1px solid #fff;\n  border-color: ${(props) => (props.isActive ? \"#1cb0f6\" : \"#fff\")};\n  border-radius: 15px;\n  cursor: pointer;\n  transition: border-color 0.2s;\n  &:hover {\n    border-color: #1cb0f6;\n  }\n`;\n\nexport { WordsList, WordsItem };\n", "import { isItemInArray } from \"~/utils\";\nimport { WordsItem, WordsList } from \"./lib\";\n\ntype BackendProps = {\n  showText: Function;\n  setShowText: Function;\n  setChooseVariants: Function;\n  isChooseVariants: boolean;\n  answer: string;\n  indexes: number[];\n  setIndexes: (indexes: number[]) => void;\n  text: string;\n};\n\nexport default function Backend({\n  showText,\n  setShowText,\n  setChooseVariants,\n  isChooseVariants,\n  answer,\n  setIndexes,\n  indexes,\n  text,\n}: BackendProps) {\n  const words = text ? text.split(\" \") : answer.split(\" \");\n\n  //  ---------\n  //  Filter words from dots, commas etc\n  //  ---------\n\n  return (\n    <div style={{ padding: 30 }}>\n      <WordsList>\n        <li>\n          <b>Choose words to be hidden: </b>\n        </li>\n        {words.map((item, idx) => {\n          // {answer.split(\" \").map((item, idx) => {\n          const isActive = !!indexes.find((i) => i === idx);\n          return (\n            <WordsItem\n              isActive={isActive}\n              key={idx}\n              onClick={() => {\n                setIndexes((prevIndexes) => {\n                  if (idx === 0) {\n                    let wasRemoved = false;\n                    prevIndexes.forEach((i, ix) => {\n                      if (i === 0) {\n                        wasRemoved = true;\n                        prevIndexes.splice(ix, 1);\n                      }\n                    });\n\n                    if (wasRemoved) return [...prevIndexes];\n\n                    return [...prevIndexes, idx];\n                  }\n\n                  if (isItemInArray(prevIndexes, idx)) {\n                    prevIndexes.splice(prevIndexes.indexOf(idx), 1);\n                    return [...prevIndexes];\n                  }\n\n                  return [...prevIndexes, idx];\n                });\n\n                setShowText(true);\n              }}\n            >\n              {item}\n            </WordsItem>\n          );\n        })}\n      </WordsList>\n\n      <button\n        type=\"button\"\n        style={{ display: showText ? \"block\" : \"none\" }}\n        onClick={() => setShowText(false)}\n      >\n        Edit text\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => setChooseVariants(!isChooseVariants)}\n      >\n        Set variants\n      </button>\n    </div>\n  );\n}\n", "import { useState } from \"react\";\nimport { VariantItem } from \"~/modules/Skill/components/lib\";\nimport { VariantItemInput } from \"../lib\";\n\nexport default function ChooseMissingWords({ words, number }) {\n  const [variants, setVariants] = useState(() =>\n    words.length ? [...words] : [\"\"]\n  );\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <ul\n        style={{\n          listStyleType: \"none\",\n          padding: 0,\n          margin: \"30px 0\",\n          display: words.length > 1 ? \"flex\" : \"block\",\n        }}\n      >\n        {words.length === 1 ? (\n          <>\n            <li>\n              <VariantItem\n                type=\"button\"\n                isFocused={false}\n                onClick={() => setVariants((prevVars) => [...prevVars, \"\"])}\n              >\n                Add variant\n              </VariantItem>\n            </li>\n            {variants.map((variant, idx) => (\n              <VariantItemInput\n                key={`insertwordvariant${idx}`}\n                type=\"text\"\n                name={`variant${number}`}\n                placeholder=\"type variant\"\n                defaultValue={variant}\n                required\n              />\n            ))}\n          </>\n        ) : (\n          words.map((word, idx: number) => (\n            <li\n              key={idx}\n              style={{ position: \"relative\", marginBottom: 8, marginRight: 16 }}\n            >\n              <VariantItem type=\"button\" isFocused={false}>\n                {word}\n              </VariantItem>\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n}\n", "import InsertWords from \"./InsertWords\";\n\nexport default InsertWords;\n", "import React, { Fragment, ReactElement } from \"react\";\nimport { Legend } from \"~/components/lib\";\nimport { STEP_TYPES } from \"~/constants\";\nimport { useConstructor } from \"../..\";\nimport CloseBtn from \"../../components/CloseBtn\";\nimport { Step as StepType } from \"../types\";\nimport { StepHeader, StepContent, ChooseStyle, StyleButton } from \"./lib\";\n\ntype StepProps = { data: StepType; index: number };\n\nconst Step: React.FC<StepProps> = ({ data, index, children }) => {\n  const { parentLessonId, stepType, id, number } = data;\n  const { activeStepId, removeStepType, setStepType } = useConstructor();\n\n  return (\n    <section className={`${activeStepId !== id && \"visuallyHidden\"}`}>\n      <input type=\"hidden\" name=\"step\" value={index} />\n      <input type=\"hidden\" name={`parentLessonId`} value={parentLessonId} />\n      <input type=\"hidden\" name={`type${number}`} value={stepType} />\n      <Legend>{stepType ? stepType : \"Choose type\"}</Legend>\n      <StepHeader>\n        {stepType !== \"\" && (\n          <CloseBtn onClickHandler={() => removeStepType(id)} />\n        )}\n      </StepHeader>\n\n      {/* <StepContent> */}\n      {stepType === \"\" ? (\n        <StepContent>\n          <ChooseStyle>\n            {STEP_TYPES.map((type, idx) => (\n              <StyleButton\n                type=\"button\"\n                onClick={() => setStepType(type, id)}\n                key={idx}\n              >\n                {type}\n              </StyleButton>\n            ))}\n          </ChooseStyle>\n        </StepContent>\n      ) : (\n        <Fragment>\n          {/* <StepContent> */}\n          {React.Children.map(children, (child) => {\n            if (child === null) {\n              return;\n            }\n            return React.cloneElement(child as ReactElement, {\n              state: data,\n            });\n          })}\n          {/* </StepContent>\n          <h2>Step settings</h2> */}\n        </Fragment>\n      )}\n      {/* </StepContent> */}\n    </section>\n  );\n};\n\nexport default Step;\n", "export const STEP_TYPES = [\"Question\", \"Insert\", \"Variants\", \"Pairs\"];\n", "import Close from \"~/styles/close.svg\";\nimport { BtnClose, BtnCloseImage } from \"./lib\";\n\nexport default function CloseBtn({\n  onClickHandler,\n}: {\n  onClickHandler: () => void;\n}) {\n  return (\n    <BtnClose type=\"button\" onClick={onClickHandler}>\n      <BtnCloseImage src={Close} alt=\"Close\" />\n    </BtnClose>\n  );\n}\n", "import { useEffect } from \"react\";\nimport { LabelText, Textarea, TextareaLabel } from \"~/components/lib\";\nimport { doesItemContainSign } from \"~/utils\";\nimport { useConstructor } from \"~/modules/Constructor\";\nimport Keywords from \"~/modules/Constructor/components/Keywords\";\nimport { Step } from \"../../types\";\nimport {\n  LessonQuestion,\n  LessonQuestionTriangle,\n  LessonQuestionTriangleContainer,\n  LessonTitle,\n} from \"~/modules/Skill/components/lib\";\nimport Duo from \"~/styles/duo.svg\";\n\nconst initialState: Omit<\n  Step,\n  \"id\" | \"variants\" | \"parentLessonId\" | \"active\" | \"chapter\"\n> = {\n  // const initialState: Omit<Step, \"id\" | \"variants\" | \"active\" | \"chapter\"> = {\n  // question: \"\",\n  answer: \"\",\n  number: 0,\n  // keywords: [\"\"],\n  stepType: \"\",\n  options: {\n    question: \"\",\n    keywords: [\"\"],\n  },\n};\n\nexport default function QuestionAnswer({ state = initialState }) {\n  const { options, answer, number, stepType } = state;\n  const { question, keywords } = options as {\n    question: string;\n    keywords: string[];\n  };\n  const { setStepReady, setKeywords, setQuestion, setAnswer } =\n    useConstructor();\n\n  useEffect(() => {\n    if (question && answer) {\n      return setStepReady(true, number);\n    }\n    return setStepReady(false, number);\n  }, [question, answer]);\n\n  useEffect(() => {\n    setKeywords(keywords, number);\n  }, []);\n\n  return stepType === \"Question\" ? (\n    <>\n      <fieldset style={{ padding: \"0 25%\" }}>\n        <LessonTitle>Answer the question</LessonTitle>\n        <div\n          style={{ display: \"flex\", alignItems: \"center\", margin: \"30px 0\" }}\n        >\n          <img src={Duo} alt=\"Duo\" height={150} style={{ marginBottom: -50 }} />\n          <div style={{ position: \"relative\" }}>\n            <LessonQuestion>\n              <input\n                type=\"text\"\n                name={`question${number}`}\n                placeholder=\"Set question\"\n                style={{\n                  border: \"none\",\n                  width: \"100%\",\n                }}\n                value={question === null ? \"\" : question}\n                onChange={(evt) => setQuestion(evt.target.value, number)}\n                autoFocus={true}\n                required\n              />\n            </LessonQuestion>\n            <LessonQuestionTriangleContainer>\n              <LessonQuestionTriangle />\n            </LessonQuestionTriangleContainer>\n          </div>\n        </div>\n\n        <Textarea\n          name={`answer${number}`}\n          placeholder=\"Type answer\"\n          value={answer}\n          onChange={(evt) => setAnswer(evt.target.value, number)}\n          required\n        />\n      </fieldset>\n      <TextareaLabel htmlFor={`keywords${number}`}>\n        <LabelText>Choose keywords</LabelText>\n        <Keywords\n          answer={answer as string}\n          initialKeywords={keywords}\n          onSet={(kwords: string[]) => setKeywords(kwords, number)}\n        />\n\n        <input\n          type=\"hidden\"\n          id={`keywords${number}`}\n          name={`keywords${number}`}\n          placeholder=\"Type keywords\"\n          value={keywords.map(\n            (keyword) => doesItemContainSign(keyword).newItem\n          )}\n          readOnly\n        />\n      </TextareaLabel>\n    </>\n  ) : null;\n}\n", "import { useEffect, useState } from \"react\";\nimport { isItemInArray } from \"~/utils\";\nimport Keyword from \"./Keyword\";\n\nexport default function Keywords({\n  answer,\n  onSet,\n  initialKeywords = [],\n}: {\n  initialKeywords: string[];\n  answer: string;\n  onSet: Function;\n}) {\n  const [keywords, setKeywords] = useState<string[]>(initialKeywords);\n\n  useEffect(() => {\n    onSet(keywords);\n  }, [keywords]);\n\n  const isEditing = Boolean(Array.isArray(answer));\n\n  return (\n    <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n      {!isEditing &&\n        answer.split(\" \").map((item: string, idx: number) => {\n          if (item.includes(\",\")) {\n            item = item.slice(0, -1);\n          }\n          return (\n            <Keyword\n              key={idx}\n              onSet={(word: string) =>\n                setKeywords((prevArr: string[]) => {\n                  if (isItemInArray(prevArr, item)) {\n                    prevArr.splice(prevArr.indexOf(word), 1);\n                    return [...prevArr];\n                  } else {\n                    return [...prevArr, word];\n                  }\n                })\n              }\n              initiallyActive={!!keywords.find((keyword) => keyword === item)}\n            >\n              {item}\n            </Keyword>\n          );\n        })}\n    </div>\n  );\n}\n", "import { useState } from \"react\";\nimport { KeywordTemplate } from \"~/components/lib\";\n\nconst Keyword: React.FC<{ onSet: Function; initiallyActive: boolean }> = ({\n  onSet,\n  children,\n  initiallyActive,\n}) => {\n  const [isActive, setIsActive] = useState(initiallyActive);\n\n  return (\n    <KeywordTemplate\n      active={isActive}\n      onClick={() => {\n        onSet(children);\n        setIsActive(!isActive);\n      }}\n    >\n      {children}\n    </KeywordTemplate>\n  );\n};\n\nexport default Keyword;\n", "import { useTransition } from \"@remix-run/react\";\nimport { FormButton } from \"~/components/lib\";\nimport { useConstructor } from \"../..\";\nimport { ConstructorSidebar } from \"../../components/lib\";\nimport { SidebarBtn, SidebarList } from \"./lib\";\n\nconst Sidebar = () => {\n  const {\n    steps,\n    currentScreen,\n    lessons,\n    stepsReady,\n    basicInfoReady,\n    activeLessonId,\n    activeStepId,\n    changeCurrentScreen,\n    setStepActive,\n    setLessonActive,\n    removeStep,\n    addLesson,\n    addStep,\n  } = useConstructor();\n\n  const transition = useTransition();\n  const submitText = transition.state === \"submitting\" ? \"Saving\" : \"Save\";\n\n  const isSubmitActive = stepsReady === true && basicInfoReady === true;\n  const isSubmitDisabled =\n    stepsReady === false || basicInfoReady === false || submitText !== \"Save\";\n\n  const lessonSteps = steps.filter(\n    (step) => step.parentLessonId === activeLessonId\n  );\n\n  return (\n    <ConstructorSidebar>\n      <SidebarList>\n        <li>\n          <SidebarBtn\n            type=\"button\"\n            onClick={() => {\n              changeCurrentScreen(\"Skill\");\n            }}\n            isActive={currentScreen === \"Skill\"}\n          >\n            Skill Info\n          </SidebarBtn>\n        </li>\n        {lessons.map((lesson, idx) => (\n          <li key={lesson.id}>\n            <SidebarBtn\n              type=\"button\"\n              onClick={() => {\n                changeCurrentScreen(\"Steps\");\n                setLessonActive(lesson.id);\n              }}\n              isActive={\n                lesson.id === activeLessonId && currentScreen === \"Steps\"\n              }\n            >\n              Lesson {idx + 1}\n            </SidebarBtn>\n          </li>\n        ))}\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            if (currentScreen !== \"Steps\") {\n              changeCurrentScreen(\"Steps\");\n            }\n            addLesson();\n          }}\n        >\n          Add lesson\n        </button>\n      </SidebarList>\n\n      <SidebarList>\n        {lessonSteps.map((step, index) => (\n          <li key={step.id}>\n            <button\n              type=\"button\"\n              onClick={() => {\n                changeCurrentScreen(\"Steps\");\n                setStepActive(step.id);\n              }}\n              style={{\n                color:\n                  step.id === activeStepId && currentScreen === \"Steps\"\n                    ? \"#1cb0f6\"\n                    : \"#3c3c3c\",\n              }}\n            >\n              Step {index + 1}\n            </button>\n            {lessonSteps.length > 1 ? (\n              <button\n                type=\"button\"\n                onClick={() => {\n                  removeStep();\n                }}\n              >\n                Remove step\n              </button>\n            ) : null}\n          </li>\n        ))}\n        <button\n          type=\"button\"\n          onClick={() => {\n            addStep();\n            if (currentScreen !== \"Steps\") {\n              changeCurrentScreen(\"Steps\");\n            }\n          }}\n        >\n          Add step\n        </button>\n      </SidebarList>\n\n      <FormButton\n        type=\"submit\"\n        active={isSubmitActive}\n        disabled={isSubmitDisabled}\n      >\n        {submitText}\n      </FormButton>\n    </ConstructorSidebar>\n  );\n};\n\nexport default Sidebar;\n", "import { prisma } from \"~/db.server\";\nimport { getActiveLanguage } from \"~/models/language.server\";\nimport Constructor from \"~/modules/Constructor\";\nimport { Language, Skill } from \"@prisma/client\";\nimport { createSteps } from \"~/models/lesson.server\";\nimport {\n  checkTitleUnique,\n  getLastAddedSkills,\n  getLastAddedSkill,\n} from \"~/models/skill.server\";\nimport { doesItemContainSign, getTodayDate } from \"~/utils\";\nimport { json, redirect } from \"@remix-run/node\";\nimport type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { useActionData, useLoaderData } from \"@remix-run/react\";\n\nexport type ActionData = {\n  errors?: {\n    title?: string;\n  };\n};\n\nexport function ErrorBoundary() {\n  return (\n    <div className=\"error-container\">{`There was an error loading the constructor. Sorry.`}</div>\n  );\n}\n\nexport const action = async ({ request, params }: ActionArgs) => {\n  const activeLanguage = (await getActiveLanguage(request)) as Language;\n  const form = await request.formData();\n\n  const { ...values } = Object.fromEntries(form);\n  console.log(\"values: \", values);\n\n  const title = form.get(\"title\") as string;\n\n  let lineNumber = form.get(\"lineNumber\") as string;\n  const lastAddedSkill = await getLastAddedSkill(activeLanguage.id);\n  if (lastAddedSkill) {\n    lineNumber =\n      lineNumber === \"0\"\n        ? (lastAddedSkill?.lineNumber + 1).toString()\n        : lineNumber;\n  }\n\n  const skillLessonIDs = form.getAll(\"parentLessonId\") as string[];\n\n  const isTitleUnique = await checkTitleUnique(activeLanguage.id, title);\n\n  if (isTitleUnique) {\n    return json<ActionData>(\n      {\n        errors: { title: \"Title isn't unique\" },\n      },\n      { status: 400 }\n    );\n  }\n\n  // const steps = form.getAll(\"step\").map((item, index) => {\n  //   const stepType = form.get(`type${index}`);\n  //   let answer: string | string[] = form.get(`answer${index}`) as string;\n  //   const returnData = {\n  //     stepType,\n  //     number: index,\n  //     languageId: activeLanguage.id,\n  //     parentLessonId: skillLessonIDs[index],\n  //     // options: {}\n  //   };\n  //   switch (stepType) {\n  //     case \"Question\": {\n  //       const question = form.get(`question${index}`);\n  //       const keywords = form.get(`keywords${index}`) as string;\n  //       answer = answer.trim().split(\" \");\n  //       return {\n  //         ...returnData,\n  //         // question,\n  //         answer,\n  //         // keywords: keywords ? keywords.split(\",\") : [],\n  //         options: JSON.stringify({\n  //           keywords: keywords ? keywords.split(\",\") : [],\n  //           question,\n  //         }),\n  //       };\n  //     }\n  //     case \"Insert\": {\n  //       const text = form.get(`text${index}`) as string;\n  //       const isToChoose = !!form.get(`isToChoose${index}`);\n  //       const variantValues = form.getAll(`variant${index}`);\n  //       answer = answer\n  //         .trim()\n  //         .split(\",\")\n  //         .sort((a, b) => Number(a) - Number(b));\n  //       const variants = variantValues.map((value, idx) => ({\n  //         idx,\n  //         value: doesItemContainSign(value as string).newItem,\n  //         isFocused: false,\n  //       }));\n  //       return {\n  //         ...returnData,\n  //         answer,\n  //         // text: text.trim(),\n  //         // isToChoose: variants.length === 0 ? isToChoose : false,\n  //         // variants,\n  //         options: JSON.stringify({\n  //           text: text.trim(),\n  //           isToChoose: variants.length === 0 ? isToChoose : false,\n  //           variants,\n  //         }),\n  //       };\n  //     }\n  //     case \"Variants\": {\n  //       const question = form.get(`question${index}`);\n  //       const variants = form.getAll(`variant${index}`);\n  //       return {\n  //         ...returnData,\n  //         answer,\n  //         // question,\n  //         // variants: variants.map((variant, idx) => ({\n  //         //   value: variant,\n  //         //   idx: idx + 1,\n  //         //   isFocused: false,\n  //         // })),\n  //         options: JSON.stringify({\n  //           question,\n  //           variants: variants.map((variant, idx) => ({\n  //             value: variant,\n  //             idx: idx + 1,\n  //             isFocused: false,\n  //           })),\n  //         }),\n  //       };\n  //     }\n  //     case \"Pairs\": {\n  //       const variants = form.getAll(`variant${index}`) as string[];\n  //       return {\n  //         ...returnData,\n  //         answer: answer.split(\",\"),\n  //         // variants: variants.map((variant, idx) => ({\n  //         //   value: variant,\n  //         //   isFocused: false,\n  //         //   isConnected: true,\n  //         //   idx: idx + 1,\n  //         // })),\n  //         options: JSON.stringify({\n  //           variants: variants.map((variant, idx) => ({\n  //             value: variant,\n  //             isFocused: false,\n  //             isConnected: true,\n  //             idx: idx + 1,\n  //           })),\n  //         }),\n  //       };\n  //     }\n  //     default: {\n  //       return { ...returnData, answer };\n  //     }\n  //   }\n  // });\n\n  // const steps = [];\n\n  // const createdLessonsIDs = await createSteps(steps);\n  // const data = {\n  //   title,\n  //   lessonIDs: createdLessonsIDs,\n  //   lessonsAmount: Number(skillLessonIDs[skillLessonIDs.length - 1]),\n  //   currentLesson: 0,\n  //   level: 0,\n  //   languageId: activeLanguage?.id,\n  //   updatedAt: getTodayDate(),\n  //   lineNumber: Number(lineNumber),\n  // };\n  // const skill = await prisma.skill.create({ data });\n  // return redirect(`/skill/${skill.title}/1`);\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const activeLanguage = (await getActiveLanguage(request)) as Language;\n  const lastAddedSkills = await getLastAddedSkills(activeLanguage.id);\n\n  return json({ lastAddedSkills });\n};\n\nexport default function ConstructorNew() {\n  const actionData = useActionData<typeof action>();\n  const { lastAddedSkills } = useLoaderData<typeof loader>();\n\n  return (\n    <Constructor actionData={{}} />\n    // <Constructor actionData={actionData} lastAddedSkills={lastAddedSkills} />\n  );\n}\n", "import { json, redirect, Response } from \"@remix-run/node\";\nimport type { LoaderArgs, ActionArgs } from \"@remix-run/node\";\nimport { getActiveLanguage } from \"~/models/language.server\";\nimport { deleteLessonsFromSkill } from \"~/models/lesson.server\";\nimport WeeklyProgress from \"~/modules/Common/components/WeeklyProgress/WeeklyProgress\";\nimport { getUser } from \"~/session.server\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport SkillsList from \"~/components/SkillsList\";\nimport { deleteSkillById, getSkills } from \"~/models/skill.server\";\n\nexport function ErrorBoundary() {\n  return (\n    <div className=\"error-container\">Issues during loading Skills route</div>\n  );\n}\n\nexport const action = async ({ request }: ActionArgs) => {\n  const data = await request.formData();\n  const { _action, ...values } = Object.fromEntries(data);\n\n  if (_action === \"Delete skill\") {\n    console.log(\"values: \", values);\n    const id = values.id as string;\n    if (!id) {\n      throw new Error(\"Skill id wasn't found\");\n    }\n\n    await deleteLessonsFromSkill(id as string);\n    return await deleteSkillById(id);\n  }\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const activeLanguage = await getActiveLanguage(request);\n  const user = await getUser(request);\n\n  if (!user) {\n    return redirect(\"/login\");\n  }\n\n  if (!activeLanguage) {\n    throw new Response(`We could not find the active language`, {\n      status: 404,\n    });\n  }\n\n  const skills = await getSkills(activeLanguage.id);\n  return json({\n    skills,\n    activity: user.weeklyActivity,\n    languageTitle: activeLanguage.title,\n  });\n};\n\nexport default function SkillsPage() {\n  const { skills, activity, languageTitle } = useLoaderData<typeof loader>();\n\n  return (\n    <section style={{ display: \"flex\", width: \"100%\" }}>\n      <SkillsList skills={skills} languageTitle={languageTitle} />\n      <WeeklyProgress activity={activity} />\n    </section>\n  );\n}\n", "import styled from \"@emotion/styled\";\n\nconst ExpProgressBlock = styled(\"section\")`\n  background: #fff;\n  border: 2px solid #e5e5e5;\n  border-radius: 16px;\n  margin: 0 24px 24px;\n  padding: 24px;\n  position: fixed;\n`;\n\nconst ExpProgressTitle = styled(\"h2\")`\n  color: #3c3c3c;\n  font-size: 24px;\n  line-height: 26px;\n  margin: 0 0 25px;\n  font-family: Nunito;\n  font-weight: 700;\n`;\n\nexport { ExpProgressBlock, ExpProgressTitle };\n", "import { WeeklyActivity } from \"@prisma/client\";\nimport { getCurrentWeek } from \"~/utils\";\nimport { ExpProgressBlock, ExpProgressTitle } from \"./lib\";\n\nconst DAY_COORDS = [\n  \"0.5\",\n  \"42.166666666666664,0\",\n  \"83.83333333333333,0\",\n  \"125.5,0\",\n  \"167.16666666666666,0\",\n  \"208.83333333333334,0\",\n  \"250.5,0\",\n];\n\nconst EXP_VALUES = [\n  { val: 0, coords: \"0,150.5\" },\n  { val: 0, coords: \"0,113\" },\n  { val: 0, coords: \"0,75.5\" },\n  { val: 0, coords: \"0,38\" },\n  { val: 0, coords: \"0,0.5\" },\n];\n\nconst DOTS_X_COORDS = [\n  \"0.5\",\n  \"41.666\",\n  \"83.333\",\n  \"125\",\n  \"166.666\",\n  \"208.333\",\n  \"250\",\n];\n\nexport default function WeeklyProgress({\n  activity,\n}: {\n  activity: WeeklyActivity;\n}) {\n  const maxActivity = Math.max(...Object.values(activity));\n  EXP_VALUES[1].val = Math.round(maxActivity / 3.5);\n  EXP_VALUES[2].val = Math.round(maxActivity / 2.0);\n  EXP_VALUES[3].val = Math.round(maxActivity / 1.2);\n  EXP_VALUES[4].val = Math.round(maxActivity / 0.9);\n\n  const days = getCurrentWeek();\n  const dotsData = days.map((day, index) => ({\n    x: DOTS_X_COORDS[index],\n    y:\n      maxActivity &&\n      (activity[day as keyof WeeklyActivity] / EXP_VALUES[4].val) * 150,\n    exp: activity[day as keyof WeeklyActivity],\n  }));\n\n  return (\n    <div style={{ position: \"relative\", display: \"flex\", flexGrow: \"1\" }}>\n      <ExpProgressBlock>\n        <ExpProgressTitle>XP Progress</ExpProgressTitle>\n        <svg direction=\"ltr\" height=\"220\" width=\"340\">\n          <g transform=\"translate(45, 35)\">\n            <g></g>\n            <g\n              transform=\"translate(0, 150)\"\n              fill=\"none\"\n              fontSize=\"10\"\n              fontFamily=\"sans-serif\"\n              textAnchor=\"middle\"\n            >\n              {days.map((day, index) => (\n                <g\n                  className=\"tick\"\n                  opacity=\"1\"\n                  transform={`translate(${DAY_COORDS[index]})`}\n                  key={day}\n                >\n                  <text\n                    fill=\"currentColor\"\n                    y=\"16\"\n                    dy=\"0.71em\"\n                    color=\"#cccac9\"\n                    fontFamily=\"din-round, sans-serif\"\n                    fontSize=\"17px\"\n                  >\n                    {day}\n                  </text>\n                </g>\n              ))}\n            </g>\n            <g\n              transform=\"\"\n              fill=\"none\"\n              fontSize=\"10\"\n              fontFamily=\"sans-serif\"\n              textAnchor=\"end\"\n            >\n              <path\n                className=\"GNoB0\"\n                d={`M0,0L250,0L250,150L0,150Z`}\n                fill=\"#ffc800\"\n                fillOpacity=\"0.1\"\n              ></path>\n              <path\n                className=\"GNoB0\"\n                d={`M0,0${dotsData.map(({ x, y }, idx) => {\n                  if (idx === 0) return \"M\" + x + \",\" + y;\n                  return \"L\" + x + \",\" + y;\n                })}L250,150L208.33333333333334,150L166.66666666666666,150L125,150L83.33333333333333,150L41.666666666666664,150L0,150Z`}\n                fill=\"#fff\"\n                fillOpacity=\"1\"\n                style={{ transform: \"scaleY(-1) translateY(-150px)\" }}\n              ></path>\n\n              <path\n                className=\"QZq6Z\"\n                d={`${dotsData.map(({ x, y }, idx) => {\n                  if (idx === 0) return \"M\" + x + \",\" + y;\n                  return \"L\" + x + \",\" + y;\n                })}`}\n                fillOpacity=\"0\"\n                stroke=\"#ffc800\"\n                strokeOpacity=\"0.5\"\n                strokeWidth=\"2\"\n                style={{ transform: \"scaleY(-1) translateY(-150px)\" }}\n              ></path>\n              {EXP_VALUES.map(({ val, coords }) => (\n                <g\n                  className=\"tick\"\n                  opacity=\"1\"\n                  transform={`translate(${coords})`}\n                  key={coords}\n                >\n                  <line\n                    stroke=\"#dedede\"\n                    x2=\"250\"\n                    strokeOpacity=\"0.5\"\n                    strokeWidth=\"2\"\n                  ></line>\n                  <text\n                    fill=\"currentColor\"\n                    x=\"-16\"\n                    dy=\"0.32em\"\n                    color=\"#cccac9\"\n                    fontFamily=\"din-round, sans-serif\"\n                    fontSize=\"17px\"\n                  >\n                    {val}\n                  </text>\n                </g>\n              ))}\n            </g>\n            <g>\n              {dotsData.map(({ x, y, exp }) => (\n                <circle\n                  className=\"_2Hihu\"\n                  cx={x}\n                  cy={y}\n                  fill={exp > 50 ? \"#ffc800\" : \"#fff\"}\n                  r=\"3.75\"\n                  stroke=\"#ffc800\"\n                  strokeWidth=\"2\"\n                  style={{ transform: \"scaleY(-1) translateY(-150px)\" }}\n                  key={x + y}\n                >\n                  <title>{exp} XP</title>\n                </circle>\n              ))}\n            </g>\n          </g>\n        </svg>\n      </ExpProgressBlock>\n    </div>\n  );\n}\n", "import { nanoid } from \"nanoid\";\nimport Footer from \"~/modules/Common/components/Footer\";\nimport LessonItem from \"./LessonItem\";\nimport { LessonsBlock, SkillsLineBlock, SkillsListContainer } from \"./lib\";\nimport PracticeLastAdded from \"./PracticeLastAdded\";\n\nexport type SkillsListItemType = {\n  id: string;\n  title: string;\n  lessonsAmount: number;\n  currentLesson: number;\n  lineNumber: number;\n};\n\nexport default function SkillsList({\n  skills,\n  languageTitle,\n}: {\n  skills: SkillsListItemType[];\n  languageTitle: string;\n}) {\n  const lineNumbers = [\n    ...new Set(skills.map((dataItem) => dataItem.lineNumber)),\n  ];\n\n  return (\n    <SkillsListContainer>\n      <div style={{ display: \"flex\", flexGrow: 1 }}>\n        <div style={{ display: \"flex\", alignItems: \"flex-end\" }}>\n          {skills.length > 0 && <PracticeLastAdded />}\n        </div>\n        <SkillsLineBlock>\n          {lineNumbers.map((lineNumber) => (\n            <LessonsBlock key={nanoid()}>\n              {skills.map((dataItem) => {\n                if (dataItem.lineNumber === lineNumber) {\n                  return (\n                    <LessonItem\n                      key={dataItem.id}\n                      {...dataItem}\n                      editLink={`/${languageTitle}/constructor/${dataItem.id}`}\n                    />\n                  );\n                }\n              })}\n            </LessonsBlock>\n          ))}\n        </SkillsLineBlock>\n      </div>\n      <Footer />\n    </SkillsListContainer>\n  );\n}\n", "import styled from \"@emotion/styled\";\n\nconst FooterLine = styled(\"hr\")`\n  border: 0;\n  border-top: 2px solid #e5e5e5;\n  margin: 0 0 48px;\n`;\n\nconst FooterText = styled(\"p\")`\n  text-align: center;\n  color: #afafaf;\n  font-family: Nunito;\n  margin: 0;\n`;\n\nconst LinkWithHover = styled(\"a\")`\n  &:hover {\n    filter: brightness(1.3);\n  }\n`;\n\nexport { FooterLine, FooterText, LinkWithHover };\n", "import { FooterLine, FooterText, LinkWithHover } from \"./lib\";\n\nexport default function Footer() {\n  return (\n    <footer>\n      <FooterLine />\n      <div style={{ paddingBottom: 28 }}>\n        <FooterText>\n          Inspired by{\" \"}\n          <LinkWithHover href=\"https://www.duolingo.com\" target=\"_blank\">\n            Duolingo\n          </LinkWithHover>\n        </FooterText>\n      </div>\n    </footer>\n  );\n}\n", "import Footer from \"./Footer\";\n\nexport default Footer;\n", "import { useEffect, useRef, useState } from \"react\";\nimport {\n  LessonProgress,\n  LessonProgressInner,\n  LessonTitle,\n  LessonBlockMenu,\n  LessonBlockMenuTriangle,\n  LessonBlockMenuTriangleContent,\n  LessonBlockInner,\n  LessonBlockLink,\n  LessonBlockButton,\n  LessonBlock,\n  LessonsContainer,\n} from \"./lib\";\nimport Bin from \"~/styles/bin.svg\";\nimport useOnClickOutside from \"~/hooks/useOnClickOutside\";\nimport { Form, useTransition } from \"@remix-run/react\";\nimport { SkillsListItemType } from \"./SkillsList\";\n\ntype LessonItem = SkillsListItemType & {\n  editLink: string;\n};\n\nexport default function LessonItem({\n  id,\n  title,\n  currentChapter,\n  chapters,\n  editLink,\n}: LessonItem) {\n  const [isOpened, setIsOpened] = useState(false);\n  const transition = useTransition();\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if (transition.state === \"loading\") {\n      setIsOpened(false);\n    }\n  }, [transition.state]);\n  useOnClickOutside(ref, () => setIsOpened(false));\n\n  const isDisabled = transition.state !== \"idle\";\n  const exp = (currentChapter / chapters) * 100;\n  const skillLink = `/skill/${title}/${\n    currentChapter / chapters === 1 ? \"practice\" : currentChapter + 1\n  }`;\n\n  function toggleMenu() {\n    setIsOpened(!isOpened);\n  }\n\n  const startButtonMessage = exp < 100 ? \"Start +16 XP\" : \"Practice +16 XP\";\n\n  return (\n    <LessonsContainer>\n      <LessonBlock ref={ref}>\n        <button key={id} aria-labelledby={title} onClick={toggleMenu}>\n          <LessonProgress exp={exp}>\n            <LessonProgressInner />\n          </LessonProgress>\n          <LessonTitle>{title}</LessonTitle>\n        </button>\n        <LessonBlockMenu isOpened={isOpened}>\n          <LessonBlockMenuTriangle>\n            <LessonBlockMenuTriangleContent />\n          </LessonBlockMenuTriangle>\n          <LessonBlockInner>\n            <div style={{ display: \"flex\" }}>\n              <LessonBlockLink to={editLink}>Edit</LessonBlockLink>\n              <Form method=\"post\">\n                <input type=\"hidden\" name=\"id\" value={id} />\n                <LessonBlockButton\n                  type=\"submit\"\n                  disabled={isDisabled}\n                  title=\"Delete skill\"\n                  name=\"_action\"\n                  value=\"Delete skill\"\n                >\n                  <img src={Bin} alt=\"delete\" width={20} height={20} />\n                </LessonBlockButton>\n              </Form>\n            </div>\n            {/* If the skill is 100% done, then we just repeat all lessons from it */}\n            {/* Otherwise we study lessons only from next chapter */}\n            <LessonBlockLink to={skillLink}>\n              {startButtonMessage}\n            </LessonBlockLink>\n          </LessonBlockInner>\n        </LessonBlockMenu>\n      </LessonBlock>\n    </LessonsContainer>\n  );\n}\n", "import { Ref, useEffect } from \"react\";\n\nexport default function useOnClickOutside(ref: any, handler: Function) {\n  useEffect(\n    () => {\n      const listener = (event: Event) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n        handler(event);\n      };\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}\n", "import Icon from \"~/styles/practice_last_added.svg\";\nimport { PracticeLastAddedContainer, PracticeLastAddedLink } from \"./lib\";\n\nexport default function PracticeLastAdded() {\n  return (\n    <PracticeLastAddedContainer>\n      <PracticeLastAddedLink to=\"/practice\" title=\"Practice\">\n        <img\n          src={Icon}\n          alt=\"Practice last added lessons\"\n          height={32}\n          width={38.7}\n        />\n      </PracticeLastAddedLink>\n    </PracticeLastAddedContainer>\n  );\n}\n", "import { prisma } from \"~/db.server\";\nimport Lesson from \"~/modules/Skill\";\nimport { getUser } from \"~/session.server\";\nimport { User, WeeklyActivity } from \"@prisma/client\";\nimport { getWeekDay } from \"~/utils\";\nimport { ActionArgs, json, redirect } from \"@remix-run/node\";\nimport type { LoaderArgs } from \"@remix-run/node\";\nimport { useLoaderData, useParams, useSubmit } from \"@remix-run/react\";\nimport { getStepsForPracticing } from \"~/models/lesson.server\";\nimport { getActiveLanguage } from \"~/models/language.server\";\nimport { getTodayTotalXP } from \"~/models/user.server\";\n\nexport function ErrorBoundary() {\n  const { lessonId } = useParams();\n  return (\n    <div className=\"error-container\">{`There was an error loading lesson by the id ${lessonId}. Sorry.`}</div>\n  );\n}\n\nexport const action = async ({ request }: ActionArgs) => {\n  const form = await request.formData();\n  const expData = Number(form.get(\"exp\"));\n  const user = await getUser(request);\n\n  if (!user) {\n    return redirect(\"/login\");\n  }\n\n  const today = getWeekDay() as keyof WeeklyActivity;\n\n  const newUserActivity = user.weeklyActivity;\n  newUserActivity[today] = newUserActivity[today] + 10;\n\n  await prisma.user.update({\n    where: {\n      id: user?.id,\n    },\n    data: {\n      weeklyActivity: { ...newUserActivity },\n    },\n  });\n\n  return redirect(`/`);\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const activeLanguage = await getActiveLanguage(request);\n\n  if (!activeLanguage) {\n    throw new Error(`No active language has found`);\n  }\n\n  const steps = await getStepsForPracticing(activeLanguage.id);\n\n  if (steps.length === 0) {\n    throw new Error(\"Steps for practicing are not found\");\n  }\n\n  const totalXP = await getTodayTotalXP(request);\n\n  return json({ steps, totalXP });\n};\n\nexport default function LessonScreen() {\n  const { steps, totalXP } = useLoaderData<typeof loader>();\n\n  return <Lesson steps={steps} totalXP={totalXP} />;\n}\n", "import { redirect } from \"@remix-run/node\";\nimport type { ActionArgs } from \"@remix-run/node\";\nimport { logout } from \"~/session.server\";\n\nexport const action = async ({ request }: ActionArgs) => {\n  return logout(request);\n};\n\nexport const loader = async () => {\n  return redirect(\"/\");\n};\n", "import { getUser } from \"~/session.server\";\nimport { getLanguages } from \"~/models/language.server\";\nimport { redirect } from \"@remix-run/node\";\n\nexport const loader = async ({ request }: { request: Request }) => {\n  const user = await getUser(request);\n  if (!user) {\n    return redirect(\"/login\");\n  }\n\n  const languages = await getLanguages(request);\n  const activeLanguageTitle = languages?.find((it) => it.active)?.title;\n\n  return redirect(`/${activeLanguageTitle}/skills`);\n};\n", "import type { ActionArgs, LoaderArgs, MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useTransition } from \"@remix-run/react\";\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { createUser, verifyLogin } from \"~/models/user.server\";\nimport {\n  ErrorMessage,\n  LoginButton,\n  LoginContainer,\n  LoginContinerInner,\n  LoginInput,\n  LoginTitle,\n  LoginToggle,\n} from \"~/components/lib\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport type ActionData = {\n  errors?: {\n    username?: string;\n    password?: string;\n  };\n  fields?: {\n    action: string;\n    password: string;\n  };\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n  const formData = await request.formData();\n  const action = formData.get(\"action\");\n  const username = formData.get(\"username\") as string;\n  const password = formData.get(\"password\") as string;\n  const user = await verifyLogin(username, password);\n\n  if (user) {\n    return createUserSession({\n      request,\n      userId: user.id,\n      redirectTo: \"/\",\n    });\n  }\n\n  if (action === \"register\") {\n    const newUser = await createUser(username, password);\n\n    await createUserSession({\n      request,\n      userId: newUser.id,\n      redirectTo: \"/\",\n    });\n  }\n\n  return json<ActionData>(\n    {\n      errors: { username: \"Invalid username or password\" },\n      fields: { action: \"login\", password: \"\" },\n    },\n    { status: 400 }\n  );\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\nexport default function LoginPage() {\n  const actionData = useActionData<typeof action>();\n  const transition = useTransition();\n\n  const [isLogin, setIsLogin] = useState(\n    actionData && actionData?.fields?.action === \"login\"\n      ? true\n      : !actionData\n      ? true\n      : false\n  );\n\n  const usernameRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.username) {\n      usernameRef.current?.focus();\n    }\n    if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  const isLoginning = transition.submission?.formData.get(\"action\") === \"login\";\n  const isRegistering =\n    transition.submission?.formData.get(\"action\") === \"register\";\n  const submitLoginText = isLoginning ? \"Signing in...\" : \"Sign in\";\n  const submitRegisterText = isRegistering ? \"Signing up...\" : \"Sign up\";\n\n  return (\n    <LoginContainer>\n      <LoginContinerInner>\n        <Form method=\"post\" style={{ width: \"100%\", maxWidth: 375 }}>\n          <LoginTitle>{isLogin ? \"Login\" : \"Register\"}</LoginTitle>\n          <LoginToggle htmlFor=\"register\" style={{ zIndex: isLogin ? 1 : -1 }}>\n            <input\n              type=\"radio\"\n              name=\"action\"\n              id=\"register\"\n              value=\"register\"\n              onChange={() => setIsLogin(!isLogin)}\n              style={{ visibility: \"hidden\", position: \"absolute\" }}\n              checked={!isLogin}\n            />\n            {isLogin ? \"Sign up\" : \"Sign in\"}\n          </LoginToggle>\n          <LoginToggle htmlFor=\"login\" style={{ zIndex: !isLogin ? 1 : -1 }}>\n            <input\n              type=\"radio\"\n              name=\"action\"\n              id=\"login\"\n              value=\"login\"\n              onChange={() => setIsLogin(!isLogin)}\n              style={{ visibility: \"hidden\", position: \"absolute\" }}\n              checked={isLogin}\n            />\n            {isLogin ? \"Sign up\" : \"Sign in\"}\n          </LoginToggle>\n          <div style={{ marginTop: 8 }}>\n            <LoginInput\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              ref={usernameRef}\n              id=\"username\"\n              autoFocus={true}\n              required\n            />\n\n            <LoginInput\n              name=\"password\"\n              id=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              ref={passwordRef}\n              required\n            />\n\n            {actionData?.errors?.username && (\n              <ErrorMessage role=\"alert\" id=\"username-error\">\n                {actionData.errors.username}\n              </ErrorMessage>\n            )}\n          </div>\n          <div style={{ height: 50, marginTop: 20 }}>\n            <LoginButton type=\"submit\">\n              {isLogin ? submitLoginText : submitRegisterText}\n            </LoginButton>\n          </div>\n        </Form>\n      </LoginContinerInner>\n    </LoginContainer>\n  );\n}\n", "export default {'version':'b8c6a9a9','entry':{'module':'/build/entry.client-VPQLSXU4.js','imports':['/build/_shared/chunk-LL4SA2R3.js','/build/_shared/chunk-5KL4PAQL.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-U2IDF56D.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/$language':{'id':'routes/$language','parentId':'root','path':':language','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$language-4QQND7AA.js','imports':['/build/_shared/chunk-M2ND3YFM.js','/build/_shared/chunk-GLWAIFE6.js','/build/_shared/chunk-YD6QWEBK.js','/build/_shared/chunk-5L3KKYQR.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/$language/constructor/$skillId':{'id':'routes/$language/constructor/$skillId','parentId':'routes/$language','path':'constructor/:skillId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$language/constructor/$skillId-FRRYMWYR.js','imports':['/build/_shared/chunk-WOBLJIZQ.js','/build/_shared/chunk-LV66H3CS.js','/build/_shared/chunk-XQM7RU2M.js','/build/_shared/chunk-HS3CV63H.js','/build/_shared/chunk-DCURUL57.js','/build/_shared/chunk-727OU6UJ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$language/constructor/new':{'id':'routes/$language/constructor/new','parentId':'routes/$language','path':'constructor/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$language/constructor/new-US5PBKPQ.js','imports':['/build/_shared/chunk-LV66H3CS.js','/build/_shared/chunk-XQM7RU2M.js','/build/_shared/chunk-DCURUL57.js','/build/_shared/chunk-727OU6UJ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/$language/skills':{'id':'routes/$language/skills','parentId':'routes/$language','path':'skills','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$language/skills-IKHFEP6R.js','imports':['/build/_shared/chunk-HS3CV63H.js','/build/_shared/chunk-DCURUL57.js','/build/_shared/chunk-727OU6UJ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-IBPJR7UM.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-2INDKJJ7.js','imports':['/build/_shared/chunk-M2ND3YFM.js','/build/_shared/chunk-GLWAIFE6.js','/build/_shared/chunk-5L3KKYQR.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-DOMDNNGV.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/practice':{'id':'routes/practice','parentId':'root','path':'practice','index':undefined,'caseSensitive':undefined,'module':'/build/routes/practice-UHL5XSUT.js','imports':['/build/_shared/chunk-OCFADSEQ.js','/build/_shared/chunk-M2ND3YFM.js','/build/_shared/chunk-WOBLJIZQ.js','/build/_shared/chunk-XQM7RU2M.js','/build/_shared/chunk-GLWAIFE6.js','/build/_shared/chunk-HS3CV63H.js','/build/_shared/chunk-YD6QWEBK.js','/build/_shared/chunk-5L3KKYQR.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/skill/$title/$chapter':{'id':'routes/skill/$title/$chapter','parentId':'root','path':'skill/:title/:chapter','index':undefined,'caseSensitive':undefined,'module':'/build/routes/skill/$title/$chapter-HVMBHS6F.js','imports':['/build/_shared/chunk-OCFADSEQ.js','/build/_shared/chunk-M2ND3YFM.js','/build/_shared/chunk-XQM7RU2M.js','/build/_shared/chunk-HS3CV63H.js','/build/_shared/chunk-727OU6UJ.js','/build/_shared/chunk-YD6QWEBK.js','/build/_shared/chunk-5L3KKYQR.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/skill/$title/practice':{'id':'routes/skill/$title/practice','parentId':'root','path':'skill/:title/practice','index':undefined,'caseSensitive':undefined,'module':'/build/routes/skill/$title/practice-REV4DWZT.js','imports':['/build/_shared/chunk-OCFADSEQ.js','/build/_shared/chunk-M2ND3YFM.js','/build/_shared/chunk-XQM7RU2M.js','/build/_shared/chunk-HS3CV63H.js','/build/_shared/chunk-727OU6UJ.js','/build/_shared/chunk-YD6QWEBK.js','/build/_shared/chunk-5L3KKYQR.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true}},'url':'/build/manifest-B8C6A9A9.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/skill/$title/$chapter.tsx\";\nimport * as route2 from \"./routes/skill/$title/practice.tsx\";\nimport * as route3 from \"./routes/$language.tsx\";\nimport * as route4 from \"./routes/$language/constructor/$skillId.tsx\";\nimport * as route5 from \"./routes/$language/constructor/new.tsx\";\nimport * as route6 from \"./routes/$language/skills.tsx\";\nimport * as route7 from \"./routes/practice.tsx\";\nimport * as route8 from \"./routes/logout.tsx\";\nimport * as route9 from \"./routes/index.tsx\";\nimport * as route10 from \"./routes/login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_meta\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/skill/$title/$chapter\": {\n      id: \"routes/skill/$title/$chapter\",\n      parentId: \"root\",\n      path: \"skill/:title/:chapter\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/skill/$title/practice\": {\n      id: \"routes/skill/$title/practice\",\n      parentId: \"root\",\n      path: \"skill/:title/practice\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/$language\": {\n      id: \"routes/$language\",\n      parentId: \"root\",\n      path: \":language\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/$language/constructor/$skillId\": {\n      id: \"routes/$language/constructor/$skillId\",\n      parentId: \"routes/$language\",\n      path: \"constructor/:skillId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/$language/constructor/new\": {\n      id: \"routes/$language/constructor/new\",\n      parentId: \"routes/$language\",\n      path: \"constructor/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/$language/skills\": {\n      id: \"routes/$language/skills\",\n      parentId: \"routes/$language\",\n      path: \"skills\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/practice\": {\n      id: \"routes/practice\",\n      parentId: \"root\",\n      path: \"practice\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "LogRocket", "ErrorBoundary", "import_react", "import_react", "styled", "import_styled", "import_react", "styled", "import_jsx_dev_runtime", "import_react", "action", "initialState", "reducer", "totalXP", "import_react", "import_react", "import_styled", "styled", "LessonTitle", "PairsList", "import_react", "import_jsx_dev_runtime", "React", "import_react", "import_react", "import_jsx_dev_runtime", "text", "answer", "import_react", "import_jsx_dev_runtime", "React", "import_react", "import_styled", "styled", "VariantsList", "VariantsItem", "import_styled", "styled", "VariantsList", "VariantsItem", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "e", "VariantsList", "VariantsItem", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "LessonTitle", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "LessonTitle", "PairsList", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "LessonTitle", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "LessonTitle", "VariantsList", "VariantsItem", "import_jsx_dev_runtime", "import_styled", "import_react", "styled", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "bcrypt", "bcrypt", "invariant", "import_react", "import_node", "import_jsx_dev_runtime", "ErrorBoundary", "ErrorBoundary", "action", "LessonScreen", "loader", "import_react", "import_node", "import_jsx_dev_runtime", "action", "loader", "LessonScreen", "ErrorBoundary", "CatchBoundary", "action", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "action", "loader", "CatchBoundary", "action", "loader", "import_react", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_react", "basicState", "action", "steps", "initialState", "reducer", "import_react", "import_react", "action", "variants", "pairs", "newVariants", "import_jsx_dev_runtime", "Variants", "LessonTitle", "import_react", "import_jsx_dev_runtime", "initialState", "LessonTitle", "import_react", "import_styled", "styled", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "initialState", "InsertWords", "LessonTitle", "InsertWords", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "React", "import_react", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "initialState", "LessonTitle", "import_jsx_dev_runtime", "Variants", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "action", "loader", "ErrorBoundary", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "ErrorBoundary", "action", "loader", "ErrorBoundary", "action", "loader", "import_node", "import_styled", "styled", "import_jsx_dev_runtime", "import_react", "import_nanoid", "import_styled", "styled", "import_jsx_dev_runtime", "Footer", "Footer", "import_react", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "ErrorBoundary", "action", "loader", "practice_exports", "ErrorBoundary", "action", "LessonScreen", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "ErrorBoundary", "action", "loader", "LessonScreen", "action", "loader", "import_node", "action", "loader", "loader", "import_node", "loader", "action", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "action", "loader", "_a", "_b", "_c", "_d", "practice_exports"]
}
