generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
  binaryTargets   = ["native"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  username     String   @unique
  passwordHash String
  streak       Int
  wasToday     Boolean
}

model Project {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  active     Boolean
  userId     String
  title      String
  repeats    Repeat[]
  study      Study[]
  practice   Practice[]
}

model Repeat {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  createdAt DateTime     @default(now())
  steps     RepeatStep[]
  exp       Int
  Project   Project?     @relation(fields: [projectId], references: [id])
  projectId String
}

type RepeatStep {
  number     Int
  type       String
  question   String?
  text       String?
  answer     String[]
  keywords   String[]
  definition  String?
  variants   String[]
}

type Variants {
  variants String[]
}

model Study {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   ContentItem[]
  Project   Project?      @relation(fields: [projectId], references: [id])
  projectId String
}

type ContentItem {
  tag   String
  value String
}

model Practice {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  goals     String[]
  projectId String
  days      Day[]
  Project   Project?      @relation(fields: [projectId], references: [id])
}

type Day {
  timestamp String
  tasks     Task[]
  habits    Habit[]
}

type Task {
  title       String
  isFulfilled  Boolean
  priority    Int?
}

type Habit {
  title       String
  isFulfilled  Boolean
  priority    Int?
}
